digraph "Core::OneArgumentDiffFunction"
{
 // INTERACTIVE_SVG=YES
  edge [fontname="Helvetica",fontsize="12",labelfontname="Helvetica",labelfontsize="12"];
  node [fontname="Helvetica",fontsize="12",shape=record];
  Node0 [label="{Core::OneArgumentDiffFunction\n||+ deriv()\l+ ~OneArgumentDiffFunction()\l- serialize()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node0 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node1 [label="{Core::OneArgumentFunction\l\< double, double \>\n||+ operator()()\l+ range_high()\l+ range_low()\l+ crossings()\l+ ~OneArgumentFunction()\l- serialize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCore_1_1OneArgumentFunction.html"];
  Node2 -> Node1 [dir="back",color="orange",fontsize="12",style="solid",label=" \< double, double \>" ,fontname="Helvetica"];
  Node2 [label="{Core::OneArgumentFunction\l\< InputDataType, OutputDataType \>\n||+ operator()()\l+ range_high()\l+ range_low()\l+ crossings()\l+ ~OneArgumentFunction()\l- serialize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCore_1_1OneArgumentFunction.html",tooltip="The base class for functions which take a single argument and return a single value. "];
  Node0 -> Node3 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{ConservedLEConvObliquity\lEvolution\n|- __lconv_evol\l- __orbital_angmom\l- __total2_minus_orbital2\l- __disk_lifetime\l|+ ConservedLEConvObliquity\lEvolution()\l+ operator()()\l+ range_high()\l+ range_low()\l+ crossings()\l+ deriv()\l- value()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classConservedLEConvObliquityEvolution.html"];
  Node0 -> Node4 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{ConservedLERadObliquityEvolution\n|- __lconv_evol\l- __conv_obliq_evol\l- __orbital_angmom\l- __initial_obliquity\l- __initial_lconv_perp\l- __disk_lifetime\l|+ ConservedLERadObliquityEvolution()\l+ operator()()\l+ range_high()\l+ range_low()\l+ crossings()\l+ deriv()\l- value()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classConservedLERadObliquityEvolution.html"];
  Node0 -> Node5 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{Core::InterpolatingFunction\lALGLIB\n|- __spline\l- __min_x\l- __max_x\l|+ InterpolatingFunctionALGLIB()\l+ InterpolatingFunctionALGLIB()\l+ InterpolatingFunctionALGLIB()\l+ operator()()\l+ deriv()\l+ range_high()\l+ range_low()\l+ crossings()\l- serialize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCore_1_1InterpolatingFunctionALGLIB.html",tooltip="Function which interpolates, with possible smoothing, between points. "];
  Node0 -> Node6 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{Core::ZeroFunction\n||+ deriv()\l+ operator()()\l+ range_high()\l+ range_low()\l+ crossings()\l- serialize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCore_1_1ZeroFunction.html",tooltip="A class representing a function that is identically zero. "];
  Node0 -> Node7 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 [label="{CosFunction\n|- __f\l- __deriv_x\l|+ CosFunction()\l+ operator()()\l+ deriv()\l+ order()\l+ range_high()\l+ range_low()\l+ crossings()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCosFunction.html",tooltip="The cosine of a function. "];
  Node0 -> Node8 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node8 [label="{ExponentialPlusFunc\n|- __scale\l- __rate\l- __deriv_x\l- __offset\l|+ ExponentialPlusFunc()\l+ operator()()\l+ deriv()\l+ order()\l+ range_high()\l+ range_low()\l+ crossings()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classExponentialPlusFunc.html",tooltip="Represents a function of the form offset + scale*exp(rate*x) as well as its derivative. "];
  Node0 -> Node9 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node9 [label="{FuncPlusFunc\n|- __f1\l- __f2\l- __deriv_x\l|+ FuncPlusFunc()\l+ operator()()\l+ deriv()\l+ order()\l+ range_high()\l+ range_low()\l+ crossings()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classFuncPlusFunc.html",tooltip="Represents the sum of two functions and the derivative. "];
  Node0 -> Node10 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node10 [label="{FunctionRatio\n|- __deriv_x\l- __f1\l- __f2\l|+ FunctionRatio()\l+ operator()()\l+ deriv()\l+ order()\l+ range_high()\l+ range_low()\l+ crossings()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classFunctionRatio.html",tooltip="The ratio of two functions;. "];
  Node0 -> Node11 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node11 [label="{FunctionToPower\n|- __f\l- __power\l- __deriv_x\l|+ FunctionToPower()\l+ operator()()\l+ deriv()\l+ order()\l+ range_high()\l+ range_low()\l+ crossings()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classFunctionToPower.html",tooltip="A function raised to some power. "];
  Node0 -> Node12 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node12 [label="{InverseFunction\n|- __to_invert\l- __tolerance\l- __solver\l- __solver_fdf\l- __solver_f\l- __target\l- __search_min\l- __search_max\l|+ InverseFunction()\l+ operator()()\l+ range_high()\l+ range_low()\l+ crossings()\l+ deriv()\l+ ~InverseFunction()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classInverseFunction.html",tooltip="The invrse of an existing function. "];
  Node0 -> Node13 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node13 [label="{InverseLinearLconvEvolution\l\< LINEAR_QUANTITY_TYPE \>\n|- __disk_lifetime\l- __evolution_rate\l- __linear_quantity\l- __find_lconv\l|+ InverseLinearLconvEvolution()\l+ operator()()\l+ disk_lifetime()\l+ range_high()\l+ range_low()\l+ crossings()\l+ deriv()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classInverseLinearLconvEvolution.html"];
  Node0 -> Node14 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node14 [label="{LogFunction\n|- __f\l- __deriv_x\l|+ LogFunction()\l+ operator()()\l+ deriv()\l+ order()\l+ range_high()\l+ range_low()\l+ crossings()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classLogFunction.html",tooltip="The natural logarithm of a function. "];
  Node0 -> Node15 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node15 [label="{Oblique10LinearQuantity\n|- __total_angmom\l- __initial_star_angmom\l- __angmom_scale\l- __initial_indefinite\l_integral\l|+ Oblique10LinearQuantity()\l+ operator()()\l+ range_high()\l+ range_low()\l+ crossings()\l+ deriv()\l- indefinite_integral()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classOblique10LinearQuantity.html",tooltip="A function of the stellar angular momentum expected to evolve linearly with time under the m = 1..."];
  Node0 -> Node16 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node16 [label="{Oblique20LinearQuantity\n|- __total_angmom\l- __initial_star_angmom\l- __angmom_scale\l- __initial_indefinite\l_integral\l|+ Oblique20LinearQuantity()\l+ operator()()\l+ range_high()\l+ range_low()\l+ crossings()\l+ deriv()\l- indefinite_integral()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classOblique20LinearQuantity.html",tooltip="A function of the stellar angular momentum expected to evolve linearly with time under the m = 1..."];
  Node0 -> Node17 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node17 [label="{PiecewiseFunction\n|- __deriv_x\l- __range_low\l- __range_high\l- __pieces\l|+ PiecewiseFunction()\l+ add_piece()\l+ operator()()\l+ deriv()\l+ order()\l+ range_high()\l+ range_low()\l+ crossings()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classPiecewiseFunction.html",tooltip="Several functions stiched together. "];
  Node0 -> Node18 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node18 [label="{ScaledFunction\n|- __f\l- __scale\l- __deriv_x\l|+ ScaledFunction()\l+ operator()()\l+ deriv()\l+ order()\l+ range_high()\l+ range_low()\l+ crossings()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classScaledFunction.html",tooltip="A function scaled by some constant. "];
  Node0 -> Node19 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node19 [label="{StellarEvolution::Evolving\lStellarQuantity\n|+ method\l- __mass\l- __feh\l- __min_age\l- __max_age\l- __log_age\l- __log_quantity\l- __initially_zero\l- __track_masses\l- __track_feh\l- __min_interp_ages\land 14 more...\l|+ EvolvingStellarQuantity()\l+ EvolvingStellarQuantity()\l+ age()\l+ operator()()\l+ deriv()\l+ range_high()\l+ range_low()\l+ discontinuities()\l+ ages()\l# age_to_interp_param()\l# interp_param_to_age()\l- track_index()\l- track_in_range()\l- track_in_range()\l- check_grid_range()\l- find_cell()\l- set_interp_age_ranges()\l- evaluate_track()\l- check_grid_expansion\l_directions()\l- expand_grid()\l- update_interpolation_grid()\l- interpolate()\l- age_to_interp_param()\l- interp_param_to_age()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classStellarEvolution_1_1EvolvingStellarQuantity.html",tooltip="A class for stellar properties that depend on age. "];
  Node19 -> Node20 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node20 [label="{StellarEvolution::Polynomial\lEvolutionQuantity\n|- __poly_coef\l- __xmin\l- __xmax\l- __deriv_x\l- __empty_vector\l|+ PolynomialEvolutionQuantity()\l+ select_interpolation\l_region()\l+ operator()()\l+ range_low()\l+ range_high()\l+ discontinuities()\l+ previous_discontinuity()\l+ next_discontinuity()\l+ enable_next_interpolation\l_region()\l+ deriv()\l+ order()\l+ kind()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classStellarEvolution_1_1PolynomialEvolutionQuantity.html",tooltip="An EvolvingStellar quantity that uses a polynomial instead of interpolating. "];
  Node19 -> Node21 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node21 [label="{StellarEvolution::SumQuantity\n|- q1\l- q2\l- destroy_qs\l|+ SumQuantity()\l+ select_interpolation\l_region()\l+ operator()()\l+ deriv()\l+ range_high()\l+ range_low()\l+ next_discontinuity()\l+ enable_next_interpolation\l_region()\l+ crossings()\l+ ~SumQuantity()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classStellarEvolution_1_1SumQuantity.html",tooltip="A clas for stellar quantities that are the sum of two other quantities. "];
  Node19 -> Node22 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node22 [label="{StellarEvolution::ZeroQuantity\n||+ select_interpolation\l_region()\l+ operator()()\l+ deriv()\l+ range_high()\l+ range_low()\l+ next_discontinuity()\l+ enable_next_interpolation\l_region()\l+ crossings()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classStellarEvolution_1_1ZeroQuantity.html"];
}
