digraph "Core::FunctionDerivatives"
{
 // INTERACTIVE_SVG=YES
  edge [fontname="Helvetica",fontsize="12",labelfontname="Helvetica",labelfontsize="12"];
  node [fontname="Helvetica",fontsize="12",shape=record];
  Node0 [label="{Core::FunctionDerivatives\n||+ order()\l+ ~FunctionDerivatives()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node1 [label="{Core::CubicSplineDerivatives\n|- zeroth\l- first\l- second\l|+ CubicSplineDerivatives()\l+ order()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCore_1_1CubicSplineDerivatives.html",tooltip="A class for the derivatives of a cubic spline (=0 for order>2). "];
  Node0 -> Node2 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{Core::ZeroDerivatives\n||+ ZeroDerivatives()\l+ order()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCore_1_1ZeroDerivatives.html",tooltip="The derivatives of an identically zero quantity. "];
  Node0 -> Node3 [dir="back",color="firebrick4",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{CosFunction\n|- __f\l- __deriv_x\l|+ CosFunction()\l+ operator()()\l+ deriv()\l+ order()\l+ range_high()\l+ range_low()\l+ crossings()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCosFunction.html",tooltip="The cosine of a function. "];
  Node0 -> Node4 [dir="back",color="firebrick4",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{ExponentialPlusFunc\n|- __scale\l- __rate\l- __deriv_x\l- __offset\l|+ ExponentialPlusFunc()\l+ operator()()\l+ deriv()\l+ order()\l+ range_high()\l+ range_low()\l+ crossings()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classExponentialPlusFunc.html",tooltip="Represents a function of the form offset + scale*exp(rate*x) as well as its derivative. "];
  Node0 -> Node5 [dir="back",color="firebrick4",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{FuncPlusFunc\n|- __f1\l- __f2\l- __deriv_x\l|+ FuncPlusFunc()\l+ operator()()\l+ deriv()\l+ order()\l+ range_high()\l+ range_low()\l+ crossings()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classFuncPlusFunc.html",tooltip="Represents the sum of two functions and the derivative. "];
  Node0 -> Node6 [dir="back",color="firebrick4",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{FunctionRatio\n|- __deriv_x\l- __f1\l- __f2\l|+ FunctionRatio()\l+ operator()()\l+ deriv()\l+ order()\l+ range_high()\l+ range_low()\l+ crossings()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classFunctionRatio.html",tooltip="The ratio of two functions;. "];
  Node0 -> Node7 [dir="back",color="firebrick4",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 [label="{FunctionToPower\n|- __f\l- __power\l- __deriv_x\l|+ FunctionToPower()\l+ operator()()\l+ deriv()\l+ order()\l+ range_high()\l+ range_low()\l+ crossings()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classFunctionToPower.html",tooltip="A function raised to some power. "];
  Node0 -> Node8 [dir="back",color="firebrick4",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node8 [label="{LogFunction\n|- __f\l- __deriv_x\l|+ LogFunction()\l+ operator()()\l+ deriv()\l+ order()\l+ range_high()\l+ range_low()\l+ crossings()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classLogFunction.html",tooltip="The natural logarithm of a function. "];
  Node0 -> Node9 [dir="back",color="firebrick4",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node9 [label="{PiecewiseFunction\n|- __deriv_x\l- __range_low\l- __range_high\l- __pieces\l|+ PiecewiseFunction()\l+ add_piece()\l+ operator()()\l+ deriv()\l+ order()\l+ range_high()\l+ range_low()\l+ crossings()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classPiecewiseFunction.html",tooltip="Several functions stiched together. "];
  Node0 -> Node10 [dir="back",color="firebrick4",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node10 [label="{ScaledFunction\n|- __f\l- __scale\l- __deriv_x\l|+ ScaledFunction()\l+ operator()()\l+ deriv()\l+ order()\l+ range_high()\l+ range_low()\l+ crossings()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classScaledFunction.html",tooltip="A function scaled by some constant. "];
  Node0 -> Node11 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node11 [label="{StellarEvolution::LogDerivatives\n|- __x\l- __log_x\l- __log_y\l- __underlying_deriv\l_values\l- __deriv_values\l|+ LogDerivatives()\l+ order()\l# calc_deriv()\l- transform_log_x_deriv()\l- transform_log_y_deriv()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classStellarEvolution_1_1LogDerivatives.html",tooltip="Calculate dy/dx given dy/dx, dy/dln(x), dln(y)/dx or dln(y)/dln(x). "];
  Node11 -> Node12 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node12 [label="{StellarEvolution::Interpolated\lDerivatives\n|- __stellar_mass\l- __stellar_feh\l- __interp_deriv\l- __interp_masses\l- __interp_feh\l- __delete_derivatives\l|+ InterpolatedDerivatives()\l+ ~InterpolatedDerivatives()\l# calc_deriv()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classStellarEvolution_1_1InterpolatedDerivatives.html",tooltip="Derivative class for stellar quantities which are interpolated age, mass and [Fe/H]. "];
  Node11 -> Node13 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node13 [label="{StellarEvolution::Remove\lLogDeriv\n|- __log_deriv\l- __delete_deriv\l|+ RemoveLogDeriv()\l+ ~RemoveLogDeriv()\l# calc_deriv()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classStellarEvolution_1_1RemoveLogDeriv.html",tooltip="Return dy/dx given dy/dln(x), dln(y)/dx or dln(y)/dln(x). "];
  Node0 -> Node14 [dir="back",color="firebrick4",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node14 [label="{StellarEvolution::Polynomial\lEvolutionQuantity\n|- __poly_coef\l- __xmin\l- __xmax\l- __deriv_x\l- __empty_vector\l|+ PolynomialEvolutionQuantity()\l+ select_interpolation\l_region()\l+ operator()()\l+ range_low()\l+ range_high()\l+ discontinuities()\l+ previous_discontinuity()\l+ next_discontinuity()\l+ enable_next_interpolation\l_region()\l+ deriv()\l+ order()\l+ kind()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classStellarEvolution_1_1PolynomialEvolutionQuantity.html",tooltip="An EvolvingStellar quantity that uses a polynomial instead of interpolating. "];
  Node0 -> Node15 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node15 [label="{StellarEvolution::SumDerivatives\n|- q1_deriv\l- q2_deriv\l- destroy_derivs\l|+ SumDerivatives()\l+ order()\l+ ~SumDerivatives()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classStellarEvolution_1_1SumDerivatives.html",tooltip="Derivative class for a quantity that is the sum of two other quantities. "];
}
