digraph "Evolve::StoppingCondition"
{
 // INTERACTIVE_SVG=YES
  edge [fontname="Helvetica",fontsize="12",labelfontname="Helvetica",labelfontsize="12"];
  node [fontname="Helvetica",fontsize="12",shape=record];
  Node0 [label="{Evolve::StoppingCondition\n|- __expected_crossing\l_deriv_sign\l|+ StoppingCondition()\l+ operator()()\l+ num_subconditions()\l+ type()\l+ reached()\l+ expected_crossing_deriv_sign()\l+ describe()\l+ ~StoppingCondition()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node1 [label="{Evolve::BreakLockCondition\n|- __system\l- __locked_zone_index\l|+ BreakLockCondition()\l+ operator()()\l+ num_subconditions()\l+ type()\l+ reached()\l+ expected_crossing_deriv_sign()\l+ describe()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEvolve_1_1BreakLockCondition.html",tooltip="Satisfied when the maximum tidal torque that the planet can exert on the star is no longer sufficient..."];
  Node0 -> Node2 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{Evolve::CombinedStopping\lCondition\n|- __sub_conditions\l- __num_subconditions\l- __delete_subcond\l- __types\l|+ CombinedStoppingCondition()\l+ operator\|=()\l+ operator\|=()\l+ operator()()\l+ no_delete_subcond()\l+ num_subconditions()\l+ type()\l+ reached()\l+ expected_crossing_deriv_sign()\l+ describe()\l+ ~CombinedStoppingCondition()\l- update_meta_information()\l- add_subcondition_values()\l- find_condition()\l- find_condition()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEvolve_1_1CombinedStoppingCondition.html",tooltip="A class combining the the outputs of multiple stopping conditions. "];
  Node0 -> Node3 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{Evolve::ExternalStopping\lCondition\n||+ type()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEvolve_1_1ExternalStoppingCondition.html",tooltip="A base class for all external stopping conditions. "];
  Node3 -> Node4 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{Evolve::RotFastCondition\n|- __spin_thres\l- __zone\l|+ RotFastCondition()\l+ operator()()\l+ describe()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEvolve_1_1RotFastCondition.html",tooltip="Satisfied when a zone is rotating faster than a threshold. "];
  Node0 -> Node5 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{Evolve::LagForcingFrequency\lBreakCondition\n|- __orbital_frequency\l_multiplier\l- __spin_frequency_multiplier\l- __zone\l- __body\l- __other_body\l- __term_index\l- __powerlaw_index\l- __num_subconditions\l|+ LagForcingFrequencyBreak\lCondition()\l+ operator()()\l+ reached()\l+ num_subconditions()\l+ type()\l+ expected_crossing_deriv_sign()\l+ describe()\l+ ~LagForcingFrequencyBreak\lCondition()\l- set_num_subconditions()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEvolve_1_1LagForcingFrequencyBreakCondition.html",tooltip="satisfied when a forcing frequency reaches a critical value. "];
  Node0 -> Node6 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{Evolve::NoStopCondition\n||+ operator()()\l+ type()\l+ reached()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEvolve_1_1NoStopCondition.html",tooltip="A stopping condition that is never satisfied. "];
  Node0 -> Node7 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 [label="{Evolve::SecondaryDeathCondition\n|- __system\l|+ SecondaryDeathCondition()\l+ operator()()\l+ type()\l+ reached()\l+ describe()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEvolve_1_1SecondaryDeathCondition.html",tooltip="Satisfied when the planet enters below either the roche sphere or the stellar photosphere. "];
  Node0 -> Node8 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node8 [label="{Evolve::SynchronizedCondition\n|- __orbital_freq_mult\l- __spin_freq_mult\l- __primary\l- __zone_index\l- __zone\l- __system\l|+ SynchronizedCondition()\l+ operator()()\l+ type()\l+ orbital_frequency_multiplier()\l+ spin_frequency_multiplier()\l+ reached()\l+ describe()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEvolve_1_1SynchronizedCondition.html",tooltip="Satisfied when some multiples of the orbit and stellar rotation are synchronized. ..."];
  Node0 -> Node9 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node9 [label="{Star::WindSaturationCondition\n|- __saturation_freq\l- __body\l- __other_body\l- __primary\l|+ WindSaturationCondition()\l+ operator()()\l+ type()\l+ reached()\l+ describe()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classStar_1_1WindSaturationCondition.html",tooltip="Satisfied when the surface zone of a body is spinning at exactly the wind saturation frequency..."];
}
