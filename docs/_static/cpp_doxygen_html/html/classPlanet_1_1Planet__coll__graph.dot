digraph "Planet::Planet"
{
 // INTERACTIVE_SVG=YES
  edge [fontname="Helvetica",fontsize="12",labelfontname="Helvetica",labelfontsize="12"];
  node [fontname="Helvetica",fontsize="12",shape=record];
  Node2 [label="{Planet::Planet\n||+ Planet()\l+ number_zones()\l+ zone()\l+ zone()\l+ zone()\l+ zone()\l+ angular_momentum_coupling()\l+ angular_momentum_loss()\l+ reached_critical_age()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{Evolve::DissipatingBody\n|- __power_norm\l- __orbital_frequency\l- __dorbital_frequency_da\l- __surface_lock_frequency\l- __angular_momentum\l_transfer\l- __tidal_torques_above\l- __tidal_torques_below\l- __orbit_entries\l- __orbit_power\l- __orbit_power_correction\l- __orbit_torque\l- __orbit_torque_correction\l- __num_locked_zones\l- __above_lock_fractions\l|+ DissipatingBody()\l+ configure()\l+ lock_zone_spin()\l+ unlock_zone_spin()\l+ number_locked_zones()\l+ nontidal_torque()\l+ tidal_torque()\l+ tidal_power()\l+ set_above_lock_fractions()\l+ tidal_orbit_power()\land 21 more...\l- normalize_torques()\l- collect_orbit_rates()\l- calculate_orbit_rate\l_corrections()\l- angular_momentum_transfer()\l- angular_momentum_transfer\l_from_top()\l- angular_momentum_transfer\l_from_bottom()\l- angular_momentum_transfer\l_to_zone()\l- calculate_nontidal\l_torques()\l- correct_orbit_power()\l- correct_orbit_torque()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEvolve_1_1DissipatingBody.html",tooltip="A base class for any body contributing to tidal dissipation. "];
  Node4 -> Node2 [color="grey25",fontsize="12",style="solid",label=" -__zone" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{Planet::PlanetZone\n|- __mass\l- __radius\l- __moment_of_inertia\l_factor\l|+ PlanetZone()\l+ love_coefficient()\l+ moment_of_inertia()\l+ moment_of_inertia()\l+ outer_radius()\l+ outer_radius()\l+ outer_mass()\l+ outer_mass()\l+ configure()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classPlanet_1_1PlanetZone.html",tooltip="The only zone of a LockedPlanet. "];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{Evolve::BrokenPowerlawPhase\lLagZone\n|- __dissipative\l- __tidal_frequency_breaks\l- __spin_frequency_breaks\l- __tidal_frequency_powers\l- __spin_frequency_powers\l- __break_phase_lags\l- __spin_index\l- __tidal_indices\l|+ BrokenPowerlawPhaseLagZone()\l+ setup()\l+ configure()\l+ modified_phase_lag()\l+ love_coefficient()\l+ stopping_conditions()\l+ change_e_order()\l+ dissipative()\l+ ~BrokenPowerlawPhaseLagZone()\l- tidal_term_index()\l- get_orbital_frequency()\l- reset()\l- set_spin_index()\l- get_tidal_index()\l- add_tidal_frequency\l_conditions()\l- print_configuration()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEvolve_1_1BrokenPowerlawPhaseLagZone.html",tooltip="A DissipatingZone where the phase lag is described by a broken powerlaw. "];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{Evolve::DissipatingZone\n|- __e_order\l- __angular_momentum\l- __spin_frequency\l- __orbital_frequency\l- __orbital_angmom\l- __power\l- __torque_x\l- __torque_y\l- __torque_z\l- __evolution_real\l- __evolution_integer\l- __locked_zone_index\l- __initializing\l- __torque_x_plus_coef\l- __torque_x_minus_coef\l|+ DissipatingZone()\l+ configure()\l+ forcing_frequency()\l+ set_reference_zone\l_angmom()\l+ periapsis_evolution()\l+ inclination_evolution()\l+ locked()\l+ locked()\l+ lock_held()\l+ release_lock()\land 34 more...\l# initializing()\l# configure_spin()\l- fix_forcing_frequency()\l- update_lock_to_lower\l_e_order()\l- update_locks_to_higher\l_e_order()\l- initialize_locks()\l- add_tidal_term()\l- check_locks_consistency()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEvolve_1_1DissipatingZone.html",tooltip="A layer of a system body for which the tidal bulge is not exactly in phase with the tidal potential..."];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="12",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 [label="{Evolve::ZoneOrientation\n|- __inclination\l- __periapsis\l|+ ZoneOrientation()\l+ configure()\l+ inclination()\l+ periapsis()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEvolve_1_1ZoneOrientation.html"];
  Node8 -> Node6 [color="grey25",fontsize="12",style="solid",label=" -__lock\n-__other_lock" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{Evolve::SpinOrbitLockInfo\n|- __orbital_freq_mult\l- __spin_freq_mult\l- __lock_direction\l|+ SpinOrbitLockInfo()\l+ SpinOrbitLockInfo()\l+ operator=()\l+ set_lock()\l+ spin()\l+ operator()()\l+ term()\l+ operator bool()\l+ lock_direction()\l+ lock_direction()\l+ orbital_frequency_multiplier()\l+ spin_frequency_multiplier()\l+ operator==()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEvolve_1_1SpinOrbitLockInfo.html",tooltip="Defines a lock between the spin of a dissipating body and the orbit. "];
  Node9 -> Node6 [color="grey25",fontsize="12",style="solid",label=" -__potential_term" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{Evolve::TidalPotentialTerms\n|- __e_order\l- __Ummp_inclination\l- __arg_of_periapsis\l- __Ummp\l- __Ummp_deriv\l- __Umm_coef\l|+ TidalPotentialTerms()\l+ change_e_order()\l+ current_e_order()\l+ configure()\l+ operator()()\l+ operator()()\l+ read_eccentricity_expansion()\l+ max_e_order()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEvolve_1_1TidalPotentialTerms.html"];
  Node10 -> Node9 [color="grey25",fontsize="12",style="solid",label=" -__pms" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{Evolve::EccentricityExpansion\lCoefficients\n|- __max_e_power\l- __alpha\l- __gamma_plus\l- __gamma_minus\l- __useable\l|+ EccentricityExpansionCoefficients()\l+ read()\l+ max_e_power()\l+ operator()()\l- inner_index()\l- p_m2s()\l- p_0s()\l- p_p2s()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEvolve_1_1EccentricityExpansionCoefficients.html",tooltip="A class which reads-in and provides a convenient interface to the  coefficients. "];
}
