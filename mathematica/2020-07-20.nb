(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1059709,      20585]
NotebookOptionsPosition[   1045174,      20156]
NotebookOutlinePosition[   1045520,      20171]
CellTagsIndexPosition[   1045477,      20168]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Function Definitions", "Section",
 CellChangeTimes->{{3.804249707395234*^9, 3.8042497128711557`*^9}}],

Cell["Don\[CloseCurlyQuote]t forget that there\[CloseCurlyQuote]s also an \
omega floating around", "Text",
 CellChangeTimes->{{3.8042498313032227`*^9, 3.8042498390280557`*^9}}],

Cell[CellGroupData[{

Cell["For m = 0", "Subsection",
 CellChangeTimes->{{3.804249894695382*^9, 3.8042498963048887`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"const1", "=", 
  RowBox[{"1", "/", 
   RowBox[{"(", 
    RowBox[{"2", "*", "Pi"}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8042498093016453`*^9, 3.804249818121458*^9}, 
   3.804249965516646*^9, 3.8042512786847644`*^9}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"2", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{3.8042509230129004`*^9, 3.804251279311183*^9, 
  3.8044441790749702`*^9, 3.804509439710074*^9, 3.8048666164478817`*^9, 
  3.804948517729862*^9, 3.8050252716506824`*^9, 3.8050362001948843`*^9, 
  3.805112242488683*^9, 3.8051969333252935`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"p0", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"const1", "*", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"I", "*", "s", "*", 
        RowBox[{"(", 
         RowBox[{"u", "-", 
          RowBox[{"e", "*", 
           RowBox[{"Sin", "[", "u", "]"}]}]}], ")"}]}], "]"}], " ", "/", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"e", "*", 
          RowBox[{"Cos", "[", "u", "]"}]}]}], ")"}], "^", "2"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Element", "[", 
         RowBox[{"e", ",", "Reals"}], "]"}], ",", 
        RowBox[{"e", ">", "0"}]}], "}"}]}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8042497417593374`*^9, 3.804249742971213*^9}, {
   3.804249823209738*^9, 3.804249825638482*^9}, 3.8042504083645954`*^9, {
   3.8045983989477015`*^9, 3.8045984024803524`*^9}, {3.804868511524465*^9, 
   3.804868512198599*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Np0", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"const1", "*", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"I", "*", "s", "*", 
        RowBox[{"(", 
         RowBox[{"u", "-", 
          RowBox[{"e", "*", 
           RowBox[{"Sin", "[", "u", "]"}]}]}], ")"}]}], "]"}], " ", "/", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"e", "*", 
          RowBox[{"Cos", "[", "u", "]"}]}]}], ")"}], "^", "2"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8042658667510514`*^9, 3.804265877173378*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p0NoPole", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"const1", "*", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"e", "^", "2"}]}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"3", "/", "2"}], ")"}]}], "*", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"I", "*", "s", "*", 
         RowBox[{"(", 
          RowBox[{"u", "-", 
           RowBox[{"e", "*", 
            RowBox[{"Sin", "[", "u", "]"}]}]}], ")"}]}], "]"}], " ", "/", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"e", "*", 
           RowBox[{"Cos", "[", "u", "]"}]}]}], ")"}], "^", "2"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"e", "\[GreaterEqual]", "0"}], ",", 
        RowBox[{"e", "\[LessEqual]", "1"}], ",", 
        RowBox[{"Element", "[", 
         RowBox[{"s", ",", "Integers"}], "]"}]}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.804249761345158*^9, 3.8042497632833605`*^9}, 
   3.804250412363885*^9, {3.804251048540388*^9, 3.8042510511909294`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Np0NoPole", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"const1", "*", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"e", "^", "2"}]}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"3", "/", "2"}], ")"}]}], "*", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"I", "*", "s", "*", 
         RowBox[{"(", 
          RowBox[{"u", "-", 
           RowBox[{"e", "*", 
            RowBox[{"Sin", "[", "u", "]"}]}]}], ")"}]}], "]"}], " ", "/", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"e", "*", 
           RowBox[{"Cos", "[", "u", "]"}]}]}], ")"}], "^", "2"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.804265380225936*^9, 3.804265383557848*^9}, 
   3.804265501784275*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["For m = 2", "Subsection",
 CellChangeTimes->{{3.804249904113641*^9, 3.8042499063096046`*^9}}],

Cell["\<\
There\[CloseCurlyQuote]s also an Exp[phi_not]
Apparently that\[CloseCurlyQuote]s actually handled in POET, never mind\
\>", "Text",
 CellChangeTimes->{{3.8042499424590483`*^9, 3.8042499548365602`*^9}, {
  3.8045092907088766`*^9, 3.8045093028715887`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"const2", "=", "1"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8042499566628637`*^9, 3.804249979544628*^9}, {
  3.804444005606981*^9, 3.8044440078359118`*^9}, {3.804444052392553*^9, 
  3.8044440527172546`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.804250923263668*^9, 3.8044440097880993`*^9, 
  3.80444405327074*^9, 3.80444417973635*^9, 3.804509440000804*^9, 
  3.8048666166806884`*^9, 3.8049485179616475`*^9, 3.805025271830516*^9, 
  3.805036200340717*^9, 3.8051122426495347`*^9, 3.8051969334641666`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sub integrals", "Subsubsection",
 CellChangeTimes->{{3.804250033439602*^9, 3.804250035291881*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pTwoA", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"const1", "*", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"e", "^", "2"}]}], ")"}], "*", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"I", "*", "s", "*", 
         RowBox[{"(", 
          RowBox[{"u", "-", 
           RowBox[{"e", "*", 
            RowBox[{"Sin", "[", "u", "]"}]}]}], ")"}]}], "]"}], " ", "/", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"e", "*", 
           RowBox[{"Cos", "[", "u", "]"}]}]}], ")"}], "^", "4"}]}], ")"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Element", "[", 
         RowBox[{"e", ",", "Reals"}], "]"}], ",", 
        RowBox[{"e", ">", "0"}]}], "}"}]}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.804250040670888*^9, {3.8042501766047144`*^9, 3.804250180610001*^9}, {
   3.804250227662328*^9, 3.8042502362513533`*^9}, {3.8045983112338076`*^9, 
   3.804598327552512*^9}, 3.8048739263243513`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pTwoB", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"const1", "*", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"e", "^", "2"}]}], ")"}], "*", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"I", "*", "s", "*", 
          RowBox[{"(", 
           RowBox[{"u", "-", 
            RowBox[{"e", "*", 
             RowBox[{"Sin", "[", "u", "]"}]}]}], ")"}]}], "]"}], " ", "/", 
        " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"e", "*", 
            RowBox[{"Cos", "[", "u", "]"}]}]}], ")"}], "^", "4"}]}], ")"}], 
      "*", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", "*", "u"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Element", "[", 
         RowBox[{"e", ",", "Reals"}], "]"}], ",", 
        RowBox[{"e", ">", "0"}]}], "}"}]}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.8042500524669437`*^9, 3.8042501965571966`*^9, {3.804250240331566*^9, 
   3.8042502567683086`*^9}, 3.8045983416954765`*^9, 3.804873934788295*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pTwoC", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"const1", "*", "I", "*", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"e", "^", "2"}]}], ")"}], "]"}], "*", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"I", "*", "s", "*", 
          RowBox[{"(", 
           RowBox[{"u", "-", 
            RowBox[{"e", "*", 
             RowBox[{"Sin", "[", "u", "]"}]}]}], ")"}]}], "]"}], " ", "/", 
        " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"e", "*", 
            RowBox[{"Cos", "[", "u", "]"}]}]}], ")"}], "^", "4"}]}], ")"}], 
      "*", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", "*", "u"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Element", "[", 
         RowBox[{"e", ",", "Reals"}], "]"}], ",", 
        RowBox[{"e", ">", "0"}]}], "}"}]}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.804250123974566*^9, 3.8042501980737896`*^9, {3.8042502750073767`*^9, 
   3.804250317539899*^9}, 3.8045983591945066`*^9, 3.8048739439690704`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pTwoD", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"const1", "*", "I", "*", "2", "*", "e", "*", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"e", "^", "2"}]}], ")"}], "]"}], "*", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"I", "*", "s", "*", 
          RowBox[{"(", 
           RowBox[{"u", "-", 
            RowBox[{"e", "*", 
             RowBox[{"Sin", "[", "u", "]"}]}]}], ")"}]}], "]"}], " ", "/", 
        " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"e", "*", 
            RowBox[{"Cos", "[", "u", "]"}]}]}], ")"}], "^", "4"}]}], ")"}], 
      "*", 
      RowBox[{"Sin", "[", "u", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Element", "[", 
         RowBox[{"e", ",", "Reals"}], "]"}], ",", 
        RowBox[{"e", ">", "0"}]}], "}"}]}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8042503495232115`*^9, 3.804250368877252*^9}, 
   3.804598367837075*^9, 3.8048739477889547`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Main Coefficients", "Subsubsection",
 CellChangeTimes->{{3.804250393279598*^9, 3.804250396836296*^9}}],

Cell["\<\
I\[CloseCurlyQuote]m not sure why I\[CloseCurlyQuote]m dividing by const1, \
but I don\[CloseCurlyQuote]t believe it\[CloseCurlyQuote]s causing any issues \
w/ regard to behavior, so I\[CloseCurlyQuote]m just going to leave it for now\
\>", "Text",
 CellChangeTimes->{{3.805027866337372*^9, 3.8050279142431445`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pPlus2", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"p0", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"pTwoA", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"pTwoB", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"pTwoC", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"pTwoD", "[", 
      RowBox[{"e", ",", "s"}], "]"}]}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8042503993529625`*^9, 3.8042505653888483`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pPlus2Ltd", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{"0", "-", 
     RowBox[{"pTwoA", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"pTwoB", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"pTwoC", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"pTwoD", "[", 
      RowBox[{"e", ",", "s"}], "]"}]}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8051122209196835`*^9, 3.8051122276684265`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pMinus2", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"const2", "/", "const1"}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"p0", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"pTwoA", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"pTwoB", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"pTwoC", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"pTwoD", "[", 
      RowBox[{"e", ",", "s"}], "]"}]}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.804250597517028*^9, 3.8042506447082243`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Also numerical integration versions", "Subsubsection",
 CellChangeTimes->{{3.8042657786658096`*^9, 3.804265785146796*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NpTwoA", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"const1", "*", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"e", "^", "2"}]}], ")"}], "*", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"I", "*", "s", "*", 
         RowBox[{"(", 
          RowBox[{"u", "-", 
           RowBox[{"e", "*", 
            RowBox[{"Sin", "[", "u", "]"}]}]}], ")"}]}], "]"}], " ", "/", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"e", "*", 
           RowBox[{"Cos", "[", "u", "]"}]}]}], ")"}], "^", "4"}]}], ")"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.804250040670888*^9, {3.8042501766047144`*^9, 3.804250180610001*^9}, {
   3.804250227662328*^9, 3.8042502362513533`*^9}, {3.8042658133805904`*^9, 
   3.804265825686167*^9}, 3.8042658973736267`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NpTwoB", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"const1", "*", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"e", "^", "2"}]}], ")"}], "*", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"I", "*", "s", "*", 
          RowBox[{"(", 
           RowBox[{"u", "-", 
            RowBox[{"e", "*", 
             RowBox[{"Sin", "[", "u", "]"}]}]}], ")"}]}], "]"}], " ", "/", 
        " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"e", "*", 
            RowBox[{"Cos", "[", "u", "]"}]}]}], ")"}], "^", "4"}]}], ")"}], 
      "*", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", "*", "u"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.8042500524669437`*^9, 3.8042501965571966`*^9, {3.804250240331566*^9, 
   3.8042502567683086`*^9}, {3.8042658153887234`*^9, 3.804265826907036*^9}, 
   3.8042659057668347`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NpTwoC", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"const1", "*", "I", "*", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"e", "^", "2"}]}], ")"}], "]"}], "*", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"I", "*", "s", "*", 
          RowBox[{"(", 
           RowBox[{"u", "-", 
            RowBox[{"e", "*", 
             RowBox[{"Sin", "[", "u", "]"}]}]}], ")"}]}], "]"}], " ", "/", 
        " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"e", "*", 
            RowBox[{"Cos", "[", "u", "]"}]}]}], ")"}], "^", "4"}]}], ")"}], 
      "*", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", "*", "u"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.804250123974566*^9, 3.8042501980737896`*^9, {3.8042502750073767`*^9, 
   3.804250317539899*^9}, {3.8042658162848916`*^9, 3.8042658285185375`*^9}, 
   3.8042659124256573`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NpTwoD", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"const1", "*", "I", "*", "2", "*", "e", "*", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"e", "^", "2"}]}], ")"}], "]"}], "*", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"I", "*", "s", "*", 
          RowBox[{"(", 
           RowBox[{"u", "-", 
            RowBox[{"e", "*", 
             RowBox[{"Sin", "[", "u", "]"}]}]}], ")"}]}], "]"}], " ", "/", 
        " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"e", "*", 
            RowBox[{"Cos", "[", "u", "]"}]}]}], ")"}], "^", "4"}]}], ")"}], 
      "*", 
      RowBox[{"Sin", "[", "u", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8042503495232115`*^9, 3.804250368877252*^9}, {
   3.8042658170551767`*^9, 3.804265830173004*^9}, 3.804265915996343*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NpPlus2", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Np0", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"NpTwoA", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"NpTwoB", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"NpTwoC", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"NpTwoD", "[", 
      RowBox[{"e", ",", "s"}], "]"}]}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8042503993529625`*^9, 3.8042505653888483`*^9}, {
  3.804265818224097*^9, 3.8042658582539387`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NpMinus2", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"const2", "/", "const1"}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Np0", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"NpTwoA", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"NpTwoB", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"NpTwoC", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"NpTwoD", "[", 
      RowBox[{"e", ",", "s"}], "]"}]}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.804250597517028*^9, 3.8042506447082243`*^9}, 
   3.804265819043331*^9, {3.804265849802784*^9, 3.8042658603619843`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NpPlus2NP", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"e", "^", "2"}]}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"3", "/", "2"}], ")"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Np0", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"NpTwoA", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"NpTwoB", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"NpTwoC", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"NpTwoD", "[", 
      RowBox[{"e", ",", "s"}], "]"}]}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8042705087263603`*^9, 3.8042705123370066`*^9}, {
  3.8042705460567083`*^9, 3.8042705631588335`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NpMinus2NP", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"e", "^", "2"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"3", "/", "2"}], ")"}]}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{"const2", "/", "const1"}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Np0", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"NpTwoA", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"NpTwoB", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"NpTwoC", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"NpTwoD", "[", 
      RowBox[{"e", ",", "s"}], "]"}]}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8045107895808163`*^9, 3.804510807983709*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Verifying Values", "Section",
 CellChangeTimes->{{3.8042509111678934`*^9, 3.8042509160723443`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p0", "[", 
  RowBox[{"e", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.804250978897027*^9, 3.8042509817164106`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["e", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]], ",", 
   RowBox[{"0", "<", "e", "<", "1"}]}], "]"}]], "Output",
 CellChangeTimes->{3.804250998578761*^9, 3.8042512998681064`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p0NoPole", "[", 
  RowBox[{"e", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.804251025443828*^9, 3.804251031301385*^9}, {
  3.8042510804897313`*^9, 3.8042510964978724`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{"1", ",", 
   RowBox[{"0", "<", "e", "<", "1"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.8042510362378073`*^9, 3.8042511011945133`*^9}, 
   3.804251307614911*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pPlus2", "[", 
  RowBox[{"e", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.8042511050079737`*^9, 3.804251108324895*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"5", " ", 
        SuperscriptBox["e", "2"]}], 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["e", "2"]}], ")"}], 
         RowBox[{"5", "/", "2"}]]}]], "+", 
      FractionBox["1", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["e", "2"]}], ")"}], 
        RowBox[{"3", "/", "2"}]]], "-", 
      FractionBox[
       RowBox[{"2", "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["e", "2"]}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["e", "2"]}], ")"}], 
         RowBox[{"5", "/", "2"}]]}]]}], ")"}], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}]], " ", "\[Pi]"}], ",", 
   RowBox[{"0", "<", "e", "<", "1"}]}], "]"}]], "Output",
 CellChangeTimes->{3.8042511481739044`*^9, 3.8042513254004025`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"ConditionalExpression", "[", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"5", " ", 
         SuperscriptBox["e", "2"]}], 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["e", "2"]}], ")"}], 
          RowBox[{"5", "/", "2"}]]}]], "+", 
       FractionBox["1", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["e", "2"]}], ")"}], 
         RowBox[{"3", "/", "2"}]]], "-", 
       FractionBox[
        RowBox[{"2", "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["e", "2"]}]}], 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["e", "2"]}], ")"}], 
          RowBox[{"5", "/", "2"}]]}]]}], ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}]], " ", "\[Pi]"}], ",", 
    RowBox[{"0", "<", "e", "<", "1"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8042511549755917`*^9, 3.804251164229006*^9}, 
   3.8042513392065887`*^9}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{"0", ",", 
   RowBox[{"0", "<", "e", "<", "1"}]}], "]"}]], "Output",
 CellChangeTimes->{3.804251164856419*^9, 3.804251340349527*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"pMinus2", "[", 
   RowBox[{"e", ",", "0"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8042511746223574`*^9, 3.80425118249205*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{"0", ",", 
   RowBox[{"0", "<", "e", "<", "1"}]}], "]"}]], "Output",
 CellChangeTimes->{3.8042511966019535`*^9, 3.8042513613220634`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["What do these things do without the p_0s?", "Section",
 CellChangeTimes->{{3.8049538816291246`*^9, 3.8049538975434093`*^9}, {
  3.804954043742614*^9, 3.804954043856517*^9}}],

Cell["i did not make a mistake i thought i made, sweet", "Text",
 CellChangeTimes->{{3.804953913922624*^9, 3.80495393183086*^9}, {
  3.8049540338510437`*^9, 3.8049540406785684`*^9}}],

Cell[CellGroupData[{

Cell["W/o the factor", "Subsection",
 CellChangeTimes->{{3.8050252884611263`*^9, 3.805025290748004*^9}}],

Cell["hi", "Text",
 CellChangeTimes->{{3.805025304287435*^9, 3.805025304465273*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpPlus2", "[", 
        RowBox[{"e", ",", "0"}], "]"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
        RowBox[{"Np0", "[", 
         RowBox[{"e", ",", "0"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpPlus2", "[", 
        RowBox[{"e", ",", "1"}], "]"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
        RowBox[{"Np0", "[", 
         RowBox[{"e", ",", "1"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpPlus2", "[", 
        RowBox[{"e", ",", "2"}], "]"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
        RowBox[{"Np0", "[", 
         RowBox[{"e", ",", "2"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpPlus2", "[", 
        RowBox[{"e", ",", "3"}], "]"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
        RowBox[{"Np0", "[", 
         RowBox[{"e", ",", "3"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpPlus2", "[", 
        RowBox[{"e", ",", "4"}], "]"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
        RowBox[{"Np0", "[", 
         RowBox[{"e", ",", "4"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpPlus2", "[", 
        RowBox[{"e", ",", "10"}], "]"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
        RowBox[{"Np0", "[", 
         RowBox[{"e", ",", "10"}], "]"}]}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), \
0\)]\)(1-\!\(\*SuperscriptBox[\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \
\(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 1\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 2\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 3\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 4\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), \
10\)]\)(1-\!\(\*SuperscriptBox[\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \
\(3/2\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Do they just equal -2Pi?\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.805036875569254*^9, {3.8050369437035904`*^9, 3.8050369442308836`*^9}, {
   3.8050369785019803`*^9, 3.8050370412833834`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.000024185766477748702`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(-2.49366499671666`*^-16\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.5939906358846744`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050370691434174`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050370692323666`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({4.503669942224799`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.734723475976807`*^-17\\)\[NoBreak] and \
\[NoBreak]\\!\\(3.820404467573641`*^-16\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.805037069235363*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318519448951320385675257047976413268819406710008479421958327293`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.7695567233744214`*^-13 + \\(\\(4.163336342344337`*^-17\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.367876784470429`*^-12\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050370694821787`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050370694961762`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050370699441853`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.805037070000201*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050370700401316`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
/w9duUP6
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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

        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
2TRkhHBAuaVqvxjTDI+Hf4yXCOeAPX/Mhb8XzfCE8w9+4hQHYp1+h3xVNMeT
5GYZxXMc0Lsglf/S3xxP3Sww1szmgFWvwXdTAQvMqYm7aNnEgY1nAg++cLbE
3KLV1q8wB2yEuXtz/Sln5ojZtHHgmsd6RtJZypEPcuw6OcBITpF8ftcSz+z8
cnt/Hwca+L8lPua3wnMtHj2+UxxwHh5J7Wixwt97DchzIlzID+2qTrCzxjyB
Qz92ruGCFG88nRFgjQUFwge/ruXC+ulTkdFJ1ljBuDLTi+TCtGtOiHabNd5T
SYjsUuXCmvZ3xTN6Njjr3AIfjz4XnCNiDy9o2mJt7SpunC8XIgbfxy4q2WHD
N1avdI9zIeqBSWneNjtsdmKq4osfFy4urxc9bGqHD9yQP3YwhAv/zPzmNTtu
h8+tThk3jOECO1Gdp6zGDvdNHh9cusqFDJHh5D9W9jgkSwWffsKFb4H7nrJy
HbDDtSMnljVTfbcyivqrHLBudpF4agsXaFIVRtPtDnjxLxXfwudc2KR034w+
64Dp11UEO3q4wFknyKw2c8S5RSpOEgyqT6tLo+YvRxxbfORX/jQXJLTPu7yU
cMKHS4rKNrC5oKqwpJ2t4YS57XJ27ymrZNzp2aTthP8Hb0kVBw==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
R8lQPhXi1v2EhMTlLgwvnCBDCuWj2/FiEkqNnehcMSLDjtrE75W4L8P8G5Yz
ZFhRfu0bWUJCg1k+zzlsyNAf+8FvArfu0kohtz0ZGPtTfqOnJCRaxpq68xIZ
juxPP8XAncwRHyPkQYbgOx4HDpeS0Lojzw3R62TId9eLiMLt1pDuJRlIhgAy
/Wg77j4BAVfZUDJg7yU9t5aRkI5vjq3iTTJ8K/nIqY/7WZe4uUocGepeP+IO
xy0sV6KnkUwGvbYIvyrcCbEKWpBGhjCrg7rjuJfHq5SO3cPHMy3Mj7uchC6C
hoz+AzL81dXYooT7a1aDsEk+GarmZFfMcaOlYyTzIjL4PhU97oG7zOzjlrOl
ZNDX/UaPwS1QdvKfzXMyJCjoTWfhjuXoXbCvxscnhOdwMe5Fx3P0i2/IIP57
M+0Fbl/iGnEAI4PMfuWtr3Avvbt/RP8DGX5JCVbW/B/30nSpbcfb2znb/fz/
uCjllmwXGSQqulwL/4933ajN7iNDvOS65x3cf8KEJ7jJZOg7dHc2BLe/YgN3
KI0M/iId3Q64l0cuHPoxRYZ39zvEtf+PpzDZ2zPI4MNoovL/H9fKi+/+SQaP
7r4NBj4+/nPaVTp/yCCccjC0FvfKgzFK1ToZVCaY7CJwBxpHbpZkpoAS8dKD
Y7hX1/ceuLuZAovkTOVN/9va+WYAgQK/3k46ueHzF8jFXk7fSQHObrNlEu61
2sJ+690UWPLZM1SL58M6//Q+LWkK/G2+cWMRz5/gtliLCjkKbD5zRj0e97q/
TMgeJQqsasuo8ePe6HfvYtaiwMIR3d8SeD6GxHCteevg7+MZKC7A8/evaqn4
pB4F2t/M3xX833e++7WYU+CSnRrPKr4emCw8hBPdKBAR3cLvia+nMBY+vY2r
FND1F9fECkhoU+Vzz6s+ePsrHKFbcDMTfjebhlIg+PTIufg8EmLpvH5p+x0K
aIzQ+I8/JKGboTvuRGdRQNY9Z97pAQmxKtS8/ZNDAe2qpi8h+PpnTV7mGyqh
wHzR4we5eH1gNwp69RCjwJNK7/3ZGSQUvSY4xvOBAn1veNYT8HrD/rSOK7yd
AnoHvtRfTyehzZx/zzv2UeCkH9vWQ3i94mgNY5NmUGBXU0S4B17fuI5Fn3q+
kwrKpFWoiyAhzYZrfB+EqGCQYprhEE5CVzWsOodEqfC2pyuYJYyEuhX3m7Du
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
1NJOWSUL7D+3S//M
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVlnc8V/8XxyVlNVHZfOzsrITPPReRhIwUMiORBioZyYhs2dlkE0Kyx8fe
e49sH3t8y179Pr9/7n08H+97xj3n9T7vN+bJa82nxERERH8Jj/+/lZ8u9uCW
tBF9CiIgyoupuEo5EPiT7jb0X2GZlcKUVwjeokmNo3sAjM+nOFSfJVUQUS+F
/mPRhTOsHq9fT9ZX9KxWuptwGQLR3IJ8uZhDhYZpS4lJhAkULo1E8D7AVUh1
i+aF0JlBrDrP3QSBChl2bHx6Xaw5yGkrrznLl1WcyyJL2GKxBOtIitOgl12x
dfVNBGeyFcTa/Qvg6auW+f3pd8BDrleQKElrTrxkJmO6l1xb98AaHtkzxOFF
i2SGBHUR/Qgb+HOYPq3ukFWh8vRC2daQLdQKrXm749JkcDF14gF0byHigrDZ
jaF2GbFe+3zOx+9g90xGzoxwr0wmmaBAVawdCGfFPevdGJNhhtmMhxPvoTe2
/NdJ9ZhMyLtIjg0WB5Abeyv1WWdD5my2aqKXiSOcYJdZ5tK2ZBxniBlZk51g
j+VozmntFHadtuRrydwH+MWW/b5i/SzW9P5Lag2uj5Dujq/zn72EHfZk+7L0
zAV+7LSIlJlcw3JNWJ2peeAKrZ2Hu5jvzFhjB0X5gG1XwBv8F5Uqx4mNpsG4
6Ua4wdgOVxPmGT+2/8dhFedNd/gcI2fCNyaCvXBv8Oi/IXe4McOQP7IpiVXC
50lV2X8CR9t7q580UOwnNz97XzoPYDinld9AooCtYjQveljmAbeyEk5Kh5Wx
e8XoFttjT3jpIRfz5pQGVkSLQWTj0BM+C19wSLTVxr5Y335dHvsZUmbXSxNH
9LBpPt05Xlgv8Ewgi68rMsZOcXxf0Zrwgk2LO7XEOWZYepzndVYXb0g+1VXA
bWmJffDY+Nkqiw/4vyyzZhZ5jQ3ckUotwfnAovA3m3LiN9jm4CuzHia+YGI9
x8tD8R5LLLDJqkHsB6d/6m6Wjzhhsc2thkzJftCwMYBtKnDF2pumxi7J+0PX
QjV1J7EHtuDEZfTXnD8ojTK+fzHmhV2N0qN19wyA+j/wDjT8sVzi4g/VuAKh
pbZRpbouCGvcfTGMvikQNl6pTt5qCMXGWC334J99AdflXZYxqa9Yq08zXrok
QTB7nc4w/VYMlqynK636QRC0csERQ3sCNpW5soEzNQhUg6it9j4lYeVeZM35
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
KKSFw/uxfyRWWgO2kOxuPtEHuP8B4iPljw==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Do they just equal -2Pi?\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {-80.79954926350231, 8.959184768141533}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
0\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
1\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
2\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
3\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
4\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
10\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.805037587063797*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpMinus2", "[", 
        RowBox[{"e", ",", "0"}], "]"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
        RowBox[{"Np0", "[", 
         RowBox[{"e", ",", "0"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpMinus2", "[", 
        RowBox[{"e", ",", "1"}], "]"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
        RowBox[{"Np0", "[", 
         RowBox[{"e", ",", "1"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpMinus2", "[", 
        RowBox[{"e", ",", "2"}], "]"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
        RowBox[{"Np0", "[", 
         RowBox[{"e", ",", "2"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpMinus2", "[", 
        RowBox[{"e", ",", "3"}], "]"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
        RowBox[{"Np0", "[", 
         RowBox[{"e", ",", "3"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpMinus2", "[", 
        RowBox[{"e", ",", "4"}], "]"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
        RowBox[{"Np0", "[", 
         RowBox[{"e", ",", "4"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpMinus2", "[", 
        RowBox[{"e", ",", "10"}], "]"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
        RowBox[{"Np0", "[", 
         RowBox[{"e", ",", "10"}], "]"}]}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), \
0\)]\)(1-\!\(\*SuperscriptBox[\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \
\(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 1\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 2\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 3\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 4\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), \
10\)]\)(1-\!\(\*SuperscriptBox[\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \
\(3/2\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Do they just equal -2Pi?\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8050370552997017`*^9, 3.8050370573772554`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.000024185766477748702`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(-2.49366499671666`*^-16\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.5939906358846744`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050375918025913`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050375920393763`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({4.503669942224799`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.734723475976807`*^-17\\)\[NoBreak] and \
\[NoBreak]\\!\\(3.820404467573641`*^-16\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.805037592103345*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318519448951320385675257047976413268819406710008479421958327293`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.7695567233744214`*^-13 + \\(\\(4.163336342344337`*^-17\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.367876784470429`*^-12\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050375928845882`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050375930474367`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050375943272524`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.805037594745799*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050375949586086`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
0BJ5
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
ktqBtg==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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

        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVlmc8Ff4fxTVE2irZSmZZWcn6yN5CilBEqOyVkUQhM/OKkL0yb1bifr9W
yJaVyoi497rRQEPy//0fndf72TkPznmdE9fdTG5sp6OjU9tGR/d/1b1BHsIU
M2U+inbahxtFTYsVl65Ps0mD+koro+zznSSWPaNxL9jUoav64p1/udKkl6R7
zncEDGHN0vx3h5MxSezckYJMtotgMv746WSOPYnuMCVpi8cC6DqjfNf4vUlD
tOZQW4Gr4K4nKObqFEIytutusCXYwt1Lk0bp+dEk+UGpqkQ2e/CRjDTJz0km
nVTKKmrLcAB9fk/nEzaZpL2ljM9WeW7ChN8IcYQ/n7TK4kXgz7sNgsdMig4O
lZI+PvgYe0nAFTZymQiWTtUku195rW0X3UGIcu7OxxN1pHExC2UrggcQ3iSa
ReS/Iunf2N+4Ou4JvE3xhpQtTMJP22Ri2byBrvDC9YycdpL0sF81v6UP5Bqv
FLGhLlIJo5goKcMXnPPfLXLZ9JG4Ya740tQdeLmD9ktSc4iU6POEb4XHH/jq
sg3H+UdIu8oMsiNsA+AW7rSfNBknBXzaznk8LxCcciUr2YcmScusDakN83eB
JcSn0Dd/imRn5HLYWOAeCMjN2jk4zZImwngfUxyDYZxHaGmzbI4kMHWbvuXi
fdi9e3j564kFko2/plrs2n3YJ3ZnWKybTEo/ciLEghACx9ffThXmL5FGKjdI
/GdDwZx18Jp23TJpv97Y32/joSBM22uyje4b6UFItF8U20PYlCu1QTmrJBKn
Q92lxodgnNGY9zh7nfSrXmWV1zIMRk021nTRL5Lz8prbq4xwCC37HGFrs0kq
jBwsj1CKAP0dWiJl81ukGb7nS6ZTEXBCmHDRRnMbumhp40jjiYTNuaf0hwV2
orh1+YIGHAn0B8wkXxDpUVfC0bmHtlFQfaUdCZoyIKWuN1e58qLhpcLE3aAh
JuRnV5BBUYuBjkNWbpeq9iLiv+DJ2vkYMCh21f6Rvx8JyMhcMhSIAy8Hj+M1
ToeQzeCBZPbOOHB1N2PhDGNGT29ThxYcH4Pvqz891uWHEePQQCG6GA/e7H90
HHhZUAF3cwd/QTwoSrVuFrsdQ6rOpfPRa/EQsXRKu7mbFd1lCOM1JyQA05uL
wSYFHIjNzPM8aSEBXtMErY0EuVBd7jUbvrOJ0K/b+uJoPTf6qiSf9XU8EW4T
+68E0p1A9t4rbJFsyTAYLDfolMuHpHYkBhDdk6HsS1e89wt+tD1R+v37zmTw
ZIoh4z4B9KzSP0PMNwV4DzDZvOQWRq7KnJuX+1JgRD8wtMbsFFLsI1mH8BHg
b1bi+TjCaTRJ3cEzMkwAns5juYGyYqjYvzB4UzgVZlgu602liKM7jDozAiGp
8KTVa3AqWAIdEYjL8Rd/AhXkbdJdv88gI1tWPp6YNJgd0E6licsg7q+ND7Xn
0mDnfsatl3tkEe2e9WcP+XRwb5H5aPdFFkVl5Ba2k9NhQW/7kYxWOdQ+LiJ8
SyMD3GsVTnbVKaIkh4HIpIwMMBV5/iO3TQldX/OgNv3IgI913F6/xpTRFnP9
8wO5mbBuEm9c/UgFyRueF6v9lwV7BliWK5ZUEePHubgps2ewLVOagzNWDY3f
Dl9hKH8GYiWJ3Ucl1VFj+w3zctFsgBUptbFwDWT+qZSN7kM2JCjpL2ZbaSMk
/Lc7mSEHWOP2X4ng0EECHgYBwlI5EJKSEK4zpYPWtlYmTaJywHdHR/kjNz2U
yCWTUSCXCwf0CksYWg3RH/twfXn7XMjyuGM9m22EbMvG//Y/zoWdlv27f5y/
gCQUAqx/LeTCIXZuVv3TxqjPHHHrpeRBf+qUy+QxU8SYrJPz9Vs+CIe5nENW
l9GG3OxGDnsBXGa7spd+4TJa/uh3yVStAO5TtL7aeJijt4LFe+qSCyD+W9Kx
23EWKOvVLt/As4UwLVl6Qv6TJZKea9PdFVQEabcWmwQCbJDgI8uC+oIiCNC6
SXEetEHsoj+2nPqLoKU66N6UoC3a8uWt7eEphlDNwr96k7boDVMIT0JrMRQ/
aN0ZaWCHbCSVVzkYS6FxYNHK2M0BmY6PGvZJlIJmbKPe+XcOSPOuS8k9i1L4
6Gl5JEjdEZ1+nXF1trQUXixOGc9wO6F1i42uQoPnkEDdfSVu7iaKCWnIPJNU
Bp0eVdiowgUFC1z49elVGRzgNWT+JuqKPHsWTZLny8CKxNz6r8IVXT56jPGn
TDl0Ra1ec6x1Q7wlPp5NE+Uw+jNI9y3FHdUPSmppcVfC32rNlOHTXiiOQtMW
0awEBd/3rtt9vZDD9iLdQ66VUOB7c/c37IVYpDkM3zdXQlP+tMV+C2/0qiek
tF6sCj6PJJnZJ/ogDvFb1Xr9VSBexa1ldsoPhStoSSp/qoJ/20by5u/7oe9a
fC8k1qsgbF5OSHXCD72xmao5yl0NsZu6D25H+qOARJOGaZfq//a89kHiWgCa
XJNHXvuI4Ltr7uPu9SCkuZ1VxeEEETZLF++tWNxDxP1r2FyGCOf3fHlJJN1D
UYKVrUrWRAgNUfgwGhWM5C1OvmYoJ0IIh+LqCOE+Smva0/dU/wUMmh/bkjAK
ReYPPky2RdcAIXv6swtbODo4IyDimFMDEQHhnOXXwlG3okcQU30N7Gty2xlS
GI7k1+mPG3+qgXwjO3uKTATiuCl+Y0quFtR6Avr6LB+hKcPQlV+fa4GXNfW5
e3sUsmcX2immUg8CFYn/mnfFI847nmZDZvUg8/ChWJtUPBp921TofbseCsVT
iJy28Ugz1ljnFaEeDJ+v/+xrikeCdIFx2l/qwfy4Akj6JSDq5z5Wu/QG2AjT
PKC9lYjcqr1En6y+hHGjCfcPFwhoWXH2bTdjI1y7y+KjEUZAzl2GARucjeC7
ElZO10hATtPCnVc1GoH/2MVWV75UZLNvxoaf0AhP3mtXSWymogs39ZOJZ1+B
9pNzpmGkNCRxgn+jN6AJPqlL+6iEZqKKssScf3FN4Jf86ptbSyYSkaPTlshr
gvOO2ou/6bKQkNH75KSeJii95K/FHZKFjgcliF3hbIZWroKTVWHP0KF3m7aL
zc1wYb1Cn20wG32PH+vatg3BseivB9T256Em52qYZ0HgVvTuD1k2D0Vox9S9
FkGgUX7ye9e1PMRJp5ofbY5A9PyB6rPEPKThVh58tAqBnEYpz6hFPuoVUH2a
LI6Bnj9LR6amAB2nZzMpnsJgl35yTwOhGNF7hcemUTBIFZ9u//66GFFnfvxX
DQzEhdEl55/FqLapH1yYWmBVLUn6uEUJ0vV+KCop2wK2BNPbETylyHtuhbEp
tgWy02UC7zU8R10tr9GAYisUqLI8UeGsRIW9f+djtVpBZlufbK1pJQobl2TS
N2kFF/4SBefoSqT6Jetil2MreES6c+duVKIm1jsUnNgKLybGl564VaEqN8HD
RHIr0AeXD4daVKMnXI8ckpPbIL8n+JCJ1gvkK0SKNnnWBjol0YaWji+QmdRq
1cHSNriYxnP1UcQLxKxjsxGD2kDU/oGOYdcLFOMtFx9GbYO9s8a50Xo16H4P
+aWvSjvEMR5ZnjKvRTf9dfZZ0Noh0MCZJehxPSrlOGR9db0dRLgz86qr6xGt
eaLMjq4DRBk6yxhG6pHrdid91yMdsKuf7MfK1oC8o8OjHyh2wLso9k/9+Q0o
OLNtd0VMB4xlEQ2yWl+ilBalXTtEXwMx7maNKmsTatktuVXm0gl2W8mFLakY
CV2UqI/y6wT6x5E+Jysxis8Sc3N60AmTPqMJT19jZCN1evpkWicwJBXM9K9h
9M+KD6W3d8Itz1V2NbMWJF/FEvyIows8zSQEnVlbUc2ljX923V1QJ0YSY65q
Q4V57f/Y+d+A2k4D8/OCncg97OIsiL+BC5t3FZ+pdiIFx/k2+3NvYOUuF+/h
q51o8NTOyAqDNyBispNNKaUT/a5WO6zq+wY2SBzd6Tu7kD5uFbzZ+Qbu/vk1
GrbYhX58wBfqb/bAtNhjHhvSG6TC0pxrWtELvnPXsy8T+9HOlKNuGg29UHRE
QOTjcD/qOuyqcLa1F1LL6rUDfvQjo0M8I+xjvXDQWsRyQ3oAXd0bQv9p8z/u
Z1lnezmAArdrOLkb9P33V0S6yNcHUd1yr2gsrQ/2jmgl1vsNIdHODw2vTw2A
dLtaQlf3WzSiYrpcsjwI03fI1SoR75Az0+3hUYlhMOAwaLMen0Y9E5eb98e9
hTIjHVuepTlkqmk+Oz8/Ai3Oq/a2d8lINjv6cjbfGIgxFtTft/mCZv4ljTgF
j0NIVviybsM39FlnII+lbQLWbT3SX3xdRVVp0/5DJyZB19XrudXCL1TwaEek
cMB7uKQUbSB7YROt2V2hOrz6AFcUJV52/6bDe9TDTaqPTUFHyU8ps/4d+O7B
z3tnraZhka+RK6hzF95LOk03bjADn0OrBlKZmLCSr9Fm258ZIPZEWhft3I8z
8mPyTmbMwgHH24XrrIfwVTPpvt16n+D5cQ+eucLDuHb0RhJp/RNwG31QWA1m
wed6q7YvEObAdLX5aXooGz6u4bCWpD4PzMF4AslzYRlpmYSahXmwG1AsKUg/
jqe/x3bnhX2G5jrhkfdjvJgmZRzGJrkATl9P/xYv4scCS6LUbW8XYKF4IMmu
UQjvZRwoeDW6AGOMPy6PdgnhH3zutj4TC9DCc9DMeFwI46vECfLHBbhkKXvS
aVUIXxmW7RwgL0CUufgZZnFhHPcS8jP/LQDv+KyxbaEwXoswvnru1CIYm86k
ymWewu18PsPuIYvwZ1JzzaFCBD8oajT/+2ARml/kZ6STRLDqKbrpiPBF6Gww
GHnXL4JbxKOXsqIXoTyl8mTgiggmyefs7EtZBNPQO/G6Z0Rx/YU+WeHSRdCL
ntcQrBfFpXf5n84OL8Kn9g5XiV4x/Hhk1M6Ejwz+US7hqo8lcMy9WL4hATJk
OTXZDD2RwFFCGp+NhMlgcV7S3zFXAofdrXEwECNDqifXw5JaCRzIl3RTW44M
JTVnZ8M+SGBH7wtuyvpkGE+8sVV4+gyGIz0Bp7zJcD2I4tAxcAavmOKE7e1k
KM1wuRV4RgqvF4U5178mw1yrDJFTWQr/29DVcu4mA63pt263rhTemz/6d7Sf
DCyBiyXq9lJYaJXqWPKODJcrKK86UqWwTfJR5QsrZEB/q/3+0UnjwZFb1Ex2
Cpj2Bhxr/CCNx4UkOky4KMDYodo8R5XGU3fXnjEcp0DP9MtG9t/SmMZ338yD
nwJDjrL01UdlMKNPClaXoMBZ5R3v7xvJ4PNHMWFJgwLrW+/3kDpkMNHsqNo5
DwpUblDbzjXL4sQDwWTkRQHQP9zE2yuLPbvJsZq+FGAaLw5jey+Lzyg1TZgG
UiBF8ueYxG9ZXMVn5+oaRgFfP5l7jLJnccWPqrS8NAro/J4qcyaexaUJ+l/3
tVLgXqyPAKFODkfp1aUkt1Og6JH2k2udcvgW/XEFjs7//CFOl3MTcljY/0eY
UC8Fxg/vyOD+I4eLbdI51MYo8GO8OLNa+RwuFCdr+lEpMG1eI3ug5xzO63uQ
+YmZCgUP5b2ufJPHMWc2rJ4dpUJv1GDKL3oF7JviyWnFSgWJRv22cnYFrG1t
+3SUiwpDHDfeWqsr4GWaclqXEBX+xouSJ54oYLm9f5IrlKnA+7Dmi5WmIu7T
dY8JuEUFTW9dc1KNEq6rWNQ760IFpDq7EN2rhLOZr+1ZdaMCP3tVp8+8Evac
NIhy8aHCB/ON88+OKGPWW6cf2dynQnueSLChrzK+HrnwQJNABb2V4le6APhn
p1UgcysVoOz0ylNvFcxtqunT2k4F0Q1VVflQFaw5Je7m2UkFAcL1FMpjFUxY
3W433EsFmm1LbeBzFSx9okQ3cZwKvsQ+dY85FewZsMbG/IUKV4YKmpsvncc0
kbiGQ6xLsA+OevXpqeIjDXeILexLIGXuGN9rqYoV1GzLPLiWgCTvf3T2tiqO
spDOHuJdgtUnphu6MapYOHwyIkF0CUpkKnsE+lWxw7TA5UNqS6C3WBrDd0kN
zySgtYOuS2A5/bv0vp86ngk1aEx0X4IK96ARxSh1POv1/t4RryVg/pz09mCG
Ov5k9pOB1W8JPnzbx7QNq+M5NnF2ntAl+L7fz5dhtwZeyMlSFiUswTXLz51j
zzTwUnVQhA5pCXLe7c/8MquJabl79HvwEnQIOaTt+vkfJ6UdNGhbAptwTm7l
vVqY5lObdqFrCWKtw5t3n9XCy+e+PL88/F/+LyQ79jgt/LXFavDGwhLw/hU5
YKWqjdeHFNhC99PA5PSpuKsdOpjOZfznuUM08NK61v5zRgczMXqNfTtMgyEa
6zz6q4O5lUuTbNlo8Lx3o2hKWhdrlLLuP89HA60xIoNdkS5ODl3bTidPg+tE
gvT3FD2cxZUwW69Ig+9NlDvEGj1c3CCC3YAGos1Uj5K3erhp2S5oWp0GUqss
dUrM+nj+yvBPkhENVLrfsh5I1MdSUpW0oBs08PfYZzCRYYAV+3V7ZJxooB1E
YNBBBljz5kLJl1s00HjzkOHPrAG+8ozL0dqdBkYE1Yc8QoY4dE/MrGIgDcwO
6ZZF1xvi4TmnsY14GrgtzKZFzRlh92Re7N9Eg5WVhsgZeWNsknL95g5Egwt+
oo/tjYyxDCGXObaFBuvbBAUP2hvjP6m8N7Jf0+AhXV7LdKwxDnvKy9Q5SAOl
oYVJ5zljnJ7Le/HIZxrkXu2pLyCY4EJ4St6zQAOWx5niQc9M8P8AVEpYtg==

        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
vCOu2EWpEf8DyuGdjA==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Do they just equal -2Pi?\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {-74.49201574694266, 1.8910039109373603`*^-15}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
0\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
1\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
2\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
3\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
4\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
10\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.805038177057421*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["W/ the factor", "Subsection",
 CellChangeTimes->{{3.805025299257105*^9, 3.805025301332178*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpPlus2NP", "[", 
        RowBox[{"e", ",", "0"}], "]"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"e", "^", "2"}]}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"3", "/", "2"}], ")"}]}], "/", 
          RowBox[{"(", 
           RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
        RowBox[{"Np0", "[", 
         RowBox[{"e", ",", "0"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpPlus2NP", "[", 
        RowBox[{"e", ",", "1"}], "]"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"e", "^", "2"}]}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"3", "/", "2"}], ")"}]}], "/", 
          RowBox[{"(", 
           RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
        RowBox[{"Np0", "[", 
         RowBox[{"e", ",", "1"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpPlus2NP", "[", 
        RowBox[{"e", ",", "2"}], "]"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"e", "^", "2"}]}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"3", "/", "2"}], ")"}]}], "/", 
          RowBox[{"(", 
           RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
        RowBox[{"Np0", "[", 
         RowBox[{"e", ",", "2"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpPlus2NP", "[", 
        RowBox[{"e", ",", "3"}], "]"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"e", "^", "2"}]}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"3", "/", "2"}], ")"}]}], "/", 
          RowBox[{"(", 
           RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
        RowBox[{"Np0", "[", 
         RowBox[{"e", ",", "3"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpPlus2NP", "[", 
        RowBox[{"e", ",", "4"}], "]"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"e", "^", "2"}]}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"3", "/", "2"}], ")"}]}], "/", 
          RowBox[{"(", 
           RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
        RowBox[{"Np0", "[", 
         RowBox[{"e", ",", "4"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpPlus2NP", "[", 
        RowBox[{"e", ",", "10"}], "]"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"e", "^", "2"}]}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"3", "/", "2"}], ")"}]}], "/", 
          RowBox[{"(", 
           RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
        RowBox[{"Np0", "[", 
         RowBox[{"e", ",", "10"}], "]"}]}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), \
0\)]\)(1-\!\(\*SuperscriptBox[\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \
\(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 1\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 2\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 3\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 4\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), \
10\)]\)(1-\!\(\*SuperscriptBox[\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \
\(3/2\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Do they just equal -2Pi?\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.805025352384062*^9, 3.80502535912181*^9}, {
  3.8050254022506227`*^9, 3.8050254807137656`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.000024185766477748702`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(-2.49366499671666`*^-16\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.5939906358846744`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.80502549095426*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.805025491026198*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({4.503669942224799`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.734723475976807`*^-17\\)\[NoBreak] and \
\[NoBreak]\\!\\(3.820404467573641`*^-16\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050254910881367`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318519448951320385675257047976413268819406710008479421958327293`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.7695567233744214`*^-13 + \\(\\(4.163336342344337`*^-17\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.367876784470429`*^-12\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.805025491410836*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050254915836735`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050254921251717`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050254922770324`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.805025492336977*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
dBDGviErMPH3Lxcu/F6y315+CfofIwP4Zw==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
rSD+DwhmgAU=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
3yz5k9ZSG4j/Aa8MHcM=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
SPAttWJEjaq2upuz50DUMc1A4DAjKvRDbOlA3xzEtqwpEW4yoDiGrvSKgTnw
e77zWEeTAV0XdLZ4MjwHvm1j+1qKDChmVji88H0O3PJaj+CEGVCTXpnmrgXK
eiS8jz7/RY+GfoW0xL05yNaf2DXwpUc3X+qYyYnOw/319t2CKDp0PG0Nv352
Hsb7gjEWPzq0rjZqIEd8HsyHTDGDx3Ro6L8BdX7peeinlndP0adDRZxMLtGj
8/CtNWZGhoMOvWVoxT1gME/5r77+QD2MFm0QfNLr7DMPSuyXV6WfHERffCw3
2nkxD4dwZ9I5rA+iSqJUky8D5qFydTd6SvcgWise/CMpeB7eZ7CIohIH0Wr5
Dwc738zD7aAbbrxLNGipdqfM6ex5sLPi1zMxofz0Pz0VP907D2G3qNkXzlKj
Yf0DVrqCC8D2UPdsjcw+hHi9FuwRWoC6efuUC7h9eCWiTNI6vQDmy10GAdN7
4P+0yFbj3AJEKv3JbgreA0/BqLtXZRcgx+RzVNHELtg91nZC1BeA4Vb7Hx2v
HQCOdg/Rx5TxGlzY99P+AlkPi6BuWIDYOlvYilqHQgPOy3IPFsGZhk3kZHIf
pHa+SJxhW4I/Xh6Jz54Ta3433/Jkq1uCPJd76gJv/9VMRdRsHr7/A+6Vssk1
mNBhWz2X8L4syzBxJWXX588hjOre0G+5/5YhufH2UxFuFoyJ4dHgL/ZleJIf
lYVdZMF4kewoC/wyjF53jmh0YcGUs7lZFAWXYUngpDDvBgsW7btJTSW/DNjy
Gh35Byt24cLn5Wc2yxAkKaEQP38Yc44WwNwrl8GpMoJ1Io8N031jeZemZhmm
Zdm1AivYMOmYFLbXtcuw3Md46HQLG7b9VsAmuWkZ7nAcHtKYZsP84wWYmruX
4bOJ552T7OzYuxQBfQ7SMrDdFG3aeMyONeQLLOQdWoE1YZFwogQHllFgGSF7
eAWSX181v6bAgQUVpsjXsa3ADtu6YaoqB6ZZJPB64MgKFJh+CZMx48BGSgUk
d06sgGQTF/fIKw5stVrg6TWZFQi6YrxFO8OBHekUOEw0W4Fomfv8VS85MdnN
/nVzixU4vG1yzjeCEzM6/nLou9UKLL6sKLgUz4m9u/cjaejOCvwUuvk3OI8T
42UpEmt/uAJvGLsLk/s5MSEt5euFASvgMEeUiublwqR77AKe563A21P2Aw+y
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
e4g=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Do they just equal -2Pi?\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {-6.393817256477448, 6.283185307179572}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
0\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
1\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
2\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
3\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
4\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
10\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8050259964663343`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"pPlus2", "[", 
      RowBox[{"e", ",", "0"}], "]"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
      RowBox[{"p0", "[", 
       RowBox[{"e", ",", "0"}], "]"}]}]}], ")"}], "*", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"e", "^", "2"}]}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.805027032101775*^9, 3.8050270456692543`*^9}, {
  3.8050273662600846`*^9, 3.8050274202417727`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", "\[Pi]"}], ",", 
   RowBox[{"e", "<", "1"}]}], "]"}]], "Output",
 CellChangeTimes->{3.80502736043194*^9, 3.805027484394595*^9}]
}, Open  ]],

Cell["\<\
So yes, they do just equal -2Pi, which of course they needed to in order to \
cancel out p_0s.\
\>", "Text",
 CellChangeTimes->{{3.8050279459021215`*^9, 3.8050279675478277`*^9}, {
  3.8050366157657347`*^9, 3.805036621467852*^9}, {3.8050388180739207`*^9, 
  3.805038818522628*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"pPlus2", "[", 
      RowBox[{"e", ",", "1"}], "]"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
      RowBox[{"p0", "[", 
       RowBox[{"e", ",", "1"}], "]"}]}]}], ")"}], "*", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"e", "^", "2"}]}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.805038827858985*^9, 3.805038830830711*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.8050407322814674`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"pPlus2", "[", 
   RowBox[{"e", ",", "0"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8051125024552774`*^9, 3.805112506291727*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{"0", ",", 
   RowBox[{"e", "<", "1"}]}], "]"}]], "Output",
 CellChangeTimes->{3.805112531696164*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"pPlus2Ltd", "[", 
   RowBox[{"e", ",", "0"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.805112444963586*^9, 3.8051124481326475`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", "\[Pi]"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["e", "2"]}], ")"}], 
      RowBox[{"3", "/", "2"}]]]}], ",", 
   RowBox[{"e", "<", "1"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.805112438876229*^9, 3.805112454428809*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"pPlus2Ltd", "[", 
       RowBox[{"e", ",", "1"}], "]"}], ")"}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"e", "^", "2"}]}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"3", "/", "2"}], ")"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"e", ",", "0", ",", "5"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8050407917103357`*^9, 3.805040801633654*^9}, {
  3.805112289684921*^9, 3.8051123044102664`*^9}, {3.805112661030239*^9, 
  3.805112661732588*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Refine", "::", "fas"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: one or more assumptions evaluated to False. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/fas\\\", \
ButtonNote -> \\\"Refine::fas\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.805114739580423*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Refine", "::", "fas"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: one or more assumptions evaluated to False. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/fas\\\", \
ButtonNote -> \\\"Refine::fas\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8051147395834217`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Refine", "::", "fas"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: one or more assumptions evaluated to False. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/fas\\\", \
ButtonNote -> \\\"Refine::fas\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8051147395854206`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Refine :: \
fas\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8051147397182965`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Integrate", "::", "idiv"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral of \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(e\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((\\(\\(-1\\)\\) + \\(\\(e\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] does not converge on \[NoBreak]\
\\!\\({0, \\(\\(2\\\\ \[Pi]\\)\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Integrate/idiv\\\", ButtonNote -> \
\\\"Integrate::idiv\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8051147482943535`*^9}]
}, Open  ]],

Cell["What about the negatives? Probably.", "Text",
 CellChangeTimes->{3.8050388157548733`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpMinus2NP", "[", 
        RowBox[{"e", ",", "0"}], "]"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"e", "^", "2"}]}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"3", "/", "2"}], ")"}]}], "/", 
          RowBox[{"(", 
           RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
        RowBox[{"Np0", "[", 
         RowBox[{"e", ",", "0"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpMinus2NP", "[", 
        RowBox[{"e", ",", "1"}], "]"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"e", "^", "2"}]}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"3", "/", "2"}], ")"}]}], "/", 
          RowBox[{"(", 
           RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
        RowBox[{"Np0", "[", 
         RowBox[{"e", ",", "1"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpMinus2NP", "[", 
        RowBox[{"e", ",", "2"}], "]"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"e", "^", "2"}]}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"3", "/", "2"}], ")"}]}], "/", 
          RowBox[{"(", 
           RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
        RowBox[{"Np0", "[", 
         RowBox[{"e", ",", "2"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpMinus2NP", "[", 
        RowBox[{"e", ",", "3"}], "]"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"e", "^", "2"}]}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"3", "/", "2"}], ")"}]}], "/", 
          RowBox[{"(", 
           RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
        RowBox[{"Np0", "[", 
         RowBox[{"e", ",", "3"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpMinus2NP", "[", 
        RowBox[{"e", ",", "4"}], "]"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"e", "^", "2"}]}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"3", "/", "2"}], ")"}]}], "/", 
          RowBox[{"(", 
           RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
        RowBox[{"Np0", "[", 
         RowBox[{"e", ",", "4"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpMinus2NP", "[", 
        RowBox[{"e", ",", "10"}], "]"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"e", "^", "2"}]}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"3", "/", "2"}], ")"}]}], "/", 
          RowBox[{"(", 
           RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
        RowBox[{"Np0", "[", 
         RowBox[{"e", ",", "10"}], "]"}]}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), \
0\)]\)(1-\!\(\*SuperscriptBox[\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \
\(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 1\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 2\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 3\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 4\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), \
10\)]\)(1-\!\(\*SuperscriptBox[\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \
\(3/2\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<Do the negatives just equal -2Pi?\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8050366533290844`*^9, 3.8050366784273643`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.000024185766477748702`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(-2.49366499671666`*^-16\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.5939906358846744`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050381784905453`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.805038178554678*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({4.503669942224799`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.734723475976807`*^-17\\)\[NoBreak] and \
\[NoBreak]\\!\\(3.820404467573641`*^-16\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.80503817862961*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318519448951320385675257047976413268819406710008479421958327293`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.7695567233744214`*^-13 + \\(\\(4.163336342344337`*^-17\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.367876784470429`*^-12\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050381788295107`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050381788764505`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050381792567344`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050381793686266`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050381794135838`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
BWLC4jDG8x1FsenFRQoUimodXZRF8P8AhuDsnA==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV1Gc41f8fBnCRUUlknYOsrEpIlIS3iCiSUajIKCM7DSQjkR0SWWXvnRDH
9/Pt2CKJ6CfJLPN8VUjmv/+j+3o9ua/rfnKL2LgZ3aCno6Pj2kZH9/88e2Oq
B5++qEaa1kkaupFH+VF6yeYbWQEu0PcNKBZtx3h2fYp+RT4N3ftnXm1kKmBv
MD/nexLn4b2ya0iTgyEmc4IrJ41sAgWPeKMHMq5jdJzTT7eEzOHyQfH3C+K3
sZ65hofWEpZAV5Rt4+AQiBnattdaJ1iD6KZre1R2BKb84Wh5HPk6HIV+gecZ
8dh+1Rd5jal20FM95LTLKg1jLWR5uSjkCLfeuHJQxbOxRR7PBPEsJxgUkcn9
9aEQ+xr0NeqShCvwPz/scNqhArNdyaI2mrjDuiLHaJ1INTYgY652NcEDFizk
VS5m12N6N9jqFgduQYAULDRv4Rie0qgYRb4NQdV4hFNGE6bw0atC/ModEFa4
GzKAtWEFLDKHsdS7sMk2ONl8rQsThPH8S8P3wCHjuMFfrR4s7s5zMULIGxyZ
NNsjxfswpmL99MfWPvB3slznvtEA5jNGLyCcdR9aMqYKMz8MYjRSbWLthC9M
CrA1jmQNY7YGLpyGEn4QPR9XvMNhFPscLPpk2t4fTOOtFSOLxzGJYSfGtyYB
8JvtQoKdyHfMyltbM2opAPiq07DHbVNYMpdIoHlCIHQVWnsPZ81ifWVrmPjx
hyD5VjHC/DUNYzvXv/5z4CEsctZ/9txawIICI7zCyY9APPUk03r6IoYJ2FVf
qnsE/sIn3xW9XMZWatQXRa8EAy5R4qaBrWDOtCW3+tQQYEoU8d92bQPLDftQ
8lj1MQRwFnqSxrewEbGiWePhx7B9XqDEW2sbMrliZT8nFAY1a2RiSmw7il5W
zqnFw0BdYJywrmBEbbHc44+sw4FroUe/yJAZqbZ1WO7LioAUenPHtO6dyMs2
J3VaMxIW2B1Oq5ayospN/8HXE5HAht2tSclkQxKKipfOS0SD/qlv6qfsOZDV
hz3xfK3RMC4xSgQE7UUpTjM93+2fwMZWwc+EIk7E0tOdi0xigCc2eVxFmAfl
CDY0i+fEQLXA4FkdF16k4Vw4EbEUA19K1n8Jt5KQL3OwqFlCLBShn6NymfyI
fPHWKex7LIwJhsWN79+HqjOvWYkdj4O0FS/Ty68E0YKq8ouFgTigPZJx09oU
RtdvE+Qwcjw8yzt39cpLMXSUIc6n0j0eNiw7s0XLxRF9nMKXL63x8GBHf6d4
hwR6WeadKnP3Gawa27f48h1ArmoCG6Zdz8B45i1ZyPAgUunCLALFEsCbpn4h
OfYQGpxhEOr7mACx2vPmtXIyKN8713/jQCJEhH3LLHgii+6x6I5IBCZCV8BJ
i1BfOcQlEZ3hLfsc/AUGEmlLR5CBNUlMKDIJ7BvN7YYOKiLBhbpHOuNJwC0m
QTJkOobm/CwmPZSTwWI16U7aj2MoPDUzt2kqGbT1RIJ3UZRQ04D0gZtaqZBq
PrtpVaqCntp1hz1NTQWjVxYCNXWqyGbJY4byOxW+jMa7B3apoa29NUV7MtPA
LErXyypIHSmfPyXzevMFSJmGqTFPaiCWr+PRwxdfgoTuVypXiCYacAohmEte
wtHx4NDCg6dRXdMNs5LD6dAq0zTyzE8LmY0VkumG0oGl98WEr5EOQgfW2+OZ
MyDUYDXhK7sukvDQ9zlwNAOuytNHc/XqoqUtYtAoPAO+lg2oS9ueQ3H7FFNz
lDIh10TflPPVebR6PURP+XomiEX2fjgWa4CsiwfW3z/JBIq87TF04gKSO+lj
sfI9E/xqAu9dEDVEXWZI8NyzLEif4k4U2W2MWOJ1MxZ+ZkNBzpB3g74pWlMa
Xcvgy4F7yWFabv2miPbV65KxZg4sGw4ny1uboV7J/F3V8TlAGExmb/iaoxf1
THfvH88FTTzgHuf7K0hhvPEs04M8MLllkjjgbIUkQ6/k1OTkwa09rWP5VCvE
d/j3lsP7PPhWJWqfSbZGW3dFX78TygdhC4tf3O+sUcfOQKFYaj7EoaQFRRVb
ZCWvtsjPUgjK88W/95jbIeOBT+e75AohU+s71YBqh7R9XQr8zAshRy6Kd0Da
Hh1qSbUcLSyEQy/vCDYxOqBl87W2XP0iKNRSPXa+1RFFBtamHXlaDKU/GRL6
w12Qv8SFlbH6YjjBUOrqtcMV3Xr3wyh+ohjIfKHzAWGuyJSbl+WPYglwZqe8
7IpyQ6IFd25RPpdAXlburpZed1TzQf7MGcEyMHB/Z53H7omip+d0pLXLoBbT
1pK87Ins6PPOcriWAcvlG5Y22Z6IR4H//JeGMmCjaPTuPnkb1b8LLKyRKQcL
FUkZY487iF/2ZsW59+WwZLUUaUPvhUJOnpFXGysHe31SBL2ZF/p1RuyV3HI5
BOcFKDuXeqEOq+EqbsEKSOeO00m38EY+cUa131wqoJGR82p2sw8aXFJGnrsr
wV7HcGiS8gBp05PU7UQq4W+dMhEp5Icq2ZZwM8VKuMqzj5s1yA+FS5ZRVS0q
oV8qQCZBzx8pm+9vYS6pBA6p04Z/bwegJMqurhS9VyDGfOX0WcmHyCxoaLAx
ogrM6P5j+zIWjNhHJKTtM6qgp4h6bUUyBLWreDzYWVMFgiNRCTkuIUh5mVHY
cKwKspTOL1WshiB+R9kbw0qvQe2UnmwmfygaPv+QWJl8DR1pUzstvcPRdT6p
7TLqNUAiL1kfzH+CBO7duthzsQaszjE0S9PFoE+9lNzbTjWwwGSl8Ew6BmlH
GerWJ9TA3R8syDwkBknS3Y/Wma+BrzGsx9+oxqKZyS6SbXItTDk9Et5DiUNu
FZ6Hny++gQvlxyq2Vp4hmspobztLHWxQz4axSycg57bzPmsCdcDnHG/tdi0B
OXw70GqpVQeXkmp+8bYmIKvdI1biCXXgMhdYxZeciC446sVXHq+HUa/ZB7wG
SUhORHyt04cCp1abjt1aTkWlxXEZm9EUEDCpai49moakleh05LIocMmFUV3d
Iw1JGXyJf/qOAvt5THps5tOQ8INYmcsCDZDMPWRRPP0Ccfy3Yf2joQHc6LzN
1b3T0a+Y/rZt2xBoo40zJlmZiOJcARM8CNoL6lX8OjLRY53I6hZpBNsDypiH
f2YiATqN7AgzBNe1w/PgVBbScivx5y5H0EtxxqPHslCnhEZKvCwODcDQ4i2b
g4QZyUb5wzhkxu3vc/6dhxg9Q6KSpnH4Xs7lHSeSj2ZGfreFL+Lg5mMs+Msg
H72mvAeXnW+hi6l47lpJPjp7+9Fh+WNvoZvf8dDfmwXo9jjBQol6C3m/NvPU
fhaitrctqFuFChol21z+HCxFuZ3rE1FnqIDb6H5Jv1aKggfkd+oZUeHyOX2O
kPhSpDH/wqTNngrrctv0tm+VIgrp3jQeRwV5Yxu13v4yVO4myVk5RYW22Krg
mbZy9HxfqF18fCP8lxdCz59SiRy9dXebzzWBUuxDBcuX1aiQn8PCcrkJxO//
OHoBVaO5hs/FtnTNEGazYnztWzVypXfQc+VqhtfHX4t+EqpBtyNCIoJUmmF7
4MQR4cwa5J/WuKM0shk2DcqaVItr0bO3qkwMh1vAOljvynh/HXq7Q36r2KUV
fLW1FORCEZIykasJ92qFqq1wH95XCMW8kHFzCGqF7XbMYmLDCFkdPfRtf1Ir
wK5DM5f4cLR5VQwlN7XCb1P3HVQPHCmX8/iH8rdB3Vpo6n6xt6jq0tqmbXsb
9D7ZDuqJVJSb1bTJJ94BAUkGY8dqm5F7sMkoyHZAUjRrQeuHZnTSfqLx+okO
uO0qx3Zzuhl9OLg9rFS/A0IrlFvG+VrQ3wpNTo27HfBds9K1yK8F6eFUScfW
DiCHbst+otuKfg/hF2oc38Eb2bRj7+bakDpPQ6ZxaSfUBvyNZbjZiQ63DtW2
HOyGqiFPEQa2j6hP3ZhWQPsA7qsZ5WqT/ch5p9PHT3IfgSPwpvH7PUPo3WfT
BrboXmji3Ve3cWQUGWubjU5M9EEec/9155IJdCw9wjRdrB9YJSU/2GhOoZHN
p30O/gP//kTK/XrwHJrU7c7iafwMhwcEeJScFlB50jfvHpFBSCK7ixYv/EI5
oQxhB3y+QIHf2prU8yW0ZHt5xq5+CPDIlrPSJ1bQrtMhRhW8w3Clvb1f4OQa
8mWfZB29+g1OCp99J3l4E7Fih+gG9EdAp7HOUzuRDle9a7DRuDoCvLGHBOrP
0OOp2ZFZ+1NHweCmd2DBDwbc8qJC145zYxBvMe1Z9ZoRf/3pxlNseQxi/Ocd
zjxixk90ltN/TxgH9icZ0bdP7MCFteyWnp6eAN6YSlY53l24ooJibNX3CdA0
tVFi72fFv/2Kas8KnoT+58bWyeFs+NxRw2Cy/HdwvN+kNCfLjkvMHp7Z1vsd
zHe0zHsyc+BNYnc+ugf+ABVLt5yVWQ78Sd8nWyOxKaCsj3Qer9+LE8Z4LH3T
FPgd0hbw8OfEKy9ya57wmIZJn04luXNceFZXUNrY3hl4cfWeVPYWF/6n9er9
vdQZoP5c+m5dw42PxKIldtdZMEupOl5qyYMv95wkP2Sbg1tLp9sFaTy4e7wo
7k2Zg5pkwY9rPrw4b5co+4TlPHQ4jo0sE7y48afidYHNeZjiyK03MSHhfnnO
q910NLj58vTsj4skPN9beuUhAw34T/bS+ZiS8PV9xb+nWGjg1eo7lHyZhOfa
Fc1UcdJgkOevXrcVCV/9U/BZ7wANUi77ttK7kPBMvrwqXxMaMHooPYt9RMI7
5+wqZU1pgN080kcXQsL/YBLlY+Y0ULNjn3d9TML1bHOLdK7RYFWioPBMOAlf
LsrJ5LpJg4dPGHVmn5Dws6rZMcX+//o5/VJWk0n4r2sZzkOFNAiK2FarWE7C
lxIZFa1LaNChLivtWEHCV7odNybLaKASRheTUknCt0A+mqiiwdz7vWIbVSSc
VbixjB7RgCJI5/zqDQkXH5n4JdVLgx+zD0dnqSTczErK+84aDTSvF30L6SPh
V55HnlrdoEGfLuNAwicSbvlhYYc/HQE+fz2ycvpJ+A31N8mhjASoJS1Vo88k
/JbwWUrKHgKmltzzJodIeOSI09bb/QRI3Dwe9WeChCOrsmA2PQK47q+mSi2S
8Lpu53PD5wmIspY+d2iJhFerHeQoNSRg7vopDellEl4skJOqb0rAJUHxDakV
Ep78OflVpA0BkXHFqrvXSfidCyGjO70JoE6zKT5gIOPuSDNv8D4BffrVoTbb
ybizzDaXQj8C5l0Hh7QYybgNq++K7iMC0j0aXJiYyfiFNo89YU8IWOlbuuu6
k4wfUrdQZc4lIDtVRKaXnYxLlPExDOQTkDIgthbPQcZFBT+35RYR8EK/TMVk
LxknrRuZaFcQEBwgM9XBScaZanWcgikExPVaqSTykHF6SaYjFxEBowIXd2vy
kvGNZ43LYlQCbnRC9+w/L3qqPWxqJYASMfvuKJmMj8oqJDH0EmA7oERN5ifj
Qy9+WvZ+IsAgGVQOCZDxz7vLxLI+E2Ca7/C65p/fzx4o1xgmQKNteapxHxnv
uPzjzt5RAswdeI5pCpLx5vbsk2PjBLD84Mlp+GdKnlBr4DQBg3oB+ZlCZLyW
52uk4RwB594E3mMVJuOvgpONRAgCxPSNet3+uXTRlPTzJwF7VXp4O/+50JZ7
GF8k4L/fF92ERch4zsePWTF/COj8q1fl9M/pp2IcrVYJCOp7K1v8z6nl+rJy
G//2lGqMD/9zotCupa0tArSX+zQtRXbg/wN/IMG6
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV13c81f8XB3AjpSLZ95aszEQlGqQjIkn2rOxsqVREypYdspJkl5G9wv28
PzbZK76SFULcqxCZP7+/zuP5OK/H45zH+e/wWdzXtqKhoqKypaai+n9VtZrp
xmf1LgtezKWi6l6o/pmnbzFKlAJl9aq8ijptEsfB/vBi4lWIKZJTbuiNIn3G
Xji6CqmDq9MRVv2+cpLERbaMd0RdOMLhbPW1t4dExTr7eofHCGLnn3e93pgm
dc+TfMyFTOC/Tu7hg32rJC3LlgrzWHN4lVt/5wXLXkym62xBFPEunFNiDKjo
ZcGOyyV9qEu0huwVvQvnRbgxhmz698s8drDWOmtisSGELXM8ihVMcwAdgz7t
2Z7T2Hff72H6Qk7wsG+Hv7/3PGa5llZbp/sAAvYpe/fYymMDEkaX78Q+hD1N
mlOqLMqYmtWhyuUBZxhgnGNcZ7+J4W/rpMOIj8FpS7wroFcbk+p5Wih4+wlI
+2Nqx7YNsCx6CXEs0QU2m6WejgibYNzw46P+iCuIsS1s9ZdbYFFP4gUoPG5A
F3ksln3DGtubezP5pbk7rNGOKk2QHTD3CRou3rRnMFWTwpfV8wAjEyriKiY9
YMnbNTeP8Biz1LjHqiX0Ahgnb0c69bpig/78r2ZtPOH4cysbZUYPTGjEga5G
1wsmOffp+dh6YWZuyophK16QcG9FdZnNF0tg4/M2ivUGnVDhE93MAVhf/gYm
eN4HqodjzUWtgrBDN75u/h7wAV+7sUYl9jBMZbpABnvqC8rs8u060RGYr3fI
02CiHzxiHpDd0xuFYVzWZfqVfuBcCafFVWOwtXL5Zf7b/uD9cLXPcisOk9Q5
KknZ8Ice/bxAo8UEzJG8cr8qMQC+VVsNfhNKwjKDuj69lHsJja7HL9n3JGNj
Ajm/dEZeQgfheLpAeSqme9vMZp4nCEStz/wWXM/Ewv/KZFTgQeCymsLz+U4W
1hzJ/sPPPBiMNm03UhdyMBrxRV4tmhDIWi8dOpmfh8k1fzE5lhYCSaXcrAPd
BdhTy4zEWcVQ2JsrJt5oXYQVbXsOlU6GAg+nqtc7zhJMSFpaX10oHAJI/uxM
PeWYWRdT9JGmcLgaGsIgP/IZe+sw1z1t8wpiw9oyAg5WY/TdnZlINwIWqPFq
Gxscy+AmNQhmRIDh3RzNruIaTMExezJkJQJY6pdSo1jrMI99/vyGsZEQ9Hya
6cjhRoyo53wFm44E2aAzFRZ5TVhZqqmZwPko+Hh/9gKDZQu2KCeTtDgQBReK
vF3zWdqxsBBhkr7Ia1ATlexVYerETvzHNlz99DXcOJzGVxPVhd19TCEGEaPB
h7En5lh3D3aWNsq96EE0DFgDZwdPH0YTJfXtW1M0qMn1OaR69mPv890SJVxi
gCpLqoTuySDmdJlry6A9BtYUyEq1B4ewS+2YsbdALGh0Vk9vlX7DhuZoefp6
YiGFYVHA9too9tEt03NLNA7k+sf/+xU3hrnSXx8T8o4DevctokDcOMYmFJ7i
dioeynBL2cnyH5iGOUGAJ/QN3FMWOHAgdAbjXqz0U/nxBvq+XhFLH5/F5l8Y
Tz2USYCV3xpB61d/YcGJqZn1MwnAz3UfaZ4jY4ZiSvvI8BY+pnWsMzZQMOHK
nzaccW/BvLqQy7twEasfOClqr5QIdNbxowdt/mCvrTuDXicmQvcPOVoq9SXM
YuXhXPVSIvRO2X/Ul1vGdljKc5hS38FHk/PM/6T/YjLqVyRKt5OgbniUrzd6
HaP//iN8RO89PFne+RFXv4ENOARQ9n16D/xHeSh225tYZb2V4SfxZGhU4Erj
iNzB+BnK6RWMkoH92XzMmSdUKEiH/vNXv2T4ixJNNIWpkeFENpFqOBky08Mz
HBNpEBLdbInelwJz3vtdM0xpkdDDm+6iZ1MgtevUo3aRPWhlhzKkHZwCLxeu
/ne3nQ5FHZNOzLiQCi5d2S85Lfej9bsBajJ3U0HgX0GduNEBZJ47sNnxKhV4
WWhqJfQPotOy7sZr06kgGfvQ5bEVI2o3RNw3YtJgNl6t4jb5MJJKPtw5iqdB
a7q6xFQAM0r8ae75eD4Nch/kajocZ0H2LnvG3immQ+aeUaYSW1ZEH309ZfF3
OlRWzPw+KcSBNi6Mb6QcyQBTxi0Tlj4ORP7+VF9HMQNESBFtZH9O1Cv88WBZ
dAYMa4+1t6wQUFLVXpdn5zPhleVITuU+LhRpltR10iwTFHvo4vYPcCE/unNi
I4GZsEi4UdyWfQzZaViNyQ9lgtfzMelFUx4k9aNOde/zDzClL90h682HhANv
Z5RnfABCDPuVNxt86Ij40o5txwdwP8274vyUH+248Je28nwEf9ElBZLbcfTl
gDdPZO1HmIwnvXj/VhCZSV5ePkqfDVHtHSJGd08gnYF+9fbT2aDlXrYZd0AM
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
Obiys0PZ/ReTb5nw7cf/B9BOh4I=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVV3c81v8XRYN22TKyQkZURMKloUgSZWWWUWRFZpFEiuxN9t57Pp/P+7Fl
7509KvIgIzJ+398/977u65z7573nHI6nVqrGFGRkZD3/lf93ReMfXcSfj2XS
aclcyQx8pOZz1Z+OM4nCqMutxbUTSIr+WJ9fEdMt8GI83/e6JlmqAnd96cCj
DCp5FF0UjjWEi9doU74yPYKsZVaXBLVyKTKan8H757SAo8SCxdOgntC1iL03
5NGD3ribng2FAYSHz76VG4YZwm/vIJfggQKCZOeV/CAmIyCYNR281V0gxSUd
m1YbYwJnEw0DS23CCcczqeLWzr0AoovExoqCmtQavW3Y+SRzUJJWEL8bmSP1
3eP7F3UeSxC5/cIjKCJf6tnfpJraR9aw87l3sUbfT2rgopaMTpgNxMS9A03y
bwQl45OVawOvgIz87UufdVMpYnSt2BcmOxjdOLql4V0j9eyBBc1DHlfIC9VW
lJavlfJw93H8zPQBOptq6aJoc6VwFpNS9coPwNu91ZluSJD6Wya7xvnEEx4r
cpdLphClLqsxXyb984SG+Hlti/5YqZdL61ZVMV7gqmMSOFtZRUj91JnzUfoj
hPhHN/XLNhImuLMW1MY+QsSM1ssC/lzCWaLnBXY3b5AKiT/94NJ3wqMnBqaL
5z6BI/5r9usnD4LfhmRKOfETtC/csd7JyZJqCqSb/mD4GagpQ9/7/iwlUAgt
sz+k8AG+UsY3EpSTUtJNzXqsST5woTLnuGL1CMHxWUrMz5u+sKSknbtEniZV
uOc2XDLjCwGzrnzlHPVSi5HajO89v8CxygUmP+MRAo+YmLoyjx8YxLeKurin
Sxl0ngo52+gHImxHEwfjSwjR5r+65kz9YUf2j5UmwwjB3GPqo9bBAGip8XlC
kColUHV1pKJHATDxCB1bkKsmpLBh9edTAqBupzxkUDCfcONl5ozPegA0eXBV
Wim0EMYrwg+s3g4Ek/KeVfUaIuENpSenZlgg/NyS+jJhPktgevxKDp8LBGrS
uVZ6ziqp0kR9A27xIFiNoJZtzGwnqC0ruX3+GAQcMXT5dCu9hGVpydjlgSDI
Le/SiaDqIXzx4cXU+YJBYs6RGGM5QeAfoh0lOAZDWmmez1+fAUIjD8U/zm/B
IIrndwWhYYKRHYnpE1MIRO691xrOnCJcORDkXGgdAoddQp59U54lUASJjow0
hkB3j8iV6X/zhE72geuHzoXCX4tNo7mNVUJcnlPMRftQ4P/pYJ2b8YdgKcOy
q9EWCom2fjzOpesEqTZc1507DI7fyH7sO7ZJOKZjiGe6hMHSJ7nn6yXbhOFf
B871doeBYY5YGfutfUK6U6rb7oVwWOhijFoZoMAcqBQmeNzDIXx5Wt959jAm
H74gqzIYDvwDnSbbH49itDx+CU7CEfCQSjuieeMENl0sQpHkFQFi8T+/qDw7
gxXe7Hna+j0ChpPsFwt7abB33a9r10UjIaL315gkiQ57YMjIfc43Es72LO6X
H2XC2JYrP9ydjgTVMyI3T62zYIuuurM2klHwdv+8ZQMNB1Z1gkw+OjAK/tD2
SOAuXNjnmMTUuh9REF027l2MzmOaArcplyAailn0bC1d+TDeynlThvBoYA7r
eu9CEsA27n5ukl2KBoFgqb0EKWGsbkDwgtntGEg+dDv/yetLWLBJx6fgmBgI
ZroRVyErij1dt/lF+BMDHV0XH33PvIqJfKC9N6f4Fb40bCUZul3D9qnLsk4l
foWFkWzn2VoprD1B6/i1ra8wVboRd0lNFosR2Xn5VCUW9G9V0fHT3MDMUWyb
T1osnL9wizWY5hYmqSx3sWQvFng9doM/fZbHqL5P+409joOPWQv7J+4oYAPm
XiTKnDigmvE9qb5/D1N7S5vOSBEP5fYHj4pwPMAq64w1c4TiYTDDslD+1kOM
83gZ1Q2teJBLKaBWPaeGfVKjquj/EA/S4ZdO5so/xpajtF6Y58cD/2uG0+/8
NTDNqUwmstF46Ae6FW9mbQxd2PkWQpkAbKfmXmC9OhiPzX3nC1cSIFI6m/nD
oD7mVx7Lj+slwPEPfC5PfAyx9X3SsOrnBGBHLX9qNJ5hOnfkfOZLEoBy9Y4p
x0NjrM4v6PqbyQSY37SS+GVpign0Ty+cPpEI6mFea6mNL7AgVrGYFIlEkD14
NaFb8SW2beSlJGmUCF/tR5ojqK0ww+yBnXb/REgV+/TT6rgN1vSHL+dZVSIw
fz3SbZL2ChO57qz7dy4Rjjx0urFmboeFv2858YU6CY5BVt4rDXts7xsLziGT
BAxD7jKNZo5YmyZiuxeaBPJfnmISDG8x0fjTHePEJGh8z3Zvo8wNi5k3dLNb
TILJyPPOLnfcsQPCRcJHGJPhl5hfWV73e8zM/uDE15vJQFx7xZ/s+AHrxh4H
XLZKhrCCDY1ROS/s2qE02caoZAjkP/atXcgbowpRSFheSYZDUQOyD5x8sX8S
k/8SzqbA9NjRK1Dmhy19d1RXu5kCDb0P2ZR9A7CJ96cLDr5MAdGe5Jp7vYFY
D2/6sdKQFNjUOlP56nIw1tAKJqZYCni03haKSA/Bym0GiIxzKbDrrPeHTjwM
i606bO8ingq6AeeId9IjsUCD2E5Bg1SovJx/PNY3Gvtw6KrAmHcqWC3YCkHA
V8w+s83TvyAVaOuYGQzK4rAXD4wnZIdTIaYkZu86WQKms7YjuUqRBs1z1Kd+
SyRiypEhoUkCafBB40kZpWcSJjpdq3j4bRoIahT5OuqmYrzeT1LKUtJg+95F
SWwxDTsr9Gf/eXsaxNumaluFZGDHuz9rn91Mgyp1hux69Sxs356zpOVcOnDb
9avmiOZgq8yVp97eTYfkK2ltTMJ52AzxodlFm3QY4c89LpCcjzUfdT8XWJMO
43kUDFdJhRiWx+h8YyEdsvSvy/27WIzlP8rv/UOTATeZ5K+8dS/BQmPHP6kb
Z4Dcy07ugmflmPdNhxlKvwwAptFzR9crMOcfJ6GiNAPOcQanx36twgwuy6wx
U2WCtdr7GDMJhKkN9Cm3iWQCdd47n5AwIib/xiLDVSsTijTMp0diqzGBhhi9
ycxMCPs4V7c4WouxmYtWBPVkQsqiIZ5GU4+dPt1Kc2snExoyDll5PGnANrT+
NaXezwIGilMeKhzfsJ97QVya9lnAKr5CcyuhGRtN4nc9EpcFW8zdDuFirVj1
b60rL5ezYGUr/WNAXAdWHLTyhZUpG3Ykpc8nVXViqeKffrTLZcM7vYPZxKIu
zNe9/Oul4Gz4bqd/nbWlB3PjUfk7VZUNJwmO8ikLvdirlnnVkJls6Jh5adpy
th/ToGOg2hTLgY5TM4PzaYOYYmXu03S9HJjg67h5nnIYk9KXx7Q+5oAXrdGv
bYcRjDPj9SvCYA4U2V2yYw4cw2iVT7RZkOeC85pmhi/rBEb5J5n3HH8ulNZd
Pvp7ZwJblOoddXfJBY/kHsew0SlsfNJc/EpyLkzJijvUfp/Gur0OBM205sIR
o5zQOwszWFnn5Tt32PLg9njTu7NC85jfz8W7gvJ58Ns4i1dd5wdmQpGmeMYy
D4Z+vSE8j/yJ0YsyK49geWDqjepsYRFbUup7QJzNA7SVxRae8RubLmxM7z6c
D6g8ZW6Ri4RVtbhnll3MhwrZFPE/51cw3kE9gcwb+ZDLV/jKencFC565nh2j
ng/D+R9N9cdWMfPd9Rx313w4K54QIIivYczCZgX32vPBaua7rQrZFuZ1/c5l
mal8uLzVvel/cRtbvcNdJLKRD74D3D4+L/5hzQZjxXRsBfB1OdcZp9zDrlpU
iVFdLoDfpcE2a+b7WKJTROn27QLoGRdYdrYiw52DVMvHLQqAIMjAX7lFjs/F
Cl/rdi+AN6dGFo63UOCqWccr60ILQPr+SMx08gGcv66hKgMrgEO6ewaGtofw
4XVJZHuiEM6up1mhD0dweQpGWROOQridqXvQMOkoXnhynagpVgiMxj+sbrcd
wz/z5tVI6xZC2ohvt8mtk/jGFd+bIjaFcGlS85t90Cn8qeyLOk7PQlheWFMp
tj+NS2pxNVDmFMKo79a/ydkzeKox2Z1tYiHwTIY2H0mnxqlffW9c7C2EVd5/
agE2NPivz+HfunYKweXD+ngRMx0eSTjWFq1UBJfn0H5lDyN+8NuP+34GRaBS
8/sL9yATbt1X3/7OrgjkbOPGz86dxe8uuXUaxxRBGO8pmeVzrHjxts5Dzfwi
YL07oPRaiQ1np5TsVqwrggGJAyUdHufwv+fWeoQXiyAnu/qt5FEO3Eiw6xEn
WTF4Ut+lv17GgXdK5PbR0hZD3GALnYEZJ57+8PnA1vViSL+owzo+zYVreowO
1/oUQ4U16xXzC7z46QkeQdOEYki7tUFLYufDv0nZvD1aVgwtvuP3Czku4JIb
h9gfThVDQ3WB+GVZAXxVVcVmbbMYcj5W7QbqCeKZeVE14SdK4LpgwwOHj0I4
8wth4zGJEvjMvih2ZVsY7613KnVXLoGRRzfW9RNFcF/OOsrzRiXwJ/hGQ9z9
S/jOiGamuX8JdMldqegovYyPKb8n/Z0tAbUxo9XYITE8LKtVNuZfCdDzaWc8
Kr6KP6BiCIIzpZDe0n66MEwcJ1ZniXpJlULk4iJJw/Ya7si24XlBtRSktU7n
s1pK4iIusgOtpqWgn1Mg4W1zHU8Q7XOiCS6Ff5cjlDWCpXHtwHMtpemlQLoV
z3q3UAanXnrBoo2XQvALZ971YcDfp+3h8T9L4Vy594jGeTnc6CzfwYuyZcCu
UEjJ138TZ3F49bjrcRkMt19Z/R5wC+/rIaTamZdB7pefBhUPb+PyXx4qVIWV
ge27Ho3wOXl872d0lF52GWjnyFFsVd7BS+XnFshryuCO+i6zTNhdnJfMxe/u
7zLw6/7eIvVUEZ/QqR9foCgHiRVGT321e3hExalL/ozl4LKX33VVSQmnsk3u
6btZDqf2pMVnHiv/l3LaGJ9FlYOAxoJir+lDPPEGo9nh/PL/9Nq91ZxCFdeO
e1qVUV8Oz7wWXncmqOItmpu6y8vlIHzTq8ybpIZ/KJHLCz5cARnqnBc5Yx/h
UtS+ZOIsFXDOWtOdVvUxnt3CnvT2TgUolczHRjSr40Z85mvsuhXgoNcq5OCv
gbN6ltyue1UBxQX/Nu5oa+J+Moo/jsZWwHLs4qdnFNq4VYGtUMRaBSDCHXOR
BF18SWqy5xtVJRTRJrtaftLDXzYpO/9jqYTo0lG1o476+PPxC416tythNdOX
522xAW5wYsLgfFglNIVdCGHveIqPRdyn1MishOMKfyU29Z7hOtxVOd54JYQe
D8pNXX2Ga14P216Yq4SbmzRffp83xlVeKIUUileB2uQCcz1uirevVUjO3KuC
tCt3/1FZP8eV3vFO0hlUAdWIddDv8y/wu+EUF528q+BT5HLH4XgzXLa+vBGG
quCW2m+zyE4LHFfhsbT5XQVClS5P9zMscanRYNokcgJcaDRzXfa2wiX+WBoe
5ifAwOWrsttZ1rgIx/l/rc4EKJA4y0cX9wrPzQ5K2PMjAOuB0p56LltcUILs
rkgSAao+i87UZdnifA9GQoJbCGBl/JZtq94OZ38beFGbBYNkm7hD2ucd8Fiq
/V4fEQyS2gZzoxsccJaQly7YLQwcTVapWswdccasO03sFhiEfrgbq1DjhJ8Z
2jWcxzDIDfAbk058gwcYmVMxdWPQ5/XDy9D4LX5yeTBXcQ6DWsbrvgJCrvhR
yuJ/OSdxuBT+RoahxQ2nEDMLtdPHQXrm4XBwgjv+jjhwPdUWBw6F7zn8DO/x
vXu3pwY+4nAr5JqNm/97fPspu/D1fBwa4XR7jLcHvhrQ30ROjuBcQHzDvVhP
nPCyAGboEUQHcZLMxb3wj3d9SxsEEVQWPQlW7/XCWchuJPtoImD7xPpmgskb
v22V40aXj6Al0WH7Uv9n/PQ9743NegThZwasTwb44MM8zyyGRxB8cY78Yqbs
i4tb+eZ0HCBC2YPSiINDX/BWnhvRIcJEsH/r/E0+JAAvCMnr95Qkws6uDSni
YCAeRsFK7XCbCH8/LgwGOwTihmOb3lpPiOCaXHIWMw7CN0Jz7Nk+EoHc1aDV
xSgEHznAXHgqiAhGe3d68xdCcKKN92+yr0SIvivWQGkfivvcf2Y0XUiEzCwX
Od2QMJz9EJNq+hgR0sjxQY+tCPyQrdeXyJ9EuGgr55sUHYn/mvjT9HmNCOk/
3kRby0XhJYR2sDhaDfEdIhZ6EdG4ot0HoctXq6GhTXw8+3UsLjy18pxLrhq2
v5QLaonH4bQq+sm0StXAb6DRr7obh48LSDJvGlaDdmzAqxst8bjdNImK8KUa
0s/Yxwi8S8S1HureyomohgfifpFWfxJxGdTsFptUDQMUIu1iL5LwI9EpG+8q
qmHQ1lbfWScZj1V9MnN7tho4XOwZFJ+l4k3VDahDqgY2VQQmf+5m4qmtOzNf
7tQA/2VFsdCYLNxz4PJRJdUaYAvQdX0vk43f+B37qMm0Bi5sFvro++bgBEaH
n8SgGiBMmL1d5MvHo7hyTrp9rYGEH3q/ubzycaeL01ek02vAOuwNndRsPn71
1gPXCqwGDicMt4lkFOD5Vrw0hT9qYNC1nJpLoQj3c9aVsP5TAysr8/7qpUW4
hWew7sW9GpAKEq8vPF+M80fvp2XS1AJVqv/esWMleHLDgFSSTC0cEo021Vwp
xSNYvU1CQmrBCJGv+olV4fZ8uI9qXC2s3ao3O99chT++spZ/OrMWglk0qQIN
CTi1gsE/X1QLSxcYfRgjMdzXTiLA81ctCAWNqHPTE3EzN8uSm+u1oCt+ydv2
JRFX+Jw8TE5WB53UTe8M6oj44fjT513p6uCDSTWvsFM1/q7lR4W9bB08OJpn
Y7RZg+v1s42L3quDwcDixyZPanHpyUcH/zyugxe3pDShuhbf3iAqW5nXwdJQ
gEZoUB1uxxk5bRpW99/97sflKDXgL5wUTmgt1kF5r7Z85/lmPJP5jK7eRh14
/iF8OZHYjC9ig9nPyOqBw/E1tzZ7C25J8VzJkrYenmNxLLJcrbidj5ePh1Q9
vKCkzmW52Y6XCimPeMvXQ7zPJ9mCznZ8s4NOwE+lHqJMwTzUoAN3pk1pjjCq
B41PFffLbnbibl9rj+T61sP8ao+5oFMXTgQfraKweshNOL+a+60Lp5hSzSiP
r4cmr8WqN8zd+Aeeqbu1xfVgL0Yxdby2G/+cR+Y9OFoPRxPD+bw4e/HQaunD
B4QaIKD7DcUt3gG8/9khdSrxBvjJrGLR5jeAMx5uSzkh1wDSGJvA2uYAHqWo
c5vxcQMEic+ri3QM4vE9zh+E3jbAdWmVW4eDhvGp1zd6L39sgLGn5xNZKEdw
Lsaj3BKBDZDROf1p/+0InqoTWXsjpQE8Vptnb9qM4lmzZRSabQ2w4Ov7ysly
DF/86KaqO9AAI1yycqmrY/hF/juJTycbgF5r+GmP4zieb9kvZ7HeABpfD20n
357ASzfX3r1nbYQQx4H9EqNJvPrI5f1si0bQDJ/NfjU4jfM9Ein77NgId1u+
J2lfmcEDYi9aPfdoBN/T4kdK/WdwgysC41yRjfB3qnZvRGkW39PhRlF1jdD4
qPm689AcbpLG6eDY0QjHfpeMBcnO420r7MLqw40wE6qiqZgxj8d4scadWW6E
bVuq2my3H7hkPr2bN3MTXFBZJU3L/sITt2nFTXiagFGq/F54yS/8yG0a0s1L
TeC2YirCJLiADw6d0t+Xb4IIsqWGBLZF3OHAEbB/1QQdxgLpzmeX8GL1f3vP
vjXBOK4SHH5tBWdJ2CqV622CjLq2N388VnCPhU3Lc+NNsL2U7WbRsYKrvlsb
G15rAoqhTlLzi1V8OeM3/pD9G2ztlRaGZ//BhXbHXcHhG5RNX8jYt9jAQ+6M
XWV9/w0ky04sM7Vu4DuBo0vbvt/g/YD7crDA5n//fUivNPEbzFKY8lUsbeJm
Kt0yQu3fILrygoeC1xaemlS3d/Z8M6C8btmSvR3c2vPRJAg3w4trtv5MFrv4
ddOZWqNrzaCmYy60NrqLd/If/JR7vxmMfp/CWav38K2CmzQ37Jvhdx2n+Ph9
MqRErOF90dgMYmf749keUCD6RNWjfl3N4Hjs0C5NMAWa9JhaLBxpBnLP3tmf
AxTI/g5F4Q6pGdKSXn2UMzqA4tvlpAIYW6BXPy3ox8eD6M8oUaXsRQvYTtde
s9o9jP4zGFdGbVvANelvdJYKJfKOn6Ajd20Bnfr33GvJlIjFiGxEMagFtATm
XEpUqJD8AhiPVbaAH9Vy5P2SIyhqC3c6dLwV0k5RXvcrOY6MRpR1+Olb4ZTU
Qtve2RNIGBuTecDeCqlFeby57idQ3bu9A5GirTBJ/Djdr3oS/aaU8RPUbQWT
4VUaLYrTSJYeS1TLbQXp5Evso71n0MFQOqvb5a3wTyyX7MIZatREY3ldvKYV
jmaa8AkoU6MHZ871nu1vBRkheqJ6MzXSO+5+aGq3Fej+2DK/a6FBLhS3n1vf
bwNJWtOhrlU6JOP+VfSpRhso/Hhl+OQ6PaIg2yB7ZNgGPJH4QsUHevR5NzVS
/HUb7MQ7Bu4xMaCIv1QtezFtQBZDR5pSZkSlS61CXxbboIErkuzkzFnkbHF+
23WjDQIZrYtWJJmRzOLbBmuydujZ2yS0BzGj+p8X9R/RtoOP/EyY620W1DsT
EMAs1Q6pyT0j26WsaHX40Z8Mn3YQ1jmk/9CEHZVq5aDo0HbwDTnedj6KHTkP
HvL9EtcODu1V8T7t7Ii8v5Tbpqgd8EJRqjPXONDpLkZ1iZF2GG0of8pPx4mE
GkfLG/g7IJay+M73X1yIfsn8d4BYB8z4TpJVCHEjMrp/HE9kOyDM8k/bExtu
1PuUyYf0uAOa15lL97a50Zu9x7qM7h3/6TO1+B8GHtQq1kFuNtABhBvZMTbO
fKhUR++q6FQHuInGnKxs5kPxHr/N9hY7gP2E1+8F5guo8schMwXyTvjbFChE
V30B+V3l7vlO3wkqk5JmiF4AiXUbpBy+0Ql3PZR3AlaEUKZxOjK/0wnXnjgE
+z+8iNi2SEOdSp0Q2nmgM7bwIqJidzsZrdEJHvmj+JaDMBq1+OogbNEJ5+hD
eDY+ivwX0YcVNCM64aCRYHrY9cuoV1ZtKWOpE7z8nhS0Ml9F23HTXwv/dAJl
lLbrkSdXEce+7f2qv53w4OZLrbmoq8gSC8lupeiCvcLAMk8WcUQp2W9Gou+C
DOIl6ve8Ekjyita8KHT9pwf0aQW6ksgg6GeY9K0usI5oeRqZJok+rjjJyyt0
wYJU4QOJVUnUmxeVoqHWBT7v6KYTPl1HFoKjz5xNu0DIUiD0QbUUij+vP4H8
u2DT//lnl8eAGj6Q/JtCuoCP/WR0SBag39Nu0BXZBUlDd/SAXBZJJsbHTiV1
waeeXx9NtGRRD9uUzqHyLjj2dVej+qQcOsxoPKQ40QWXO4v6rP1uoJdHzbv7
RLph6sPVFoUft1EqRl+qeLUbTEIa6M7wyqNx65pIdL0b0qLS2BxM5JHqAJNh
hvx/OFdLH/e8PJJIbiK90emG4xPySkLLd9BBGZ4T3N7dQGdZff4ipyKSWela
jvjSDTkalJve5orIIflt74ngbnhpG6cWWaKIfh3ti978+h8e40CYuHcPdQ54
8LcUdYOoQscNMXclFGMzeefVeDc8Y35c+/j0A9TP/UVgfqYbpB++96gzfoBO
DUqc0vnVDfS/D96kIDxA72UC+m+vd8Prw5XIUUwFPT8GxkzHeoAt1s7E9KcK
Ek2JeU+82gPbi+TFh01UUcugBnbSrwc+f8u+Qix/jN4Pz9OZBfdACAlZMK48
RhKjDpb1ET0Afp5XVi6oo+Tx8HNvknqAZUzoId9XdfRmbsD9Z3kP6MV1ljZ9
0kBCaxryddM9ID/E5F76RgvNrM/HnvvZA6E7N5oDMC0Utemw6bzUA94/7tPv
7Gmhw//C0y9t9cAJx5KTnz200Rj54NG4k70wFLZ3OzH4CfI/pdnhdK0Xji8z
paJOXSR/5gdvn0wvvB1PXxdm1kM71I7vRG71AqGZy/qmiR56Th9xaV65F1Rt
WHI19/SQLOtg8COjXjjpdI1BmNkArfBragr79wJb2YuLr58ZIjV5zcmZmV7Q
zSxR+HzNCFXSXOqY/tkLA1MF/2ZMjBDn5BFsaqkXtOa0OiNCjNCqS1XExN9e
6Km5JX5yxQgFFLCpjB7vA5IXl5tsrjFqZZnFe0T7QLL5UJmCpCkS/YVld1/r
g5CyG7dcLUxRdFlYVJdMH4hL76fRJZgiM9W79h13+2C4sPCN1ZHniMo7S6hF
pw+SS58oT449R7f+2MTUfOgDTSmr7QdfzVA2UfFz9ac+EHBJ79/vN0M0flyO
RL8+kDD/TMN6xhxN8fWp4RF9QJfyxDrRyxy905M4VpndB0+U2oQX7V8i7Nue
U0FvH0y/Df181sISXY330Yjn7oe7//D8D9o2KL/azekYfz+cYLlHvetugwSm
baPthfuBcCSguzbDBrHz6IwrSfbDzzxjV5ltG3QsW9B060E/WI8t0mzGvkIT
ZW32qi79IDVNRbW4aYueDFVHYO/6gcKL78snbjvUv11SyefVD5b/lvfePrRD
LdKxe3sB/eBoTDFrkW2HSmstvbJS+6HJf9THyeQ18uk4FXawux8kxOIlqhfs
0eGVA+VWA/1wc7Cal5rNAb2j/js0PNoPR8Jb79WqOCD7xxOsBfP9kFzDG3e3
zAEZjOSn6O72g2woY9iytyO6Ov+wpJRvACKVNazkwBlN7AX3PncbAFceOWrL
nbfo+GKnj8OHAaDJqhCuFndFEkMnbnp9GgCv44b3nG1dUUDRx4Kk4AHgf83c
zL7oimSfu/iNpQ3A44lvXA+m3FBC19O7jzoHoMCWt1B75R16mnyJAByDIChp
emyD2QP5BVraKvMMwuq0jl6IrAeqdM3i1xUYhPq7y15Wxh6IWut8pLPYIISF
dGR+z/NAtSeY7EsUBqF30M4v8c4HxO1AJiLwahBo7HKdz3p4olmFjiT62kFw
yn5deEXQG3H78PoHNg3CGVm24WEdb2TU6uZ8vH0QhjnWc/u/eKMpZZGHFEOD
0NPkqNi+7I3G1AL3fi8NwhenzPbmyk9oUFdNq/7sEAjOee+Y6PugZpuBk3av
hqCtMvRo+ZIfOlIkvL3kMARh9sOfFvn90d21j7Mv3g6BS7swtZepP2q0lyDo
ew9Bz5d1y1+T/qjOJfLFvdghEImsnq+1CECY55M6zuYhqLz545mCTSDKjxx3
6uIYhvDRsITthGD08gLL8GXeYcjp/PzndkMw4qvQlAwRHIYEo7LV5l/BKG6w
a1tdfBgeedHzeIiGID+GOpdRpWHY5nDMLW4OQRah6W/nHYZBYHI/SZ8iDPEH
2rjvtg1DSVa+/n58BJpjz53U6xmGSwrGzQxtESgx/5cccXAYVGOUR2y3ItDZ
zmcUHtPDgF2vu/FXNRIdOaXuQbU1DJPW2q7Xj0ShH76SnjTcIxDurqK1+T4a
pXgf+HTBeQSq40tUC3NiEfWMt+tFtxFI+iq8+2g8Fr2Dk3ZXPozAqImrtNSZ
OKS9wagv7TcCDpzkRUOv49Apo4tiDxNHgBy9thXkiEdOoDXp2DwC7x6etVNf
i0f3N3KvNZ0dBe8ZinmL0kRU+VBUuO3cKHQxndPs60lEfDkV3N3co1AiB6xG
K4mIwqju1OjFUeBQ/KP0VzAJlXUNzZJujMKBv+QL+ylJiCPnYBCD+SgUklq7
CuKS0foz7V8mVaMwrlXworcwFdnT/KMZJI7C5cD+b6aDqWijJlpaoWEU3llR
LAjv/TdzfA8Q6BqFUDImXX3FNPR3XF98eW4UfHm+v5ebTUPbT4w/OFF/h0z5
Q253zmcgskfWbL4vvoPd2NQCVWcWenfgzN1dy+9gE2RjkbmThciLCmws7b5D
RonTS+8L2YiC+k+ditt3CPrsO7ftkY0OdL42pwv9DpUv1n4Tr+egw0ou5bHE
70Cl/uTf0bJcdOyWl2oBwxho3sJOipPykRSyOtPAMgaWZ66VdVAWIEtJrc5h
jjEQ/jBu5sVegLpFBJUPCo7B2q8SE2XVAhTF2q2gITsGjztSh+6VFSC+TVa5
3ef/8e10hek/FqJbmSXCCpVjwNVkolQuU4zsz8ct6aIxeEfy1L/3pBilx3vn
vKobg/HEdHEyx2J0LPyJQEz7GIxotBR2FBSjbg9yXtLUGOzwnL1+hLcEGeje
Zws9Ng7+U9nkFIyl6M3p2eOTOuOQS2lo9JO2HPEPF8qOGo4D31TGr3ti5Wgo
6Z3dgMk4XMX2CN2Py9FVcZbRNutx0BOPqrkfXo6WddWyKj+MwzX1DHyHuQI9
y6pWCMkeh+guDnptwUqkKB/rdWdnHDar36qtviCgHcqruglkE7BIWFtn9ieg
3kWWTbYDE/CyJ/CHRTEBvS/9xX+WagI+6zXc8NknoDEFr6DT1BOQxMVmmReO
oQhrzHD3/ARs3Fj+WdmBo+O4ANnA/Qkg33oyN5tHRL+V2Is/q0zA10PvvJYa
iKh9hPa5jNoENGEjhmfGiMh/a7cjRXMCIpY+c6Uer0bUYp1xds8mYKaIU/6k
eTVizLYDaqf/+EvrNYuCNYg7CnO9nzwBDLRspu/ra9GhC4WXydMmoLnUzHRv
vBbNlaXOFWdMgJNMvlv4di1K6/NXZsmbANtEfnUOkTrEf+Yp20LFBFgLkS6G
xdQhEe/DuHfHBOwasd5ncqlH0vYPdmu3J/7LM5d+Cj5oRBtmP1wUdidA20J0
8pV5I8rXd99u3/9vf46zpfdjI+JUKNocOjgJ/jV+dYvERkTFwrBKOjkJysdc
31qJNqHe6rE5Zq5JsGH3iuxi/4ZenrDstL03CcZsvkJhp1oQDwXlg637kxCc
NmXnLtyCxjfi2lxVJkGp6oK4z4MWpDrR1fzp8SS8mDnitu3fgiSKxOrj9Ceh
0DpZT5G6FR3U2q1osZ0EKyFD92qWNhST7JvEFTMJruVcz+IUOpD+zStS47GT
8Hj2fr+ndQfinBrqjUqYhC9/y/iDwztQ+jnew9Rpk7AZTj/NOdeBiqOqn5MV
TkKkc1eN741O1BqwIfS9cRKOH/aIk57tRLtvDMrD/kyCimmB2fy1bqT3WLTt
yL0pGLZc+6LN1YcMmO/Hl9+fgsKjq34J1/uQ4aSxranKFHh5fIncU+tDRhbh
TPWPpyCP7wjZvw996IXntvE7gykIrzztvjffh+xKiHsbr6cgTLmv5XphP/pM
d19kJn4Kdk0Nbi1oDKKSPuNgfGMKRjcP7W79GkEB5FyXYGsKYjVpczkoR5GZ
0EQ7+jcFZP79Bvpco4jNU/toNdk0hGjdXGfRGUVeog/ca49OQxfj392E9lGk
Hixh1cQ2DRePJWaOln1HmyrH7nXLT8Pz7zmzOtHj6FprPsVc2DQ8bem497R3
ErEkulTGRE6DXJxKXPvcJCJzlH+lFjMNL0VtnypsTaImrtFJYsI0DMx5qZix
TSF1F8rq6OxpcHlY5KT9Ygq94tdze1gzDSwXjYy3yKdRtvexHcLvaVB3vXJZ
R2YGsd82WQ++NQNve2j192fmkJioWGDx3Aywtvfd6/VYROOrX74lec6CkSM1
1/zrFbR45aEn0+U5SOP0fERtv454FoR+kffMwddcS6NThVuojvt1t7X7PDiW
VNtf7dlD/r19z1S5f4CJBW8c53EKIkmNGEhR9wMaci+JqvQdJBY+prt5zeYn
nHqrQbI9RkVMavP4OkX9C+Jd8+nfCR4jbjbquFDX/ALL/fURYvJJ4kQgWj9t
uQBPui0LKg+fIW50XWd6f3IRrMkWkoRCqInWIZxEJ8IirB3caOUXoiUytHGe
ntH7DYe7pOsSfeiIan3ZOyx7v+HvfNuqDIGe6Jr2cruDbAmu0gezUVbTE9Od
BP++P7AEtJbcfS319MQd1uw/P6iWYEeCa0ixg56YapL1q5hmCegPSm2zTdET
tzczBpUuLIFh15EQVkoGYuLZtOI3j5YgO6uV0UiZgdi6aFIorLEEb0/UsVeo
MhA3cZ78Ka0lYMSdzY5qMBCVnqVm3dVfggOZxpUJ+gzEjayURFqzJZiY5zuV
ZM1AVJRODsh2W4Iii9XUpUAG4qp+wsvRzCV4LibnHtXFQFwPPyRmmLMEeqO/
Oi71MRD/drzYnc1bglZuqvj6QQbiPlz2IxUvwcKWLTY1zkA8zl6bR4GWYPam
f+Xqbwbi+YmZVb6eJWhcaeF8foSRqGnA5/T63xIMiV7hjpZmJD6J8JXb3l2C
95ER67gsI1Gvc/mIGxkJev3HqMZvMhKNZSuivA+RIKwtZIFGkZH4il2REH2K
BP9ZJl0VdUai74T5fjUXCbQ3axLPWDISkUGe50klEhx+fcA8PoqRWNnx8t6Y
MgkMb0u9D/3KSCyV4T+T+5AET5yKzTzjGYnZLCkx9zVI4NaqGvw4lZEYNRhV
5PuUBEW636xKCxiJr1W8Jo86kSDlgXHGq0ZGojW6mTbsQgI/iuOzp5sZiS8v
kltkupJA8fZR7YxWRuLT42/+Knwgwak7gRVNXYxElSabU5/8SdBBQcxAI4xE
AVldacpUErTt6Yi7LjESefLOHhhIJwHNo5DxsmVGIifbYFNqFgn6pk0dfq0y
Ehl3VB/JF5AgikZk+domI/Fw+V1zTwIJBiZ5u97uMxIpeA9feoxIMFqy3epM
zkTcDa3d4K4hQfOllKdWB5iIa7Yy7+saSVD2ZM1UhpKJOCksGnmghwS2HPwj
5ieZiKOxK3o9fSToP3YPYz3NRBw8kcedNEiCAF2OkLozTMT2hQv5N8ZIYO5t
/W+JlonYrD3/mnqSBESVYwo29EzE+m/J16emSeBcdWB/loGJSEg71+j+kwTD
1Ff7E88yEcvpv/s+XCSBxx3B6B/MTMQizyhVDhIJ7mQJLTKzMhFz1zQYV1ZI
kHDJqkGSjYmY+YxujLhGAumpMM8b55iIKd3dSQGbJFDWp3QTZmcixssFvDDY
JkF72PiFnf/mmPz7wiK7JHCkvVYby8FEDD93bH1/nwTGZhWK/ziOEP8HaeV1
6g==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> 
     FormBox["\"Do the negatives just equal -2Pi?\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {-6.283185307861522, 1.8905105968377642`*^-15}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
0\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
1\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
2\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
3\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
4\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
10\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8050385520974846`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"pMinus2", "[", 
      RowBox[{"e", ",", "0"}], "]"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
      RowBox[{"p0", "[", 
       RowBox[{"e", ",", "0"}], "]"}]}]}], ")"}], "*", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"e", "^", "2"}]}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8050387331345353`*^9, 3.8050387337569695`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", "\[Pi]"}], ",", 
   RowBox[{"e", "<", "1"}]}], "]"}]], "Output",
 CellChangeTimes->{3.805038781691003*^9}]
}, Open  ]],

Cell["Yeet.", "Text",
 CellChangeTimes->{{3.805038787014943*^9, 3.805038788444131*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Shape of m=+2 feat. Ed Sheeran", "Section",
 CellChangeTimes->{{3.8042512100145044`*^9, 3.80425122042684*^9}, {
  3.8045105059687233`*^9, 3.8045105220822697`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p0", "[", 
  RowBox[{"e", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.8042512226407876`*^9, 3.8042512259786863`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.804251265185294*^9, 3.804254227309169*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Np0NoPole", "[", 
  RowBox[{"e", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.8042542832831144`*^9, 3.8042542864841423`*^9}, {
   3.8042655668912563`*^9, 3.8042655790339856`*^9}, 3.804265623044135*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\\((1 - \
e\\^2)\\)\\^\\(3/2\\)\\/\\((1 - \\(\\(e\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^2\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.804265601535101*^9, 3.804265623383819*^9}, 
   3.8045094635772715`*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["e", "2"]}], ")"}], 
       RowBox[{"3", "/", "2"}]], " ", 
      RowBox[{"Exp", "[", 
       RowBox[{"\[ImaginaryI]", " ", "0", " ", 
        RowBox[{"(", 
         RowBox[{"u", "-", 
          RowBox[{"e", " ", 
           RowBox[{"Sin", "[", "u", "]"}]}]}], ")"}]}], "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"e", " ", 
         RowBox[{"Cos", "[", "u", "]"}]}]}], ")"}], "2"]], ",", 
    RowBox[{"{", 
     RowBox[{"u", ",", "0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], "]"}], 
  RowBox[{"2", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{{3.8042656015420923`*^9, 3.8042656233968067`*^9}, 
   3.804509463587265*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Np0NoPole", "[", 
    RowBox[{"e", ",", "1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8042568276925163`*^9, 3.8042568381737823`*^9}, {
  3.8042653935607243`*^9, 3.804265403430563*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAA03gmpeOFOD/xFKmramRCP0DQMlj6
GkU/GLGrMXeoTz+5vn5sdyZOP7hb7RjZnFY/5Me88kvZUz84qi/Z8MVdP5KX
GK7us1k/VkgX2PFGYz+vQMSZVudeP56qhex+LWc/UWPJuGGWYT+MhCqYj2Fq
PzrQM7CSGWQ/Sudcklcmbj/Am8M1jRl0P0di8/hBJn4/g4GLeIoZhD9Yj1BW
CCaOP2R07xmJGZQ/UoPCLzAlnj8IlEmh8PGkP9v/HBTdZa8/t9AyR0cerz9J
YJewb063P1iD3NrDi7Q/0LaF25q+vj9vsXMtmPS5P56iYpFCZMM/8pDWyAEB
vz9BgZfJEiDHP8jBxr/PPMI/EQ5o1Akmyz9peUkNWezEPy/LDcNIEs8/wQky
/6xtxz+xkGkj+1nRP6ajxP4aJco/xYm/XrNN0z9AFr2iU67MP2gsbuy2G9U/
LcfcuMYqzz+Ea1gKBdzWP9RAU+6p7tA/PaihR9G82D9sCmvS1TDSP1vAr0fD
d9o/y9hXvQ6O0z+V2KTtQFHcP1NGWOHk5NQ/oJdXK+ka3j82oItXoCTWP3w5
49Dsvt8/sMF/eQsq1j9fAfz8+8XfPyvjc5t2L9Y/HxKYpgrN3z8gJlzfTDrW
P/6R53Em298/C6wsZ/lP1j+OKsPlV/ffP+C3zXZSe9Y/m722FNEX4D9b2cGY
vYDWP8SUKpBUG+A/1vq1uiiG1j9coXvJ1x7gP8s9nv7+kNY/rWh8dd0l4D+2
w26Gq6bWP9pTarHlM+A/MOViqBas1j8NcjkaZzfgP6sGV8qBsdY/ggB0QOg6
4D8m2oc3l7LWP74dgaabO+A/ZBY6YQ==
     "]], LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAAGswtH7RR2j+fZclOh4PiP0qnANw9
Uto/KP/oo9uD4j8GNz08n1faP+2E/80mh+I/fla2/GFi2j/IyJRBvI3iP22V
qH3nd9o/wPrypOOa4j8qkXGB/c3aP8iIdxlSz+I/pYgDiSl62z/bpxtQSjfj
P/VjWupmu9w/MLz2nQT24z8LRIZSsRfeP3458p3av+Q/fBDlDOFc3z8MIVW0
enflPwy+KwDXTeA/2YEQ9tIm5j89dk/9w/rgP6+1cUul3+Y/nKSMoyOc4T8n
Lzrq5YbnP15VNM0JS+I/nZ3/ck826D+11WWTvvbiP40f8JBu3Og/OcywAuaW
4z+Ju65uzXHpPyBFZvWTROQ/t5rcG5AN6j81NDWRtObkP8Hobrn9mOo/3/KN
yaOF5T9s0v1X9hvrP+wzUYUZMuY/7KU9j4+j6z8m6y3qAdPmP2/Ki0vZG+w/
xCR10nCB5z8ng/2pVpfsP4/U1WNSJOg/RlIFAw4E7T+Mfo0k0SboPwkgSomr
Be0/iihF5U8p6D/rHAysSAftP4V8tGZNLug//2PwxoEK7T97JJNpSDjoP712
l1HvEO0/Z3RQbz5M6D8v/Uq1tx3tPz8Uy3oqdOg/Omitjf027T88voI7qXbo
P1uGWZiOOO0/WGTVq8h36D+F0abvQjntP/8TAnI=
     "]], LineBox[CompressedData["
1:eJwV03lQ1GUYB3DEBEE5vJFBQTREMJcAKRX4omQpSAqCZBKXeSFmaGSgA7Kc
1YZrCuaCRhyLHLEIG+NBLJeBJKKciwMGqMku/H4PihwhSK9/vPPMZ975vTPP
83x/K4KPex3Q1NDQcGfnbbWXlDWkaqkg0CtL9RJz+DVpFhVoq9BuG5Q2yizt
argbqKtCnOzwbvHPHORxPtENBipE6j/3q07h8KA1RH3FWAWvrQ9bzdI5lPgs
ct0QpkK4qUmh1n0OWY2xV/rmqxExW1RgYsFjrM7v9PxqNexLY4d0onj0nFeM
GH41gA3t6R1X7vEYfbhpqVB/ENbzXLq79QlfXzSvjCgfxJF1ljHtnxKWNJob
PvXnsGV7a9+okPDhSOtwYBAHh84hb3ks4bNliR3d+zms/aTFMyyOIDk2cLXj
MAcbrZQBVTxhub78vb9PcPC7XZLelkSw2LnVvSSBA/Xo9qUmE9Y/PJRwtohD
/JDpnsrLhN1thZMmbzhUnrxulVdEiMoNnWjS4BG9ws5gj4xwLWLtuHAmj97E
W0GaxYTJZYXD/bN5hLZa7Np7nSA9WKCWL+BhKDvhoSEnTIzlKXes4RFT6JBh
e5OQaZwrP+PNIyDT0Xl1DeHe4MESgS8P058MY6uYxyosivv28thcsVOwr5aw
Y7+0YFsAj6ZvFvwpukMYLcjJXBjCo0N9VdpfR3BzyhYXRvNw/Cvr29h7hJcB
v4V25fNo31ul6dpGGLk0a33Q7zzOpl0oqmQebzoy9UzGI7PHodGpnTAN22SS
s+9tyoMcOghzzWpkmgoeM0RL/zHrJLzb8/SlZQuP5Svt+x51sXkHWkaEv+Zh
05wW3fOEsO8X0eaJKR5L/ojudH9K8H8wpBOtQSjSNZOUMR9wuSlhEYO2ntTj
h2eEE2Zu5WkGrE9JxXGr5wRRz9HpqpUEp62rLD3UBEWgLF5/B0Er8p3FRkOE
W02h7o9ZDoZ7r22MYC5ztppX5Emo9VuU0MlcaJKT7uFLaDOwEl16wfavlJSK
ggnGbpECnWFC+K6EXt0IQoZdfUzVCMuXwjX30WmC7lyfLxeOEkLXzTiWH0U4
FLXJ+yBz8Nwz49tZjoQJdbu1xwi76sMMvj9HcNULuOA0TrB2+cJJW0qITGp8
8N0Ey5PMeGbHNdZXiFvAbWbz5cp6aQHhv43W9yeZjSa9vD++/vZ9heOZ16yv
G9uOxpcTHP29u0MnCZqrtd73URCaUj8aymGeSqkZXVVNyO4cvN3N/Oqks7CW
7dk2pT94+xShV2B/eWYL4aS6bInhG0LX1Rf+LWyvQvsyY2dmpZ5sVZaS7aVT
IQ5hvj+wpnjLY0KizVhGBXPD58/D5/ey/+rHWpN/me/czd7Ux/Z4zq6pcc40
oTzXtC5Gxeb8rP6UJ/ONxd0iz0F2b6TcGMZcGi/xWkGER7V3apOZi175Gr1g
cz+ffUiVx5y/f9HjylcEtfDi8WrmnObmLDGbY6ngAx0lc8Zm8ZFANpcnVS5b
1MzpxR4CG9bX4a5tnuPMl0znjEyzeuqGePpt/R+Nq5Pj
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {0., 0.9999999991903356}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.804264747086096*^9, 3.804265405827338*^9, 
  3.804265515069939*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p0NoPole", "[", 
  RowBox[{"e", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.804254230994147*^9, 3.8042542362078114`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.8042544326394815`*^9}]
}, Open  ]],

Cell[BoxData["Series"], "Input",
 CellChangeTimes->{{3.80426617650554*^9, 3.8042661773327713`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"e", "=", ".9"}], "}"}], ",", 
   RowBox[{"NpPlus2", "[", 
    RowBox[{"e", ",", "1"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8042666419934697`*^9, 3.8042666436609235`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2.6595700487981055`"}], "+", 
  RowBox[{"2.8723137188373376`*^-11", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.8042666443173165`*^9, 3.8044440438714604`*^9, 
  3.804444077788978*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"e", "=", ".5"}], "}"}], ",", 
   RowBox[{"NpPlus2", "[", 
    RowBox[{"e", ",", "1"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8042661188170867`*^9, 3.8042661521351557`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1.5247413386423725`"}], "+", 
  RowBox[{"1.2178389254044907`*^-15", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.8042661235946484`*^9, 3.8042661534789085`*^9}, 
   3.804445413295889*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"e", "=", ".1"}], "}"}], ",", 
   RowBox[{"NpPlus2", "[", 
    RowBox[{"e", ",", "1"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8042666305071335`*^9, 3.8042666310796003`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.3137673893133078`"}], "+", 
  RowBox[{"8.1119503675001`*^-16", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.804266631443264*^9, 3.8044454254336214`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"e", "=", ".9"}], "}"}], ",", 
   RowBox[{"NpPlus2", "[", 
    RowBox[{"e", ",", "2"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8042666419934697`*^9, 3.8042666436609235`*^9}, {
  3.804268310655978*^9, 3.8042683107558856`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "3.6177875183708226`"}], "+", 
  RowBox[{"5.115826591643582`*^-11", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.804268353934806*^9, 3.804446048705226*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"e", "=", ".5"}], "}"}], ",", 
   RowBox[{"NpPlus2", "[", 
    RowBox[{"e", ",", "2"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8042661188170867`*^9, 3.8042661521351557`*^9}, {
  3.8042683213390617`*^9, 3.8042683214749365`*^9}}],

Cell[BoxData[
 RowBox[{"2.6630130613042873`", "\[VeryThinSpace]", "-", 
  RowBox[{"2.6510190945515413`*^-15", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.8042683546621428`*^9, 3.804446060803995*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"e", "=", ".1"}], "}"}], ",", 
   RowBox[{"NpPlus2", "[", 
    RowBox[{"e", ",", "2"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8042666305071335`*^9, 3.8042666310796003`*^9}, {
  3.804268330344704*^9, 3.8042683304735827`*^9}}],

Cell[BoxData[
 RowBox[{"6.1266154191760025`", "\[VeryThinSpace]", "-", 
  RowBox[{"5.912279041813382`*^-17", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.8042683549568615`*^9, 3.804446072282346*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"Np0", "[", 
       RowBox[{"e", ",", "0"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"Np0", "[", 
       RowBox[{"e", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"Np0", "[", 
       RowBox[{"e", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"Np0", "[", 
       RowBox[{"e", ",", "3"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"Np0", "[", 
       RowBox[{"e", ",", "4"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 0\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 1\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 3\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 4\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Divergence Not Removed\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8051969227740726`*^9, 3.8051969581068897`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318519448951320385675257047976413268819406710008479421958327293`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.7695567233744214`*^-13 + \\(\\(4.163336342344337`*^-17\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.367876784470429`*^-12\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.805196964450637*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({1.1269007302813904`*^-7}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\(\\(-6.591949208711867`*^-16\\)\\) + \
\\(\\(4.163336342344337`*^-16\\\\ \[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.507415993203266`*^-12\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.805196964518577*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
JSRvrmVFmaXDm/uT7ambSuj/1Bnn8g==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
ymwS2vI+NKasqeP/AEzwZ2g=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVlXc81fsDxqVklhEiCcfIFtEwzvNpkNzISGjIyEiEREiEXGUl65plRbmV
0SCFI24IKSVFMjvO+F4tdEvj1++P5/W83v+9/3oeJY9Aey9eHh4ezu/8v628
WM8YbEe6+Ce5uFTJJ6bTN/d6jMoaYisJCf/sm0KXFh5IuyW7HV1N1r9O+l6n
32uO9j+pZgMPm/c2LnMtdN3NkleKZPeg2sG01sS3h86zgp35S8EF9tMSHC/9
l/RnVFOcu5orPvd2/tCdG6XbeXY1uOe44zmt+9mDlnd046frazJkD2O11v2t
yr4UXdnsUmVboTe67o3nvfv6kS5SJXB5VuEIrJbxJe3Tn6fPSofkqJYdhbbT
ZHXQ0Df6SPxI6l61Y/D8RbNVn/tF9/yv7GHbniDM8n4bYjB4MajrQj+QE4x9
i87lNbfwgVHQZpQqewLRZ93/1fEVgWF/eK3q/lD073b71CcghmsCujrNhWH4
tXp+4ONXcWSE5qq8V4jAWZOpziB9aSy9bl2c6B4JIrZf+slJGURO8K5WLDuF
a8fnOrKGVsFzd8AKO7VoiD3se+c6p4BXCbQLbJ8YKPOU2tTuVYLa26N8rXvO
wMyqdC2LQUO+pFKsS04sdiZeU51rUUV8bHJ4kuxZLHYR703z1Ubzau+7exvP
on4sVsBkgy7+qyeztP0JyH0aErNccB38Z+YC7xf+ianeU+Zbvuljz343H0rh
PF63Hr7G1d+AtHnjKw2M88hRPrwz324jOi9KTZ51T4KgCBuHwzfBrPOxq3xZ
MgQrnp2wGjaGmpHRXhu1NATEbfjsPg+4PRXNWtWRBodVTwrDKgkKjnKeMX0u
gBnENLRy2gKBZ30VLXvSkXoh2r+gdSui+BNozjkX4XSmW2maYY7DJ97LnpfN
gneuXbaO3y6sX5wRWReUhYUZb6rDwxq8GYbDwx1ZUFddmZ9+yAaXqyMKdcOy
4WklePmlgS2GOIsVXvTnQOTEfI+QvT12u8uoKKTk4fYlwbTXs3ux5kPjWcvJ
PHxaV99alOEEKvrgu2DjfLze190YYeCMpMLSinZWPkbO/q0eEe6C9kFtDT/z
Qghxp7X+kj8AY5stund+XkLBRM1SHaYbBEYm0946XkaV5qGffebuGDz653v+
G5fR4SK1KabCHY3tXs43dIpR2fshmfeoB5wnqmR53hSjieoNLuI5jAx5o8Ir
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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
o15pkvsopSLwLxVNiR9rIv5Ik/8DDjHr5A==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
pPe5IlTRzaI+/nNl6G9x8n9WaOHM
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Divergence Not Removed\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {-1.0822720791091134`*^-16, 12.48936271243782}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), 0\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), 1\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), 2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), 3\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), 4\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.80519699945335*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2", "[", 
       RowBox[{"e", ",", "0"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2", "[", 
       RowBox[{"e", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2", "[", 
       RowBox[{"e", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2", "[", 
       RowBox[{"e", ",", "3"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2", "[", 
       RowBox[{"e", ",", "4"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2", "[", 
       RowBox[{"e", ",", "10"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 0\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 1\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 3\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 4\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 10\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Divergence Not Removed\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8045100356035676`*^9, 3.8045101033535337`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.000024185766477748702`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(-2.49366499671666`*^-16\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.5939906358846744`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045100653221345`*^9, 3.8045101059880857`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045100653221345`*^9, 3.80451010605203*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({4.503669942224799`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.734723475976807`*^-17\\)\[NoBreak] and \
\[NoBreak]\\!\\(3.820404467573641`*^-16\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045100653221345`*^9, 3.804510106112974*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318519448951320385675257047976413268819406710008479421958327293`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.7695567233744214`*^-13 + \\(\\(4.163336342344337`*^-17\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.367876784470429`*^-12\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045100653221345`*^9, 3.8045101063587437`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045100653221345`*^9, 3.804510106421692*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045100653221345`*^9, 3.804510106795339*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045100653221345`*^9, 3.804510106928217*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045100653221345`*^9, 3.8045101069891586`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
lduGH0eEVND/AanTmCM=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVl3c81d8fx0UKKULfENmbS0UK9/P+JFvDLGTvJCJZJZkJyc7eO7L3uvbO
HiFZcS9CGSXrd3//fD6P5+Ocx3mf93m9xzkcpvYaFqQkJCRzxM///yoW+EEc
QRv5SIqjIUmoq/vvzGhIKZMcrAR+cEjEddRhbjJkJjJpwTmJZ+FZpbV1JPSE
iGM2XSBn97W3l+yqG1yr9zbhNQT0NVKmqllZp27WVWUSbQJWw6Ui2vi6OqmB
a0XhTObgSE/FQyi1kuHCJmW3JFhCqmDmbsOtljrqPIrkbbbHwJLVjPtw1F63
/d/zaJ70J/CBh7TT4FpU3Tefb+8f8NqBNNK/VhnTUGf2N725ResZPJp76hT3
IVJmHKOL6Ec7wN7h8LMc6sa6OxbnarbHHYHN+l1tQ2NlHS6+ReI9kxM8kMKF
tslkyIgPuRbzPHoBkt5HUVodTnW5FBiRhgRnEMtLtBpaGJe5DAs5D2ZcYCih
tvxIekIm/EUM9wabG8hOOUn5rxFkTuXfTXlr4g5H2BW2RcyWjPs8KQt7+kv4
y3awuB9Fgl1nrPpYtfgKyjnzXepMTmHN7j+lV+d9DdneSy13HGixE36cHwhW
nlC423XVneYilnfmCXmT1hvo/rL/J3WAFWvspnD7/c4bWDL4FUvOzIONY+Dw
0o32gqld3o5bT4SxI4X7DTyS3uAfL2uiOngVe0517ODXuDdcmb9UzNR4A6u0
VCTV4OoD7o6qa1yAYn28glwDmXzhErVmcflPOWwDi2XFgxpfuJmXfNTVqoL9
W4lucz7yg6e+svHDe2rYq5qXrm7s+4G/2Dk3bnttrO36jn1tgj9kLKxXu47o
YbPeDRS8xb4Fv2SKJM1yY+ws96dVzZm3sGmt2OydZ45lxvkJsHsGQPqJ/hJJ
y8dYrUfGVmts7yD4ac2zUIw9NmRXKrMK9w7wYqkOY2TPsZ1hFxZ8TQLB5Nmi
4AClC5ZUZJNdnTQIyEp1N+9OvMRiO7sNWdODoG1jFGtZ8gbrapaZQLgdDP3L
jRG9J3yxJUeek+WLwaA0yfLn69e32LVYPUZvv/fQ+ht2pu4HY3klJB7c4w2B
ruZ26oXmUKzxAE0kc0cIbNjdZfvXGoGNf7IyuGT1Ad6s/DGau/kR+8Rn/q3u
yVBYEGBKcrwZj6UY7M9q1AqFbl54ldybjM28XN/GkxkKd0PpVWd80rCytnmL
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
bJvkrWngdiERE3KcALLjrFiL4G/wQ7k//b+WCWD11fuRzTUL3EF8H8I6JyDo
3KlzUjKzYN7r6U79ZQJStbW4V7RmYf6emDrp1wli3m97ZvjPwoxm2NHP9Qk4
p5bd6Ls6CxMGmrptzF+BXNB+mrJ2Drodxs85OX6Fnz22E1MOC0BZKvpv3eUr
NNgklBiELIDS9tsfjz2+gvizvCqSTwvQ4XyjzijgK1QY9xfnLS5A68vYx6pJ
X2Gf9al0mO4i1Ps9auXs/goGGv5jjco/oCj2u9sgxyRwvxJxNZBbBlsBlsmr
fJPQM07enmS+DPzVOlKRwpNwmjxAlsxvGZInBv89kJwEiwltkevtyxBysfXl
9J1JQCnRCAUVPDyNyvFYdpkEH/9nv/h0CSAY5uB12Edcn2C4kBy+Ckvsn+cM
hyfhvP4LD9fKVUgrWrmFm5iEh3viri7Tq8A8YEbqszAJ/dpXd/G8a0BJ88CH
Ym8SnPZL5xLq1wAfLOVHzz0FQ/V084a/f0JmANk7AfcpePJYVedYZhPoFgNe
YzynYFtW86232ia8gXNO13ynoPblVu9F803Q22U0woZMwZfRe22uQZtAY46R
UE+bgiu8T4IuTG2CG+jOuXZPwXB107MWj19wd/fzzU7mafj5LuHJjcHfsGOm
t2JZOw39eXMrDSU74Ey/Tz+Bm4YD2oZhnr4d2G2Oxyq3T4Pkc/G/GctE5vgW
KjQ4TXx3hPKssezC3+9GkptL0yCMaNgmB+zCv0cWvm503yBjtdAmw/wPkGg9
uxz8+BuQtD074SG6B2fk/DWKL87AcJp8/B7dIcg02p9vZ5mBvcfv/iVdOQQ7
Kd2BSY4ZCH7AdEJf7RCGxITvnRQmjn9O4WUNOYQ41iHlh+gMmDmrtNRRHQH/
H9Zbh9bE9cA1z5XiGOTyykWVa2ZAq0L98bkgEvQV7Q/qOf3vgPdXWVuoJ0Wp
G4RIxu/Owp0Gav+VtNMo1vn+Ycu/WQip3bv9bPIsmpARnM6VMAdpj1yszsnS
oYba4n2UqvNAy+/C9VLjP7R81CKiYXceTBsxCy41zOjN3iLSpegFoL/lo8jA
w4ayy1vuRMgtgorF1o+LFzhRCXGJsLKlRTjju5Ek6cqNfv/9vivd7wfE2zBe
/NTOi65dU/djuroEoQEndnq5BNCurEXeRPElqO2WD7kqLIBmMbl2sksuwYr+
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
4Mr4sqi1dtdBKbF2pEyZH/c/x90hAA==
        "]], 
       LineBox[{{0.9996567653556984, -12.14395775594916}, {0.9996567653557238,
         16.08924718378056}}]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Divergence Not Removed\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {-12.14395775594916, 16.08924718378056}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), 0\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), 1\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), 2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), 3\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), 4\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), 10\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.804510066001502*^9, 3.804510545294339*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"pPlus2", "[", 
    RowBox[{"e", ",", "1"}], "]"}], ",", 
   RowBox[{"e", "\[Rule]", "1"}], ",", 
   RowBox[{"Direction", "\[Rule]", "\"\<FromBelow\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.804518915038018*^9, 3.804518969420539*^9}, {
   3.8045189999402113`*^9, 3.8045190098330264`*^9}, {3.8045191084085293`*^9, 
   3.804519110972151*^9}, 3.8045213191649885`*^9, {3.804591333495635*^9, 
   3.8045913344800406`*^9}, {3.804591381929338*^9, 3.8045913843784075`*^9}, {
   3.8049512316514273`*^9, 3.804951234431384*^9}, 3.804951319239684*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Refine", "::", "fas"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: one or more assumptions evaluated to False. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/fas\\\", \
ButtonNote -> \\\"Refine::fas\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.804518943451646*^9, 3.8045189702058105`*^9}, 
   3.804519011654339*^9, 3.8045191114317245`*^9, 3.804525277930222*^9, 
   3.8045953344096327`*^9, 3.8046031823013773`*^9, 3.8049527141131077`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Refine", "::", "fas"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: one or more assumptions evaluated to False. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/fas\\\", \
ButtonNote -> \\\"Refine::fas\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.804518943451646*^9, 3.8045189702058105`*^9}, 
   3.804519011654339*^9, 3.8045191114317245`*^9, 3.804525277930222*^9, 
   3.8045953344096327`*^9, 3.8046031823013773`*^9, 3.804952714186039*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Refine", "::", "fas"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: one or more assumptions evaluated to False. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/fas\\\", \
ButtonNote -> \\\"Refine::fas\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.804518943451646*^9, 3.8045189702058105`*^9}, 
   3.804519011654339*^9, 3.8045191114317245`*^9, 3.804525277930222*^9, 
   3.8045953344096327`*^9, 3.8046031823013773`*^9, 3.8049527142639685`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Refine :: \
fas\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.804518943451646*^9, 3.8045189702058105`*^9}, 
   3.804519011654339*^9, 3.8045191114317245`*^9, 3.804525277930222*^9, 
   3.8045953344096327`*^9, 3.8046031823013773`*^9, 3.8049527143129253`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Integrate", "::", "idiv"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral of \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(e\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((\\(\\(-1\\)\\) + \\(\\(e\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^2\\)\[NoBreak] does not converge on \[NoBreak]\
\\!\\({0, \\(\\(2\\\\ \[Pi]\\)\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Integrate/idiv\\\", ButtonNote -> \
\\\"Integrate::idiv\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.804518943451646*^9, 3.8045189702058105`*^9}, 
   3.804519011654339*^9, 3.8045191114317245`*^9, 3.804525277930222*^9, 
   3.8045953344096327`*^9, 3.8046031823013773`*^9, 3.8049527149175563`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Integrate", "::", "idiv"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral of \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(e\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((\\(\\(-1\\)\\) + \\(\\(e\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] does not converge on \[NoBreak]\
\\!\\({0, \\(\\(2\\\\ \[Pi]\\)\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Integrate/idiv\\\", ButtonNote -> \
\\\"Integrate::idiv\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.804518943451646*^9, 3.8045189702058105`*^9}, 
   3.804519011654339*^9, 3.8045191114317245`*^9, 3.804525277930222*^9, 
   3.8045953344096327`*^9, 3.8046031823013773`*^9, 3.804954603087755*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.8045189446075716`*^9, 3.80451897068037*^9}, 
   3.804519099395895*^9, 3.804520963824106*^9, 3.8045386693517113`*^9, 
   3.804598288232232*^9, 3.804623348103205*^9, 3.804980827800487*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(2, 1\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(2, 2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(2, 3\)]\)\>\"", ",", 
      RowBox[{"Re", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".99"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".99"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".99"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".999"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".999"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".999"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9999"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9999"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9999"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".99999"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".99999"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".99999"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".999999"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".999999"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".999999"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}]}], "}"}], "]"}]}], "}"}], 
    "]"}], ",", "7"}], "]"}]], "Input",
 CellChangeTimes->{{3.8048666498250537`*^9, 3.804866655502659*^9}, {
  3.8048666901606593`*^9, 3.8048667304500246`*^9}, {3.8048667740261574`*^9, 
  3.8048667785429173`*^9}, {3.804867046611473*^9, 3.804867065395094*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.019241423161113744`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(3.6906124272875`*^10 + \\(\\(4.68328609241232`*^7\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(2.2177103155216227`*^13\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804866741341329*^9, 3.8048667857275577`*^9, 
  3.804867067930422*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.019241423161113744`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.84529940014375`*^10 + \\(\\(2.341689776577314`*^7\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.1088559869769982`*^13\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804866741341329*^9, 3.8048667857275577`*^9, 
  3.804867068051319*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.019241423161113744`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(3.6906124273`*^10 + \\(\\(9.366572214403899`*^7\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(2.217710315521614`*^13\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804866741341329*^9, 3.8048667857275577`*^9, 
  3.8048670682741284`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804866741341329*^9, 3.8048667857275577`*^9, 
  3.8048670683330803`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\\!\\(\\*SubscriptBox[\\(p\\), \\(2, 1\\)]\\)\"\>", 
     RowBox[{"-", "2.6595700487981055`"}], 
     RowBox[{"-", "3.116824529718508`"}], 
     RowBox[{"-", "3.2857348803967557`"}], 
     RowBox[{"-", "3.3448305086308046`"}], 
     RowBox[{"-", "3.3630212347847075`"}], "1.3884009747282822`*^15"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(p\\), \\(2, 2\\)]\\)\"\>", 
     RowBox[{"-", "3.6177875183708226`"}], 
     RowBox[{"-", "5.621276507077562`"}], 
     RowBox[{"-", "6.153195600849409`"}], 
     RowBox[{"-", "6.322470066890371`"}], 
     RowBox[{"-", "6.375538721612853`"}], "1.3884009757739368`*^15"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(p\\), \\(2, 3\\)]\\)\"\>", 
     RowBox[{"-", "3.7809364193040014`"}], 
     RowBox[{"-", "7.903843622915214`"}], 
     RowBox[{"-", "8.906196626795282`"}], 
     RowBox[{"-", "9.2127146490241`"}], 
     RowBox[{"-", "9.309314632766881`"}], "1.388400976819587`*^15"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.804866742136607*^9, 3.804866786466484*^9, 
  3.8048670692972593`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(2, 1\)]\)/Pi\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(2, 2\)]\)/2Pi\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(2, 3\)]\)/3Pi\>\"", ",", 
      RowBox[{"Re", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"e", "=", ".9999"}], "}"}], ",", 
            RowBox[{"NpPlus2", "[", 
             RowBox[{"e", ",", "1"}], "]"}]}], "]"}], "/", "Pi"}], ",", 
         RowBox[{
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"e", "=", ".9999"}], "}"}], ",", 
            RowBox[{"NpPlus2", "[", 
             RowBox[{"e", ",", "2"}], "]"}]}], "]"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", "Pi"}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"e", "=", ".9999"}], "}"}], ",", 
            RowBox[{"NpPlus2", "[", 
             RowBox[{"e", ",", "3"}], "]"}]}], "]"}], "/", 
          RowBox[{"(", 
           RowBox[{"3", "*", "Pi"}], ")"}]}]}], "}"}], "]"}]}], "}"}], "]"}], 
   ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.804866824916457*^9, 3.8048669366087914`*^9}, {
  3.8048672981965246`*^9, 3.8048673030612073`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\\!\\(\\*SubscriptBox[\\(p\\), \\(2, 1\\)]\\)/Pi\"\>", 
     RowBox[{"-", "1.0646926185063421`"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(p\\), \\(2, 2\\)]\\)/2Pi\"\>", 
     RowBox[{"-", "1.0062523636961487`"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(p\\), \\(2, 3\\)]\\)/3Pi\"\>", 
     RowBox[{"-", "0.9774993837915342`"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.804866889840887*^9, 3.80486693813233*^9, 
  3.8048673043257113`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"e", "=", ".9999"}], "}"}], ",", 
   RowBox[{"NpPlus2", "[", 
    RowBox[{"e", ",", "2"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.804511340045379*^9, 3.8045113901658573`*^9}, {
  3.804866982935599*^9, 3.8048669988018246`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "6.322470066890371`"}], "+", 
  RowBox[{"1.522452798562786`*^-6", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.8045113414250984`*^9, 3.8045113985350885`*^9}, {
  3.8048669920317764`*^9, 3.8048670037007475`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"2", "*", "Pi"}], ")"}], "/", 
  RowBox[{"Re", "[", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"e", "=", ".9999"}], "}"}], ",", 
     RowBox[{"NpPlus2", "[", 
      RowBox[{"e", ",", "2"}], "]"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.804511436099222*^9, 3.804511444176724*^9}, {
  3.8048672631153646`*^9, 3.804867271878559*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.9937864854566079`"}]], "Output",
 CellChangeTimes->{
  3.8045114449480066`*^9, {3.8048672656152177`*^9, 3.804867272528979*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2", "[", 
       RowBox[{"e", ",", "0"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpPlus2", "[", 
        RowBox[{"e", ",", "1"}], "]"}], "/", "Pi"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpPlus2", "[", 
        RowBox[{"e", ",", "2"}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "Pi"}], ")"}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpPlus2", "[", 
        RowBox[{"e", ",", "3"}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"3", "*", "Pi"}], ")"}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpPlus2", "[", 
        RowBox[{"e", ",", "4"}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"4", "*", "Pi"}], ")"}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpPlus2", "[", 
        RowBox[{"e", ",", "10"}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"10", "*", "Pi"}], ")"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 0\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 1\)]\)/\[CapitalPi]\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 2\)]\)/2\[CapitalPi]\>\"", 
      ",", "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 3\)]\)/3\[CapitalPi]\>\"",
       ",", "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), \
4\)]\)/4\[CapitalPi]\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 10\)]\)/10\[CapitalPi]\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<This s*Pi Thing, Though\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.80494846102381*^9, 3.804948508392808*^9}, {
  3.804949654580203*^9, 3.8049497232350903`*^9}, {3.8050280570662527`*^9, 
  3.80502808734648*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.000024185766477748702`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(-2.49366499671666`*^-16\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.5939906358846744`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.804948524587081*^9, {3.804949711406044*^9, 3.804949730801689*^9}, 
   3.805028090397651*^9, 3.805036234288172*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.804948524587081*^9, {3.804949711406044*^9, 3.804949730801689*^9}, 
   3.805028090397651*^9, 3.8050362343580875`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({4.503669942224799`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.734723475976807`*^-17\\)\[NoBreak] and \
\[NoBreak]\\!\\(3.820404467573641`*^-16\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.804948524587081*^9, {3.804949711406044*^9, 3.804949730801689*^9}, 
   3.805028090397651*^9, 3.8050362344729986`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318519448951320385675257047976413268819406710008479421958327293`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.7695567233744214`*^-13 + \\(\\(4.163336342344337`*^-17\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.367876784470429`*^-12\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.804948524587081*^9, {3.804949711406044*^9, 3.804949730801689*^9}, 
   3.805028090397651*^9, 3.805036234651759*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.804948524587081*^9, {3.804949711406044*^9, 3.804949730801689*^9}, 
   3.805028090397651*^9, 3.805036234764633*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.804948524587081*^9, {3.804949711406044*^9, 3.804949730801689*^9}, 
   3.805028090397651*^9, 3.8050362350733557`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.804948524587081*^9, {3.804949711406044*^9, 3.804949730801689*^9}, 
   3.805028090397651*^9, 3.8050362351663027`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.804948524587081*^9, {3.804949711406044*^9, 3.804949730801689*^9}, 
   3.805028090397651*^9, 3.8050362352252693`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
J6nlcA==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
MFtn1IjD3fGupkfIvsLb1Z4345Dovoj0AlkzMeD6QisOZXdoaVnI/arFva6d
OJSUaDvkIr8qHd5TR8NBxJI5lIfsarrplRoLh+ypBqf/vIbsIRJNoO/b50N+
DjLFLcOdN4jW+yyL8hI5ScBsMOfjsCf+ODsV2TpScf3rSRwMQstIicjiy49F
L53DIe9t/K1b/633RRLh9QcH569f1UP/W69O276vogz44mye7oW8+6NElrY4
A+aNaNPHkWetDi6Kl2ZAsdNpDTPkyp4YT4EsA/XF2h06yP4+9SQbRQZoLbSo
yiMPxhndlFVnwPZp79ts9PtkKV3uC9rMAEvZWtF65FOFFeYUHQZoeug7ZSBT
v2qLPd3JAPmOFc8ckZOcvM7OmzCA7KsXvQ3ZeiT7s5MZAxiGU+ZLkT8vU7mt
fIQB7+Y7Tpag9+tGqtNApD0D/HKKCiORTTSfHOg9geYbyKRZIVdZrFya5cmA
AaNTHwn0fmffEb27OYwBhppxtdNof8jw7kToRDLA1dDx4DvkKJAO+jeGAWeV
yyfD/ts/MwpuxvEM2Lgkr2AW7b/lnjrbbV8x4CKZmdaD9udVrELz2Gv0fdjb
aCYhD6/ZqepUyAAT2m2KGTKpfZ/EmSoGlK3n3M9C+zsUTvReaWHAG4W7wVb/
ovchlUW51saAOSW/hQnUL+xnPL7d6GKAdO6xrEfIOkW+b+NYDCjf/9WahvoL
sSbmfsYEmu/LW1nzrTywmine2byGCWbj5yxI2qj/2OrrtqowgaoRVWWJrFH0
Tr1DnQkdSlp72lE/FPEkLWfqMEErobeYgvrl23Z6n2AvE1yuBwy1aPBArWhR
0uqLTNg7erPZEfXf+KX3biv5M2FzTP2ihvWo/3ksv6YWzIQPWSYum5Epa9ac
14pkAsu0yH0C9e/YO7omkMwEXu7WWh/U76c9Tg6ffc+E3e+p6eJreBAi+0uW
VseEgsT9e83ReTHT8MzY4jMTuJrZ+REKyGo9D7TamSA92vVtGJ0vs2w3g/F+
JswkRdjnovNo3ulMTKhMD0Q9jHKpluRBmIRY8fDqHtg64m5PluDBr5ocqtPa
Hkj70LW8fxmqV3FQ00SjB8bdVnUtE+fBAvVCu4hJDwzd+pqwE51/Qvb+ynFe
PUA6xm7QWkB5QHTlwQXfHsjVPTOn8psA4YqyAN+gHvh0at/kyl8EiMhMkmwi
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
gMwpHWph8THvsv/bLe202ZDqb/gfWbYb/Q==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
ckTE
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"This s*Pi Thing, Though\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {-1.0571574273799342`, 1.7580349608559442`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), 0\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
1\\)]\\)/\[CapitalPi]\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
2\\)]\\)/2\[CapitalPi]\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
3\\)]\\)/3\[CapitalPi]\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
4\\)]\\)/4\[CapitalPi]\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
10\\)]\\)/10\[CapitalPi]\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8050367674264603`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"e", "=", "1"}], "}"}], ",", 
   RowBox[{"NpPlus2", "[", 
    RowBox[{"e", ",", "2"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.804511601923304*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318530717957354878316699074673427449610937361525670786805558565`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(9.080334667093475`*^46 - \\(\\(40.912255050643104`\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(6.721426510726194`*^45\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804511602989315*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804511603076232*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318530717957354878316699074673427449610937361525670786805558565`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(4.304855103136426`*^109 - \\(\\(3.70411269175969`*^62\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(8.184449145379744`*^108\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045116031441708`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumri"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \
\[NoBreak]\\!\\(\\(\[ExponentialE]\\^\\(2\\\\ \[ImaginaryI]\\\\ \\(\\((u - \
\\(\\(Sin[u]\\)\\))\\)\\)\\)\\\\ \\(\\(Cos[\\(\\(2\\\\ \
u\\)\\)]\\)\\)\\)\\/\\((1 - \\(\\(Cos[u]\\)\\))\\)\\^4\\)\[NoBreak] has \
evaluated to Overflow, Indeterminate, or Infinity for all sampling points in \
the region with boundaries \[NoBreak]\\!\\({\\({0.`, \
1.3518575992650391`*^-14}\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NIntegrate\\\", ButtonNote -> \
\\\"NIntegrate::inumri\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804511603268057*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045116033649673`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318530717957354878316699074673427449610937361525670786805558565`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\(\\(-2.4615141850671613`*^94\\)\\) + \
\\(\\(2.421422577891593`*^47\\\\ \[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(3.404728094520719`*^93\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045116034388967`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045116034738655`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804511603549799*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045116036207266`*^9}],

Cell[BoxData[
 RowBox[{"9.080334667093475`*^46", "-", 
  RowBox[{"40.912255050643104`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.8045116036247225`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"e", "=", ".9999"}], "}"}], ",", 
   RowBox[{"NpPlus2", "[", 
    RowBox[{"e", ",", "1"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8045114863076177`*^9, 3.8045114872127795`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "3.3448305086308046`"}], "+", 
  RowBox[{"4.3836276145807356`*^-8", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.804511487851185*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"e", "=", ".9999"}], "}"}], ",", 
   RowBox[{"NpPlus2", "[", 
    RowBox[{"e", ",", "3"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.804511501746286*^9, 3.8045115022668037`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "9.2127146490241`"}], "+", 
  RowBox[{"7.363709283098938`*^-8", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.804511502742363*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"3", "*", "Pi"}], ")"}], "/", 
  RowBox[{"Re", "[", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"e", "=", ".9999"}], "}"}], ",", 
     RowBox[{"NpPlus2", "[", 
      RowBox[{"e", ",", "3"}], "]"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8045115188653994`*^9, 3.8045115226848516`*^9}}],

Cell[BoxData[
 RowBox[{"-", "1.0230185477163067`"}]], "Output",
 CellChangeTimes->{3.8045115230734944`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"e", "=", ".999"}], "}"}], ",", 
   RowBox[{"NpPlus2NP", "[", 
    RowBox[{"e", ",", "2"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8042711038504763`*^9, 3.804271104105242*^9}, {
   3.8042711760454655`*^9, 3.804271187517816*^9}, 3.8045114030059395`*^9, {
   3.8045114733626323`*^9, 3.8045114740010405`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.0005499458283852101`"}], "+", 
  RowBox[{"6.767861055160896`*^-14", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.8042711618216705`*^9, 3.8042711926420608`*^9}, 
   3.8044481858473907`*^9, 3.804511409807626*^9, 3.8045114829537315`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"e", "=", "1"}], "}"}], ",", 
   RowBox[{"NpPlus2NP", "[", 
    RowBox[{"e", ",", "2"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.8045115797159176`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318530717957354878316699074673427449610937361525670786805558565`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(9.080334667093475`*^46 - \\(\\(40.912255050643104`\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(6.721426510726194`*^45\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045115801065555`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804511580191474*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318530717957354878316699074673427449610937361525670786805558565`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(4.304855103136426`*^109 - \\(\\(3.70411269175969`*^62\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(8.184449145379744`*^108\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804511580267404*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumri"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \
\[NoBreak]\\!\\(\\(\[ExponentialE]\\^\\(2\\\\ \[ImaginaryI]\\\\ \\(\\((u - \
\\(\\(Sin[u]\\)\\))\\)\\)\\)\\\\ \\(\\(Cos[\\(\\(2\\\\ \
u\\)\\)]\\)\\)\\)\\/\\((1 - \\(\\(Cos[u]\\)\\))\\)\\^4\\)\[NoBreak] has \
evaluated to Overflow, Indeterminate, or Infinity for all sampling points in \
the region with boundaries \[NoBreak]\\!\\({\\({0.`, \
1.3518575992650391`*^-14}\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NIntegrate\\\", ButtonNote -> \
\\\"NIntegrate::inumri\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045115803992815`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045115805071836`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318530717957354878316699074673427449610937361525670786805558565`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\(\\(-2.4615141850671613`*^94\\)\\) + \
\\(\\(2.421422577891593`*^47\\\\ \[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(3.404728094520719`*^93\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045115805821133`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804511580619079*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045115806910114`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045115807319727`*^9}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.8045115807359686`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2NP", "[", 
       RowBox[{"e", ",", "0"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2NP", "[", 
       RowBox[{"e", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2NP", "[", 
       RowBox[{"e", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2NP", "[", 
       RowBox[{"e", ",", "3"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2NP", "[", 
       RowBox[{"e", ",", "4"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2NP", "[", 
       RowBox[{"e", ",", "10"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), \
0\)]\)(1-\!\(\*SuperscriptBox[\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \
\(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 1\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 2\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 3\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 4\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), \
10\)]\)(1-\!\(\*SuperscriptBox[\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \
\(3/2\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Divergence Removed?\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8044481983378005`*^9, 3.804448248120593*^9}, {
  3.804509700697852*^9, 3.8045097963639774`*^9}, {3.804509844945094*^9, 
  3.804509862729232*^9}, {3.8045099076948223`*^9, 3.804509915787315*^9}, {
  3.804510009776622*^9, 3.804510026222278*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.000024185766477748702`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(-2.49366499671666`*^-16\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.5939906358846744`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804448256142144*^9, 3.804510547533259*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804448256142144*^9, 3.804510547623185*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], ":", 
  " ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({4.503669942224799`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.734723475976807`*^-17\\)\[NoBreak] and \
\[NoBreak]\\!\\(3.820404467573641`*^-16\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804448256142144*^9, 3.8045105477080984`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], ":", 
  " ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318519448951320385675257047976413268819406710008479421958327293`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.7695567233744214`*^-13 + \\(\\(4.163336342344337`*^-17\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.367876784470429`*^-12\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804448256142144*^9, 3.8045105480278015`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804448256142144*^9, 3.8045105481127224`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804448256142144*^9, 3.8045105486452265`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804448256142144*^9, 3.8045105488290577`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804448256142144*^9, 3.804510548921973*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
kiumFxfZEOP70yhTmv/4/wAjpZPA
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
vLxP7TKVxJjFs4YmJxlQ5R2xuqc0w+B/I+PIaw==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
BvIaN5ltPt+hjOb48N3vb6CRrOoc+n4SDrYVcUwmjIFh2gYv2V8jIHXMaf7h
0XFY4s9DJ3R7QE1VLbZ0chyqhJddZiZaYHj2fmtmyASMyQ6rJNwoAKaKcQh1
3yRgrRMiA8nFqDV7XD5VdRIU04Qxdv4SlE31aZHaPwlXEl7cHvUvQXb/nvIp
aE7Ce68yyc9nX6PuD8xYdZ1JOKNH3+UoXoYq7cOemlhPgvJQrMelqAoU/gCV
3w+ahDlN88qs/QjJTysR7N2TMJCMM3oG3yN+3o6sKtok/OilpT8SbEK/ZK/Z
e/VNwpPx8Is7jjahWtuSPvrXSViUbaD05Dch6y715g76JFB0iqvVvJtR9Ft4
nro6CcdU9pZt4m5F8/eMbQ/umIJD/DnGBznb0ODzWeqvXVOgPjAvWLa3DdXX
PaS9VJ6CzyO0h2vs2lD0Mk1fSm0KfnV9GtxR3YYUrlpr8GBTUFfJdcLHox2d
MXeg0MymQIInW0Cu9xNqlPXquhY4Bc+XDYRsaz+juzmVln/vTkFXpKtkcvdn
9N8OtuF7oVPw8pB+YcPkZ1SnHDn9NHIKONOnzIb5O9G7Qxlc7Y+m4AiXa9kB
y05UbtSurpg/BX9kF297TneifH+5J6NdU0CVfvJ5LVc3cv7nIu1GmwKuIGie
F+5GCkFFOQu9UyBIuavRIdeNsu9plAp8nQJ2HbFUvePdKDPOuF1ragoazpfq
OIR3o5TcW/+SlqfAcfttQ/F1X9CDLzSH07J00Bkl3hesfEFRt+/LdsrToWxw
TxY7Pw1FKBybMFSkw2Whorr/RGkoxL/UyWA3HazPSZY+UKehm7IPnXUP0EHI
tzfS9AoNXbxudFVbnw4xr7p8I3AaAuGPfjuu02FIvfhlXlYP0nwXpJHnTYdH
2hm674t70KFLh/5u96UDq3ezekdND1Krzrsld5sOGr9/8BbQetDOC2F3pMLo
8Fd7MvsxVy/aUnosVCSFDicWfeLEzvUilkltLEcjHVayNE99X9OHfueEuJY3
0cFp5NJ8/sY+tLqsd9y1lbzP6/7bRLwP8T+n/aV9ogOt+BH/pb19SGGOuJjX
T4fNn+rKE637kF38Zm0jFh128ghFb83rQxfpOIV7lg6XbATSY0v60BXN9F9v
5+hwvVVc4WdVH/If35G3bYkO61Ykn3l86kOJqpjwHy4G6IhNXA+Y7UOfv7gQ
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
ToMOs0SZtdj/ACNnVR4=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
e59UrlniVA4uiasND/DZ8HOhlLdatAQ66T6cNNkJ0D08mCymkwos1a1NtvIT
YBz54NqR8ofQHzabsURxArjrBuQa9JOBpxxuf27DBMymMPeyLRJgaWBSnenW
CRCXDZd3XHwFjFbXJXPNJmCaRrplaHsDvbJfbaJ3bgIid6pX07Seo3srr7JR
wAT0d+qjOIM8dP4D+7Z50ATYncq5ZWeaj7R2V3cdCsUOKO1beagAFSu7nTkT
NQG1s2WXHmoXo8LvxSlZKRMwWse0n9csRfkJVl9XNExAi+2larsPVSh2X3lS
YuMEZHVbCfw2rEY+IooGa5onoK8u3U2ptBqphXyPUm2bAK20KEvhtBr03OXR
GhPmBGxzLpkS8kYoZwvb/CJnAl5vnHThX6hHWe3X0obJHNBW8th5tLkRxWn9
ccpYzYFUIxnN0oVGFJR0Xs5JmgNHgh1EmnSb0F7nk6kMeQ58WmJlLprVhKZ4
hiktqhyw6k4/onbpPdopNpdYaMiB7blp2TmyLajd0j/ukg8HwinF8teUW1F5
4fi+HX4cWIuQTJFtK8oknxCdOcuBuIevXRPCW9H5HutYv0AOiM6WdF7sbUXS
Pho3XcI50HF/ppt6uw25xoxdM0/mgGnByPeSkXb0s9kplNzAgf46+85YzU6k
cMg8sKGRA7L7Zt0KoROZ9285e76ZAwEie70KD3ai5BkhN2obB7xW8ZtMAjuR
zro8y3ssDuxmbZx8V9mJzl+alSFPcsDAS2hQFijokciAZAOfA4EjH36K2FBQ
fXzLivPTHNDhWN9vP05BErmpgtSfHKiJeuA0fZmCimhGEwlCXOgWWep3r5KC
eJvuVJCkuSBlJeW+WZOKVlUEv6qX5cKQZNrLYX0qMjA5WXBOnguUva/SA/ZS
UewRnUyKEhc661iRGm5UpBbdcyNBkwu11pI535Op6NSAigPJhAsu+y+qs39S
0R0fiYP1Zlx4bP7B3WsRDZXN/rY8t5cLQnenQpvEaUhYrN2QYs2F1m1hB6Q2
0FDWzgCVBEcuvK0SF5E8QEODCWhW4gwXjmzjnA7LwI60rrznzwVUF+Cj+ZyG
hgJ6r6wK4EJxbLBkXTENDdv/XCJ9kQs/3ocGxtbT0BeZLbJrI7lwsTLi6+sh
GhpZXtOfeZ0Lq55de3t+AvuPZZbSDS6MhCfaSH7D/nxqk0ocFwiGyezvfzQ0
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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
RIR74e9fFshKF1x8Kr4Z+x/kIoQH
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
Rf8HJ0dc1g==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Divergence Removed?\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {-0.9909172326134527, 6.283185307179577}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
0\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
1\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
2\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
3\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
4\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
10\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8044490178821125`*^9, 3.804511130512868*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"e", "^", "2"}]}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"3", "/", "2"}], ")"}]}], ")"}], "*", 
    RowBox[{"pPlus2", "[", 
     RowBox[{"e", ",", "1"}], "]"}]}], ",", 
   RowBox[{"e", "\[Rule]", "1"}], ",", 
   RowBox[{"Direction", "\[Rule]", "\"\<FromBelow\>\""}]}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"2", "*", "Pi", "*", 
     RowBox[{"p0", "[", 
      RowBox[{"e", ",", "1"}], "]"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"e", "^", "2"}]}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"3", "/", "2"}], ")"}]}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"e", ",", "0", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.80486830753169*^9, 3.8048683806553345`*^9}, 
   3.804868460337556*^9, {3.8048685952882805`*^9, 3.804868595511749*^9}, 
   3.8048686472099457`*^9, {3.804873045848398*^9, 3.8048730737891445`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Refine", "::", "fas"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: one or more assumptions evaluated to False. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/fas\\\", \
ButtonNote -> \\\"Refine::fas\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8048737432930417`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Refine", "::", "fas"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: one or more assumptions evaluated to False. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/fas\\\", \
ButtonNote -> \\\"Refine::fas\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8048737434089317`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Refine", "::", "fas"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: one or more assumptions evaluated to False. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/fas\\\", \
ButtonNote -> \\\"Refine::fas\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8048737435038447`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Refine :: \
fas\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804873743607749*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Integrate", "::", "idiv"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral of \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(e\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((\\(\\(-1\\)\\) + \\(\\(e\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^2\\)\[NoBreak] does not converge on \[NoBreak]\
\\!\\({0, \\(\\(2\\\\ \[Pi]\\)\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Integrate/idiv\\\", ButtonNote -> \
\\\"Integrate::idiv\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804873744298911*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"3", " ", "\[Pi]", " ", "e"}], "-", 
   FractionBox[
    RowBox[{"9", " ", "\[Pi]", " ", 
     SuperscriptBox["e", "3"]}], "8"], "+", 
   FractionBox[
    RowBox[{"9", " ", "\[Pi]", " ", 
     SuperscriptBox["e", "5"]}], "64"], "-", 
   FractionBox[
    RowBox[{"19", " ", "\[Pi]", " ", 
     SuperscriptBox["e", "7"]}], "3072"], "-", 
   FractionBox[
    RowBox[{"133", " ", "\[Pi]", " ", 
     SuperscriptBox["e", "9"]}], "81920"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "e", "]"}], "11"],
    SeriesData[$CellContext`e, 0, {}, 1, 11, 1],
    Editable->False]}],
  SeriesData[$CellContext`e, 0, {
   3 Pi, 0, Rational[-9, 8] Pi, 0, Rational[9, 64] Pi, 0, Rational[-19, 3072] 
    Pi, 0, Rational[-133, 81920] Pi}, 1, 11, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.804868367851924*^9, 3.80486839153905*^9}, 
   3.8048684703823*^9, 3.804868549196122*^9, 3.8048686007402196`*^9, 
   3.8048697638237305`*^9, 3.804872733132324*^9, 3.804873066638072*^9, 
   3.804873853293836*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"pPlus2", "[", 
     RowBox[{"e", ",", "0"}], "]"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"e", "^", "2"}]}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"3", "/", "2"}], ")"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8042701623788366`*^9, 3.804270187798241*^9}, {
  3.804867860252019*^9, 3.804867860674274*^9}, {3.80486790357987*^9, 
  3.8048679038016644`*^9}, {3.8048679530140023`*^9, 3.804867957098213*^9}, {
  3.804873960509039*^9, 3.804873972855776*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.8042704153020725`*^9, 3.8048678980789795`*^9, 
  3.8048683037098675`*^9, 3.804874066333661*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"pPlus2", "[", 
     RowBox[{"e", ",", "1"}], "]"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"e", "^", "2"}]}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"3", "/", "2"}], ")"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.804874145034339*^9, 3.804874145518891*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Refine", "::", "fas"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: one or more assumptions evaluated to False. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/fas\\\", \
ButtonNote -> \\\"Refine::fas\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804874822838107*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Refine", "::", "fas"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: one or more assumptions evaluated to False. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/fas\\\", \
ButtonNote -> \\\"Refine::fas\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804874822937033*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Refine", "::", "fas"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: one or more assumptions evaluated to False. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/fas\\\", \
ButtonNote -> \\\"Refine::fas\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8048748230489264`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Refine :: \
fas\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8048748231353645`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Integrate", "::", "idiv"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral of \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(e\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((\\(\\(-1\\)\\) + \\(\\(e\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^2\\)\[NoBreak] does not converge on \[NoBreak]\
\\!\\({0, \\(\\(2\\\\ \[Pi]\\)\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Integrate/idiv\\\", ButtonNote -> \
\\\"Integrate::idiv\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804874823854223*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.804895835887599*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Shape of m=-2 feat. Justin Bieber", "Section",
 CellChangeTimes->{{3.804510616065172*^9, 3.8045106334949937`*^9}}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2", "[", 
       RowBox[{"e", ",", "0"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2", "[", 
       RowBox[{"e", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2", "[", 
       RowBox[{"e", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2", "[", 
       RowBox[{"e", ",", "3"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2", "[", 
       RowBox[{"e", ",", "4"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2", "[", 
       RowBox[{"e", ",", "10"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 0\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 1\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 3\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 4\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 10\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Divergence Not Removed\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8045153487030935`*^9, 3.804515349467383*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2", "[", 
       RowBox[{"e", ",", "0"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2", "[", 
       RowBox[{"e", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2", "[", 
       RowBox[{"e", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2", "[", 
       RowBox[{"e", ",", "3"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2", "[", 
       RowBox[{"e", ",", "4"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2", "[", 
       RowBox[{"e", ",", "10"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 0\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 1\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 3\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 4\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 10\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Divergence Not Removed\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "4"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8045112302992463`*^9, 3.804511267685545*^9}, {
  3.8045143221189656`*^9, 3.8045143253020115`*^9}, {3.804514531971182*^9, 
  3.80451453682967*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.000024185766477748702`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(-2.49366499671666`*^-16\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.5939906358846744`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804511729424957*^9, 3.8045143280514584`*^9, 
  3.8045145398978233`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804511729424957*^9, 3.8045143280514584`*^9, 
  3.8045145399677577`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({4.503669942224799`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.734723475976807`*^-17\\)\[NoBreak] and \
\[NoBreak]\\!\\(3.820404467573641`*^-16\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804511729424957*^9, 3.8045143280514584`*^9, 
  3.8045145400416903`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318519448951320385675257047976413268819406710008479421958327293`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.7695567233744214`*^-13 + \\(\\(4.163336342344337`*^-17\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.367876784470429`*^-12\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804511729424957*^9, 3.8045143280514584`*^9, 
  3.804514540285464*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804511729424957*^9, 3.8045143280514584`*^9, 
  3.8045145403633947`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804511729424957*^9, 3.8045143280514584`*^9, 
  3.8045145407460346`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804511729424957*^9, 3.8045143280514584`*^9, 
  3.804514540886904*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804511729424957*^9, 3.8045143280514584`*^9, 
  3.804514540958845*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[{{2.040816326530612*^-8, 9.419706728589813*^-16}, {
        0.000306717908041361, 1.1137129779920411`*^-14}, {
        0.0006134154079194566, 3.774030476268998*^-14}, {
        0.0009201129077975524, 6.42565102186577*^-14}, {0.001226810407675648, 
        6.686975588174469*^-14}, {0.0015335079075537439`, 
        3.063766978007086*^-14}, {0.0016344418043297464`, 0.}}], 
       LineBox[CompressedData["
1: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
hJk=
        "]], 
       LineBox[CompressedData["
1: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
        "]], 
       LineBox[CompressedData["
1:eJw9lHtUjAkYh0clahotI8XRRSopqcgYTd/7ZjkMJbqqM2K7MEXYonu7jbMk
osu6RRQlpDBFJE2mLdFFNTXfN/O1aUdK5dLKJZWMtefs2d85z3n+ff76zQve
67Vdg8FgbP7Ov85coiiojZIj478ZWRiN1MTL0c1yxvpMv2xi2Mbf3z5Djqdy
AljrL9wnri0aEB89KcfP9y5IJpVVE1sXx+m8PCvHsO61TW5vaohGx+zK85fl
6Kuz1S1792Min6ucq1spx9yphedTV8kI7zX+z3t75ThnJsaXhTwjKtmOrS8G
5fiEmbN4cV83Yf5cR9IzJEcvy4dz3i9TEe8TH2SrRuV4fNPHgYC650Rmqcmm
Lj0SN+hXCxsYfUTz3L7qDicS5431M7S+viacXklK2leQeEPsctV38A2Rc+/0
ORmQKDtcW56vfEvs9OLHtPJJzHaNGDSQ/k1MTS22a9pCYtpvvo529DCx+kPk
+T8OklhXkVBfMGuEKJGuP1pzhMTO/hK/Q4UjBDt9fpw0ncTrGQ5RLM5nosea
9K7OJrFEePAOb8soIdrKZVaWkBiwWiScLBknJA3q+FI5iY0p81osOr4RFmcU
QjFN4uk0CbtQwIBjoWLfW90kvksXt98sY8CWb0GONwZInC67wMsPmQTjTo8G
rk2Q2EN58G1lGsC5mLb5ogWFyv6fk326JoO4JjmeaUNh4q0WlZabNti+2JcT
Y0+hnfpG2OQH2mBmteUvd2cKV85316rKnQLMkkXCsY0UTuHpNpyJ1gHVvacx
XokU+pFMqWEICwR0TbZERGGqZ+PCjy9ZQI2XV1qnUJhUsF+AEdOgichVqzMp
3KhVs5GZqA93a/ekFF+h0MoyquKD/AdIa9U/rdVOYYGJgeDpAjZoD2tW7FVQ
mMLZZHYmmg2iGaN0ZxeF6sOvX3Hq2BDjqzIu7afwVL1sZUfITPjpT3Fh4FcK
P58UWUlLDIDT71l+11qBDMHKLxU7jEClPiEPS1YgLHR/lnDIBPTetKXFHlRg
3oHj7V4DJsClWatSjijQcrZ0wxc3U8i8fbi04IQCh290pX7QNQPXsMT07qsK
bA7u9mV3msElWTDfp02Bj5l5eVXHzaGlOu9bMKnAFLsR0rXeHMaLu+5Gdiqw
f/XVy7xv5uCV4meZ0avA4iC15bmo+aDBW6/ROKpAqfkekfY2Cwi+7FiF85Ro
fH/XGH+jFaRn7dnnYaXE5l0HpmRlWEHlr8U2gbZKdB/xmy5os4IZAZZnE5Yp
UV/UkBTtvQBqWbNjytcpsTC/uqJnmzVYxDIcbKOUGMcT2tn8bgN961oLZtUq
cd3N5Aj/IHuwSFuQkfVEiTzT/HJ2pT2ENicn6LUoMSdrLKJGxwF6PBw8NWgl
HmsNC3EJdYBu7yz12yElahonnY41dgRloHfAozk0nhVG3A+6tAQM84pXu5rR
aGZwhXG0Ywn4qTQdHljSePJVqdsM7aUgD76jXepAYyhHELk2YinIhAZ3zq+h
0fpgkzufcILGSMW0/VE0Xmcaxuu/XwY6t+3Hh2Jp3D6cWLTfhgP8j4f7wn+h
0dG6JQhCOPA4hlu1LZXGhyx+nR7FgbrEs+FuuTRGm15ZcEK6HDQlwz71BTSO
BnvXExPL4Uf1OteVRTT6G24o8ORyQSoan7X8Do2ei42GJKVckBwS1Jk30mg8
pgwsKloBE/W3b11opdGnj/WwbGAFuEzVyzEiaYw3nHbV1toZKo9WRU5Tfe+V
uIrDrznDWNPMwCN9NAZa39O0H3QGLms3X+s1jS5Rvdo7bHgQ6/FoafI7GpMS
wzV1I3hwN8PYdPwTjUPJtJHpTR58aovWjf5CIy8mLr7wHQ/KUrN2Ppmg///X
fwBFn5oJ
        "]], 
       LineBox[CompressedData["
1:eJw9VGlQUwcYDGgRhUEM1YhFJB6AXNaj3O/7QFAT6oFEIHIkUUBlVC7ByClX
kUMxqIyCDFqoIl4DFFFAATF4ULWRUIWX5L1SARHkUIYbaulMpzuzs7OzP3Zm
fyx7f6hHkDqDwfCa5b+63sihXLWGRMZ/OLLWgNxgQuLHKIeX5/QATKv59hcs
SOR2uNu08AE6Obn5I+tJzPJ54ZVcCHCl7c2klw2Jux9WDhd3Avgc0vF94Ehi
voaejo05wpJxt1r9zSTGnknssItAyGZJY5XbSayYzylrZjiBWwlDSXiQuHEq
YffYaifQsCEcr3iT+HPQjkt+XCdI8Kqa3refRPnyzEH5OSc4mnsj/oOYxOZG
zSKxqTOYrulSceJJ9HzBy4nY6QydlWy4mUwi25WP1yOdwa81/+8jZ0iUzR3n
NDx2hu16Z05+KSJx63VBTqVgM5jlhCfNvCLR6o7uxWfFLtBtdLdDICfxWyf9
CfErFygq63VuaCMxvGp8deCYCyyTBainvCdxYcG23OEfXWH+Qq8UzYnZ/bqe
5PeNuULPafuf9FYrEEl7Mc93K1xLn5OxNkaB97u2GMa6c4HZmZ5gdVKB2s7G
dFYCFxJRJ3JjqgKFvldfym9zwWd0qZDIVqB+cbmLrqYbLAy0+mF30Wz+1r2e
krpBNO7tONGswPbAFcEFnO2wY/Su3fNlSuSavjtld2IXjAT49B6oVWLSc/JR
ly0PjutN6bU1KHGgjlXbxufBaONlgvtUibl00sOuE7OerZKYv1HiM52pt+7V
PBinhTZD3UrsO6gFQoc9MOkblBrNVOESQXDvOldPYOwJMzwdrELD74IKlQHe
kDhnEWcmRIVEUrdWaZo3qP1aHh4SqcKco+st00u9QZ05LHU/qcIFFeLJ6EFv
mCOLOrw4V4XiqSQ14zg+aGyPfVDYoMLfw6SfXS/tBS3XNI9yFoXMkVDpgTZf
cKwPXfTUgMLzzg5vrSd9IcR+r4xkU8iZWTU838APWr632DnXgkLzvA3NlUI/
yF/ewvV2ohCx5iPzgx+Yji13njlEYU2WcGH0iD/4RMxjMEMo/JM9obOBJYDT
/UN1xsco7C5YhN22Ahh8/8TRPZ5C2/tGXrZxAqiSBdsW51DYKl2xTKwuBNeb
99Zxayjkf46hDmqI4PiaKwP+9RQe68vg9i8RwY2r6XcipBTmZ6c2BZuIQOui
r3nBawrnVmqe4nBE4Mjc0lsmp9AzZLKwlC+CkDNWpU1tFAZOWH9hBIugJUXN
ZPAvCk2eVPZKMkQw92tv15weCl34avXP8kRgHdP6y9J+CuWfXOXDpSI4NPIo
wPILhR/qN7Xq1YggL6xk5eYxCh96lYylz0iI5j5Jh9c0hd6P1iZPSyXE9IGY
q4fVaKwZ+u2wcY6EEPnvMMzVorHxcpNA21xCnGuzVpXq0rgpbs15RcdZQsoz
KqhbTGMw1+xGY9hZwsRtWL9nBY0LRprzqoOyiQHrvMUOm2jsGTWq8ROeJowq
klt32dE4dPKNnP1HFuFheeR8INAYkci627gti7i3Chdlc2iUNVVf12BlEnG6
XdodfjROVNW1s2+fIszICiflPhpL7j+dLhpMI9qLEyPfHaBx+tgDBZubRljb
GChfhdFoEaXR7vI1lRjy592qSaVxMk+2v10/mSg0YdP3MmhkqeU96+clETs+
DzDLs2l0y9QyO5+fSNxMzYwpuURjMas2vK8zngi49Zh74TaNldpWVpYgJphR
Z+PPltPo/omlKfSJIhrAvzyzikb1gVs0O+UYYdAyvjSpgcaiQt5KS0ko8XZ8
Xc/R1tn+19e+ehqLiHmyb8Rl3fT/f/oPHGyPOw==
        "]], 
       LineBox[CompressedData["
1:eJw9Vnk01QsXRZLxFSVjpWe6kaFMH+UcU6jIlEhIlCnzUCpKhkjCvRc9mS7S
4EXyVKKiUiSauJHm0m+iQShR+ry1vvWdtc46a6+119pn7/PPWe4f6bpLSEBA
oHa2/5039hpVdysSKPC/6ro/0JOlTOB+wzUX5VRumo8YuKQrrCZQKcQn57mm
ANw7PaRRakjgxyiO311ZITitkNCpYkKgjh/xqkdKGPx+l0mw1hLY2Cy7+LuF
KPR2jbCNbQlM/Zsas4paAPXmyQbN9gReM6s74c2Whuz6hXzzjQSOSn38On1F
BmwLzeTXORN4MHUoJFlWFpp3ZJa5eRH4eCs7RE9WEU70KVn0exNYt8/344sA
JYizu/DWazuBUkLi53lNyqCr81TNfyeBRbzv06lxy6ByUvXvqAgC+81k0hxK
/oSjua1XjqcQKLh/gt46ZwUECrltlU4nsETurd3ONyvAKp6Yys+YzcPBM9D0
phb89JKCkmwC16mS8c45KyFKY1t7TSGB5ZreYcPa+uBY9GmXbhGBkQJp0wY1
+qAlmTKvoZjAU+/OirO1VsHQ6NkNV3mzfuQ+dFWsWg2e17896qghUPFWPkfH
yxCM9LNiNtYSePqaUul32hBkqpYseniBQLf1JpfmJBpBd6aNx9NGAp03NL+2
PGMMuJnzcugGgZbCBrxRRVPQGNZhBHsJnKvKnB9PApAUfVjdwicwwuGCqL0t
wpha1I74AQKzrVv++iZqAW2+DQPUSwLdXS6YNT2zAK8nxh0PKQLTmlovQJ4V
WHzuTzk6TGDW4OTMTiFr0JTcB9afCPzlf088eI81jK9ruXR5jECDZNM+rZ02
kHMVT5XOEMiRczsk6mELcU/fbPcQJNHxUoFK14AtbBs7rCQtTOJF6YneCm87
YOm0c9LESNxWaNpdEGoPt3j2h3cvIpH5tKKczdsAExkuvqZaJP648ix/9QEn
eHHqq8LYShI3jA9otC5whls3ufzzeiRe0JU/snKXM+RM8x1UjEismPl4n5J2
AVak15p5FiTytrgluhxwBe8tAfJ8dxKzxRtGp9nuYBUr3JfjSSJbb0I6bdod
VuRV59pvI/FA7C/F8sAt8O0eKXLNb1bv7AP+EUsPyDMPm6jcTeIOVh77hfhW
aFeLfxJ1mMS4TL/eqc/ekHqm2fNnKolq+vJ36N0+YKUl8DrjCIlzibdLEmkf
uKl3bLjsGIk1uydTimlfuGFWIdxTMOv/mYyn7iE/uOLcY7yihsTMpRNZEq3+
sKdX5nrjeRKNtN4LWUkEgPEWT2uLCyQWNYlXxHgGQOO2904ejSR2X1jreX8i
AOoDfwSn3yDRV67wn+q1u6AmUb347RMSDUbDmv1/BUHI79Dl4XwS1fUn3yV4
BQMrpf7MZD+JVLnNt0tNwXA6Y03j/Jez+hq+nMaEEKjiuPSYk7N+v9Srzojs
hpKzSb+LpklsWO13LXd7BGzTvp2uPkNiseGxyoOPIkCxTlTyogCFD/vnfuiw
ioSif7jynXMpLMmgHK7IRkHhjXOrvs2nsOOu1K4WkWjI7eMHuKpRKC7waugf
iVjIPnhc7bEGhWx9Mfmdm2Ihi7Xug9MKCstvO3/qZcdCemJjoKMuhVWHyiem
FOPggBo3xP4/FF4SOSTINY6HoDjnSHCg0Gav0N/h+Xth51JR/eubKHQvXzTK
vN8L/p2tX9a4UNgm3HDU2jABfJT1Yky3UFgtGt2a058Abu1S8YZ+FBqUfktu
Ze0HXHR/v1YchZuHy2IXfk+EtTdS1pzbQ+EBX895Ku5JYBZs9lNzH4WaYx2h
qo1JYHTtXJL6wX+x73bl+IOgvTMzWSWTQrWpB/mJgskg17juyOISCi07RYXO
nzkMn93a2ELtFK6+5VbywTsdvp1JD7tyl8JHVrcj0yvTYWZ6g13YPQqPNZ34
o59KB8lT/J/8BxQqPnBSztl7BFjjTNC5ZxRuUjQyCSnNAL98WXD+TOFkXuZY
jEQWBFGD8nO/UijJJyMSvLMgYi1v7Oo4hWmu9mKmdVmQOKR1TnWKwmCJJyVf
3I7BX4YWi74L01i7j1A3PZsNj/pCmVJFGoN5f8mGxOVCP0v/jusSGgeVe9r9
HuXCq8SJ8nkqNPKN2l5OL86DEbVk92h1GmsWjU2fj88D0fiCNht9GhXVH0bv
NWGDpWxb4fA6GhPyrPO8uznQ4C5rbRpN4z7WD6tW40LgzD9EtcbSGFlsFaIe
Vggx96jjtntoPDwo2d9RUQirzK8NuB2g8c39qP4WqRNQrxYQEZFO46SJ7n1j
6gTUjdUXVRXR+IuUYhPVRZBTq4haJTRO9L9l2b4qgoigtKH6MhpPTg1Pti8+
CTrPPfRuVNH4Mvc5TzrzJJy/NdM+UEtj8c+UBRW7i6GG7fBF6haNOQevKnw2
KIWsjZcL8ttp/NDdZtYbVgqhc1XWKHXQOGDWqV1RXQor9o2ls7ppvNm0w+XT
4jI463dSyfopjTKsqxPd38sgU1H45r0BGpM68p9k65VDcF94oPNzGiuHlNcu
CioHTXvLiz5vaDQJ0ezazi+H03qUbQJD49ug0iZtDx4coV1GZkZo/KTD03gW
zYPAqhZ2+mcaU7J2/HLN5oG6XO4LzjiNy2LE3pe18UD48eRhhe80ti699Dx0
kAdDWf6avB809v5SNZgY48GpGaOY2pnZ/VN9jE01KiCtqVzOUJDBiGOVCcNQ
ATtjxK43z2GwLWEux9GjAmxWxvpbijDIG3US8Y6sADXixbxOUQbfnPsgtTCD
DcI829pNEgxKpD39EF7GhqGt9a58KQZHV5qOBF9iQ1VPauk7GQaXl+8o1H7H
huxV097lsgx+ZCt4XP7Bhj0FMcre8gwqHJK/2LyAA/Y+O4r5SxjcJJR1e7E5
B1bfHPDiqDBYpKd6zM+VA0rqzopOqgyK6TwlxYI48GkEijpZDNIz4OKbw4F+
58ue6doM2kX+cJvmcaCtUUfeSpfBhmVYM9jAAW6i8okWAwYn+T22Vn0cSHzD
3ZJgzOAgOazZ/J4DgTYSi41MGbzzq3KL+1cO/EdyKr8OGPy27HjQI0kuLI+K
3rzbksGfcc9Ly+S5IN5HLWTZMLjKvsouXJUL4yZ+vUO2DC4db2/W0+HCy+J+
TsV6BusLNKdeG3Hh7u9Nrr4ODMYWrFsQbc6F+oC70kpODEqHJP/53JoLRR3m
j/tdZvOPLAyXXs+FFO1LefmbGUxlVQ9JOHIhLHels4sHgyNy26avOXHBfaxq
/h9eDP4xZ0BbyYUL4KH0sMubwcchI0IKs5jVwsnJ2M6g1ZyltrWzfOll4pts
/Bl09Ok37nLgwlTKYSnBXQweesN57W/PhSFisvt6EIO+zwrfhlpxoWdDVPb+
UAbjKm9z+GZcuFxHbjQJn73PKe6vglVc4MlslxiPZJBoiGVKNLhwdM/TrvoY
Bu8Zvwp4qcCFmEHHrPB4Bj9PVCfZS3DBG+6s10pgcKZTlnwwxYF1lWvFyP0M
5jkvSPKnOKAr0thZlcSge26d5FgvB+RDtTP9khmsPuhYEHWdA4IPKu2WpDKo
PffJ/vunOGD32VVkMJ35///6X0VfQSk=
        "]], 
       LineBox[CompressedData["
1:eJxNkglIk2EYx7+8CCstI1vZgWnzyvJGbU9v1jC15R0FapFl3lZUliZqQZdE
kqxMFC2d90pZgda80TzmnZpnU1umy/ebR9k2NUtwfr7w8vLjz/P8n+PV9b/i
GaBEEITd/7v8Hp520LhRihGxckqvmW1bZqbUjDg/1gR9KaPSqY8Y6XdFpLho
toC8mj0YXo5RadXi3oq0NmBoybICazAKJp5xwjZ3gp994UNRLUbvInsD6Wc+
Q6y/X+iFeow4l25ZpYV2QUaCptvXRoxu5vIn+It1UMWrtvBpxshRvJQ+kFgP
I/3XtXtbMargpPqVSBpASZku9+7AKD2+by6TJgCmV0K1aw9GBQYqjBnVNgi4
w8gW9GIUpTXzZW6+HR5kkY+cBjAatWTz1Oo6oGHW0/3YMEbOg61w1q4LJnRU
rSpHMeItXqUFKXWDOrNkO+M7RrYeanxNWQ+w2DpCazFGb5PsjU1V+iG8rKWG
N6nwH4CnoricQxLFPIagaKNFAncaI5ViroWNrRDarUThRr8welnOkrBih2Ha
94VHzhxG4jJms8B+BLTuO1nryah5W7yR017NY8TnNVfYOz4Br27uwq6/GJ2z
PW0UHZIIsblh8jaCXNXzog5I7ymTqFPXMi6mLwk6T07+tlaj9IXd3Nnx9RTT
p0KnUzdQ7FFjInHVIFf2wYYY9s/JdVvIlX08h5zLheL3W0lEM2V6z+umQLtt
6HigNuU3r24ytnMHubKvZKAPib+16FDx7kUFI/F7KD36bojQUpdc7Sfby3ho
TG9N/v3i/hQ6iQgh2eh74jXI/+T3sowoXb8puGfJRBGfAW5pRl28gxRHR0x0
BJgr6ssEztH8NpoVxa1awS0CG4plIkNBrN2a/CXjDeYMqn7Xx3mfREeoem77
BNUmOyjmxYEsU8MaF6aiv1xoXfpRueioiM8GaUduebEzxfs4gfyLLIpPRRp8
0HZT+OeD1Nvg+CYPcvU//AMjl9Wy
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQ7R/+eNJy7q32DFCwav2sQ9N5t9rvNomTy7iZYJvE
81TYWnmr/Z2k6za3diTaSmfqp96z2GrPmhDwJ7U2yfbK0cptjX5b7e/NWhBn
VZxs26N0hF01Zat92nnTjaJBKbZ/bkesyu7far90jkPYH9U023t+Te9/PN1q
f9bsEh+nTpbttNVnHOb83mr/12PWNybXbFt/DvFJ9oLb7C1uT/pgEpRje+Dg
apM2m232ch29/33a82wXmlytFJ68zX6O3TrFsC2FtlET5U9vW7HN3ljQeVtK
bJGt0LtMmah92+yPb2Z1ucdVbNu0/N++BS+32Xu+uyjyKa7ENkVKg0XPYbt9
0youZgH/cluZ8qLQi6Hb7WX3l5T6SlbYXr28Z1lJ9nZ7vk7eKf2PKmzdegM9
d0/bbn/6tpn6sa4qW3WG6j6Pt0C+9Pfkj8x1tg9ijt5/zbTDXuKvvGDpqzrb
GTv5Dfsldtg3OXAfXXq93pYvc38biA8LXwCbcKLX
        "]], 
       LineBox[{{0.3156812211910519, 0.}, {0.31600804565845747`, 
        1.1302419556487357`*^-7}, {0.3163350000106856, 
        1.1423631427434921`*^-7}, {0.31666185645409295`, 0.}}], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBmIQ/VVnv2FB0Vt7BiiQ49uiexrIl9B1Cfmt6Glrb5Ym
6FEK40faJsRJfD1SDuNn2ja2nbrhWPXW/pKicX3NzSLbRetq9uyreWtfunz3
y91/W20PX9NbYF3/1r7nq0BJ1I1e2yf/HjTvaISpn2TLqj453bTlrb3bq//z
bvdPt1Xzd/Xe1AZTP9fWvfy7nn4n0H33352McV9omzF/pdCa7rf2mQwTl+QI
LLLtPB79TaPvrT1PmyT/GpOltqve895aOuGtfaPfMz3u1yttT4sf2Ks0+a19
0EStJ1q1q23f2BctnD/1rf2MvT7vfeo22OpNuJYxc9Zbe2vnq5E9izbb+u/o
8BGb+9ZecwfPdeekbbYFD6wMJs9/az/p5rqNwdrbbSdyvBUWWPTWfl7DzW+L
JHbbbjKY/71nyVv7/MOyaw6t2mN7OSLwNudymPv32n5pYN7ftvKtvc+5uXeu
PDpga3oxva1h3Vv7qadrAy5cOWwb9lMy6+8GmPuP2pYpnvGt2vzW3iKQbTf/
z2O2JtO3B4P4sPgBAHq80gk=
        "]], 
       LineBox[{{0.9679209268471853, 0.}, {0.9681956640588494, 
        1.511491531117827*^-9}, {0.9685031204469498, 
        1.7657878378654388`*^-9}, {0.9688105768350501, 0.}}], 
       LineBox[{{0.9883306955626439, 0.}, {0.9886739097987967, 
        1.1429047494274685`*^-10}, {0.9890171240349493, 
        4.571618997709874*^-11}, {0.9890261559885323, 0.}}], 
       LineBox[{{0.004551001612322869, 0.}, {0.004600482906334701, 
        9.141703759045821*^-13}, {0.004907180406212797, 
        1.2205907785028152`*^-12}, {0.005213877906090892, 
        1.5767288476273805`*^-12}, {0.005520575405968988, 
        1.9918219850034726`*^-12}, {0.0058272729058470845`, 
        2.4662616817302026`*^-12}, {0.00613397040572518, 
        3.00047234055645*^-12}, {0.006440667905603275, 
        3.60201487016569*^-12}, {0.006747365405481371, 
        4.272020017769472*^-12}, {0.007054062905359466, 
        5.012792194922804*^-12}, {0.007360760405237562, 
        5.828262321388224*^-12}, {0.0076674579051156586`, 
        6.716825092065038*^-12}, {0.007974155404993754, 
        7.686117542454036*^-12}, {0.008280758738776027, 0.}}], 
       LineBox[{{0.8986268393268166, 0.}, {0.8989366216307841, 
        0.000015272503125343273`}, {0.8992464041991746, 
        8.875369694772685*^-11}, {0.8995561867675651, 
        8.446780413737384*^-11}, {0.8998659693359556, 
        7.964617472572671*^-11}, {0.9001757519043461, 
        7.339591437729524*^-11}, {0.9004855344727366, 
        6.785996949725594*^-11}, {0.9007953170411271, 
        6.196686688302056*^-11}, {0.9011050996095176, 
        5.500229106619692*^-11}, {0.9014148821779081, 
        4.76805575151772*^-11}, {0.9017246647462986, 
        3.910877189447119*^-11}, {0.9020344473146891, 
        3.000124967247105*^-11}, {0.9023442298830796, 
        2.0893727450470908`*^-11}, {0.9026540124514701, 
        1.1250468627176643`*^-11}, {0.9029637950198606, 
        1.7857886709804195`*^-13}, {0.9029729062718721, 0.}}], 
       LineBox[{{0.9592156171007474, 0.}, {0.9592794288039381, 
        4.7144820913883075`*^-11}, {0.9595868851920385, 
        4.857345185066741*^-11}, {0.9598943415801389, 
        4.7144820913883075`*^-11}, {0.9602017979682393, 
        4.857345185066741*^-11}, {0.9605092543563397, 
        4.2858928103530064`*^-11}, {0.9608167107444401, 
        3.857303529317706*^-11}, {0.9611241671325405, 
        4.0001666229961396`*^-11}, {0.9614316235206408, 
        3.857303529317706*^-11}, {0.9617390799087412, 
        3.4287142482824054`*^-11}, {0.9620465362968416, 
        2.7143987798902374`*^-11}, {0.9623539926849419, 
        2.0000833114980698`*^-11}, {0.9626614490730423, 
        2.0000833114980698`*^-11}, {0.9629689054611428, 
        1.1429047494274685`*^-11}, {0.9632763618492431, 
        2.857261873568671*^-12}, {0.9633532259462683, 0.}}], 
       LineBox[{{0.9830108749022766, 0.}, {0.983182482020353, 
        1.1429047494274685`*^-11}, {0.9835256962565057, 
        1.1429047494274685`*^-11}, {0.9838689104926583, 
        1.1429047494274685`*^-11}, {0.9842121247288111, 0.}, {
        0.9845553389649638, 6.857428496564811*^-11}, {0.9848985532011165, 
        4.3506955096455443`*^-7}, {0.9850934185392768, 0.}}], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQzRD6+atayTt7BihY8GXJzAdA/u5NZ/ZZua2xPXUs
ZfrkcqD8/XcnY9w32n6doTLVrQrBV8h+MulnzTv7S4rG9TU3N9l62S6ZsKYe
IV/Cn9IX34Tgz3+o3CPU+s5+SUq5yZzsLbanNj/uPNr+zn7GXp/3PnUbbL+0
Lm6v6Hpnb+18NbJn0WZbuYjkVu3ed/Y8bZL8a0y22npqKTff639nf+9E7JHT
x7bZlvx51DBxEoI/79yiOpep7+wldF1CfivutD2xIKnm+/R39qXLd7/c/Xer
7ecipapVsxDycq6PymPnwvy7x9ZDfFGpwIJ39q/yOzilt+yyLXqZWHx4EUJ+
7m7FwrKl7+zdXv2fd7t/u23w35i000sR4QcAnVqsKQ==
        "]], 
       LineBox[{{0.9934102662577043, 0.}, {0.9934789091049349, 
        9.143237995419748*^-11}, {0.9938221233410875, 0.}, {
        0.9941653375772403, 0.}, {0.994508551813393, 0.}, {0.9948517660495457,
         9.143237995419748*^-10}, {0.9951949802856985, 
        3.657295198167899*^-10}, {0.9955381945218512, 
        3.657295198167899*^-10}, {0.9955383143592241, 0.}}], 
       LineBox[{{0.9903837689571864, 0.}, {0.9903899809795602, 
        1.8286475990839495`*^-10}, {0.990733195215713, 
        4.571618997709874*^-11}, {0.9910764094518657, 
        9.143237995419748*^-11}, {0.9914196236880184, 0.}, {
        0.9917628379241712, 1.8286475990839495`*^-10}, {0.992106052160324, 
        0.}}], 
       LineBox[{{0.9855849343073944, 0.}, {0.985584981673422, 
        4.571618997709874*^-11}, {0.9859281959095747, 
        2.285809498854937*^-11}, {0.9862714101457275, 
        2.285809498854937*^-11}, {0.9864430172638039, 0.}}], 
       LineBox[{{0.8938247793306224, 0.}, {0.8940254763533624, 
        9.143237995419748*^-11}, {0.8943572928177166, 
        9.187882712194258*^-11}, {0.8946891092820708, 
        9.268243202388377*^-11}, {0.895020925746425, 
        9.321816862517789*^-11}, {0.8953527422107791, 
        9.330745805872692*^-11}, {0.8956845586751332, 
        9.295030032453084*^-11}, {0.8956845607154863, 0.}}], 
       LineBox[{{0.981809625075742, 0.}, {0.9821528393118948, 
        4.571618997709874*^-11}, {0.9824960535480475, 
        2.285809498854937*^-11}, {0.9827248630388159, 0.}}], 
       LineBox[{{0.6814452676272925, 0.}, {0.6817738035706308, 
        8.356159339898771*^-7}, {0.6821023596168785, 0.}}], 
       LineBox[{{0.8963481895478086, 0.}, {0.8963481916038416, 
        9.3664615792923*^-11}, {0.8966800080681958, 9.348603692582496*^-11}, {
        0.89701182453255, 9.268243202388377*^-11}, {0.8973436409969042, 
        9.277172145743279*^-11}, {0.8976754574612584, 
        9.250385315678572*^-11}, {0.8979563086516759, 0.}}], 
       LineBox[{{0.9983983131564573, 0.}, {0.9986271226472259, 
        5.8516723170686385`*^-9}, {0.9989703368833786, 0.}}], 
       LineBox[{{0.986957838618033, 0.}, {0.9873010528541857, 
        2.285809498854937*^-11}, {0.9873868564132239, 0.}}], 
       LineBox[{{0.9975974799387677, 0.}, {0.9979406941749204, 
        2.9258361585343192`*^-9}, {0.9981123012929967, 0.}}], 
       LineBox[{{0.06199537216752659, 0.}, {0.06229973768736295, 
        4.181378658596671*^-8}, {0.06260410900695094, 
        4.272763725614693*^-8}, {0.0629084735288491, 0.}}], 
       LineBox[{{0.9962245031567838, 0.}, {0.9962246229941567, 
        3.657295198167899*^-10}, {0.9965678372303094, 0.}, {
        0.9969110514664621, 0.}}], 
       LineBox[{{0.010032081869253993`, 0.}, {0.010121037904140425`, 
        4.073721409783519*^-16}, {0.010181467922238317`, 0.}}], 
       LineBox[{{0.9664297275776172, 0.}, {0.9666583821183474, 
        5.057353516216548*^-10}, {0.9669080141398785, 0.}}], 
       LineBox[{{0.9993399522146199, 0.}, {0.999656765355684, 
        5.617605424385893*^-7}, {0.9996567653556876, 4.}}]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwtWnc411/YRjR+URGySRIlyYjU93NLUURECiEyG0ZIoUJRdnZIZUQZlRnJ
3rL3zN7rS1mZr/d63/PHOdd93eeZ13Od5/njHLxtqWZMRUFBIb+1/e95mtpG
7US8JSj+fxkuxxQVX7PCWwHhDmYuEVKbsBahE/IA8s3N2nSaV0lKxnuy59us
QT39aKmey4BU8LZYwofVFnZhfU7XJ+6RxBsfpxy++RBRlD+qmKpsSfE7hY/n
RdjBNe+xddWtpyQuDH6+3vMIdlOt7vk7XUkBD0P5yNz2OMZud0broydpe5Jy
5CsDB3jsM/13U9uf5DBAxcET4wh+KeeOYZkQ0gxL1pusoSdQW3w984ovgmSo
Yr7/Kv8zTMu8e5oTGEVqd+N9PW7qhAomTyq/bzEk/p57NIXXnHE66oHl5I3P
JH17+fM+C86YsjnGnVHzhRTOeNBFK8QFT8spVXgPpJKav63mHZZ8DsfViySt
ygzSnsuta3Ntz1HhaEk6QpdNujSSLJ33+AXEF8P5F+fySC9cvB57srriZAqr
lN6FIlIeh8n369mueC3iyOlqXUpazpSZ573pBqpwzTspuytJoursouRVN/hR
K4i6sdeQ7s8sWP6MeIn9VIvKkq31pDiP+i+vSK9geaj+z5xRE6mPL3FSvecV
TnTNf+eRaSWxFbgJ8ji5ozDPPW7QvIN07aa+6RS3B67yHOgzXOgm+S5Kx2YV
eKCrZKK40qKPVOHPNOhq4Am22jNMyyEDJKrjszxXqbywaV4pILk0RCJV/NLj
jPHCqiUbvUvgKOmxYWzE+HlvvGSclLK1miClbjh1Zgx541nfL72LAdOkqTBt
luduPjBv2JidfjZL4peQuH6F3xfEhKgJlc4fkn793iC2cl/0f7iUd8BwnvT2
3kTDiOlrTC4eCUgLWSTdezHwSovaDyqvnp798W+ZtLOhLi7/mh8k2kSYd7xe
JcVy5ZYejvVDovS+v0laGyTZ+wlDXgt+KA+bc7/1lYJ4ssONVzPEH7/fzVz+
RUtNsGpYn8sb8ccXBzv5A9M0xPfoW/p8kgH4j9lownV2B6E+q+Tk+SoAbCd9
RTZY/iNmSdLvZ9sCcN1B3c7CjJbw8TqSe10gEAIu7LsG+vYQRzsYu3MeByJM
zK5IrGgfYWRLZvVgDcKo4K3I9IT9hNi2AIdUqyCsffx87ZIpE0EVIN7VVR4E
rdsc7JGyB4h6nrYzNNzB+CE+yHiZYCU+fLOPELYLxqj+z4MjN9kJC4Jj/UZN
MEJyb4TwvOMkztbk6brwhWC4hbqhnZKH6JzYxt3cGALuvD5nio+8xGf7OKd1
wTc4bMdDn8vIRzzaqdDH7/IGrVR1DL/fHiYY+X2j7E+EwjPu43XNOQFiMF2E
KuZlKH5x+UVVFR4lUs833a7+HQrHZXu/piQhQsWAhY/bOwznxriqg++JEFyz
2a6XBsPA82KVdMf7JDH1THf4gXQ44ij8ZHtzRAnPiOi4krFwmJ5mGzulIkFo
HpPbMYO3eH7wpphx6iniSPao6YE3b1FoHVJTd0SKKGkTErwrFwHhg34Dh5TO
EIEmdR6BERH43P1F5enaWeL2woOJnL8RoLt2yP5PIUFsMmQm7o1+h8uJuxyj
L54jaqO0aE//ewd1p3jFm0qyRITI2v3bqu/xlLqTT1L3PCF95ZxwxsZ7iM/M
d26PlSN2/h707dH4gAXyRnZ7tzzRdu8leceXD5hnaPR2571EZJcYa345Hom7
ROGzmx2KBC9t5k5ZrUi8UaXst7ysRHio7/zR6hoJ0Z8p8fI1yoTmQAIrRXck
YnIlFThdVIl8wbXKoB1RaNw9H37i5lWC/4Gyg6BYFK7cxfajhBqxsEnuVPOM
wndRuR9T3NeIAE6JiFipaES8e9zkr61JrBi9VJI2iobSX5HQohdahEFS21rt
62hQdaxuF8rSJkTOOOguj0Tjx9uZkKnzusSb51V0PgwxoEnIejL+Vo/YqOTI
O0jEQELN5KQEhT5Ro5nPdTk4BtmTLDpHHxsQ4pH76noLYiAkWrcqSdwmIkYN
nGyntngx29zTuw2Ju3bUfe/Of8RgYnl/U7YRsTNIIWp27iNWn05uJj40I1al
+lej2GLB5tN85qTpHWLm9+Pr6udjcThRxpVd/y7RdOTz7u9BsZgpkTStNrtP
vP+53c5RMg5P+CpiZMytCH/99/VC+nGItFhcpNn+gHClOXWsxz0OL6RG88Ri
HhB3VIz7ZDrjoNcT8E9w0poQHyxW3P70E0R1xBiJ9IfEEfebsZmxn6Cy40Uc
pY0dwXb876ZZ7SdkGN568O/UI2LTjjejivszrm8SbX9qHxO//nPh9i/6jJDy
Y05ssk+I3G8sDrKTn5F3wm/d6/hTIvlacvPf/fEwHeTaZOR+RgS/7/W4bhyP
okE5Tpv/nAl9UWKefWcCMt76G9seeU6ot7VcqRFJwF4fYe0zmc8J+Sfm8c+0
EuDYXTHhpfiCOFYWodefkAD9W00utE9ciUWt1Yo45UTs6L8pdJf2FTG+EXBI
0y4Rz9qe/dHOfkV0xxx9tutDIsp28+/Vv+9OFE5rid2fTcSM9HrBbLcH4e2S
9e5kYBJc1Pc4nf7jTTjxqy4P/EyCleiaVEeRD2FdNaoWNJSEjFPjMYdDfYkb
TAd2Lkl8QfgeUxNPAT+CN/6hdU77F1BXJNTKbfoTmfWiFy9yfUPJKM+HS8dD
CN/xqUtC8t+wpvNAaUduCGFC9UmR3uIbaJpO7U5SeUMwi7Nf6cr9hncU5141
Pw0lfla5JGQKJ+NocxnFwEY4caRd71iCbDL4Lop+2/fpLRE4dCYp4noyDg6+
ZHyuFkHcW1/44vIsGTQnGr11094R7Cfuplyu3eKPhn8XUIkkXp65KEoMJGNR
kydmKTmS+HORL01kMRnTOuXLYYxRxC/9nnQmrhQEm+zZY9MfRTgEqGX1mqdA
MuCtzcmAGKJzQTrfhi4Vule05kY1PhHyVCwyJgdTEelSQHC3fyJS9ywUaEqk
Im/tU3uYzmfC88i3IpJuKkqLyXyP7scT0lqHynZ8SYVbnKlk/OdEIs6Y4uJK
QSqqlGy8G0hJBIP17/Kp5lR8L1K97NiSREx4vqlsWEvFceN3Jja0X4mwnN01
b5XSoEL7i2FGKZmgrhxT9tVPQ4NicfFKVDJh1VJa62ybBnWzdMM7y8nEpRmn
euOINNyuU818Gp9CLHPPN52YSkP3dtpX6xxphOaL7s5ir3RIK3skXVH+Tuzr
4xcyjUpHx36m3PHi70Tl2QdP/8tMR9v9klnHs5mE9CINz9WBdBg/+lT+XiyL
YL9zwrhHKgPN/j+1/aSzieZS++8uVzLw0WFOIaQwm/DmLdlx2CgDRwXPVpYp
/iTWujQT7r3OAFlT7WSRYQ7Rc+U5eXk4A9YFF3/0JecRIYnVMhGrGQi+WNy9
rJBPqOw8EAD670j/lH7XejifKChMFH959jsuhaVwNfkXEFHiLfb7A78jga/B
f7qnkDBiE6AWlslE56UP8huZJQTHI2uNBo1MfNZ4EK7CWkq0NOXE2d7LhMYp
1m66J6WEvM9VhZ8hmUg+qy3VL1dGHKFw9L00nYmLKwKPNCbLiYnhGhbD8Cyo
xFy6zeVSRUTLstzdnpyFMeP31iKrVYT2h9s/40uzYBHPLf7Xrpqo0lzSnZ3N
wpx+VF2ETQ2RVMUT8/TiDxzJuKlI8byOsEyxOR46/wPCwX4H/VcbiJmz/U2V
O7Phykx5jFe2kbhfccVhlSMbfpE9z/w8GgmzXsFyPblsBGT8EqZjbyL06fr0
D4dkY4fLPqeCS82E6h2loFTJn5h+xX9krL6VqJ3/IT10+SdqQmW1FfjbCCXn
I/1M+j8RamKwGP+kjbj0hkrY3v0nPLlyTKyF2gmZ0qxydPyEi29a7a3QDkLk
4OHVaocccJPfX86I6Sa+JgVEbfjmYCP4fNXB/34TQlIUl0RickBsOkqmPfhN
CKh0BQVW5cBQ52jKlQs9BM9Tf2FtjlwodkwsflnqJeg71g1Gc3NBuYN118fq
fuKPX2sFJWU+rjPGXsH0MJFzPwVDzPnIod3WoH1mhHh1yft7mVA+CtKnpq95
jhAcFLIfvTTzwZZ0z2rq6CghZ/nFiSk5H66uuc9/240R1fyyb4NOFEBHIPjk
4zOTRErQt1Y36QJcTj0vaxg6SYRQcTI8kisAfc1bBqXFScKgZ8ld62YBWtK3
c3JnTBGLwV/suF4VwKDY9zM1ZggeGla1zz0FsDnsXdZYNEvQ2Lz0CRsvgNvR
0bq0f7PERN/fCs/5AixOG2TynZwjMnJqYf5fIW6afgzMjpojFG1dj4ueKkSf
Y9ZKi8cfwnaQvDPHpxCFxSGy1XbzREVhWX7d2SJY3NgfSFe9TMRVrw35XCxC
ktK0Vy3TP8KtTfQ/JbUiiIQ3KkH/HyE7/f5ahWkRav4VsEos/SNyWB6NFwQU
gZXudlfQ8VUi2fLI/tSxIhgI1fefy10nfB10paz+FqHO9Q7NG4YNwtwtUFd4
owh0pcxWyWYbxNG3m58S9hfDxY54IHFgk/hY1nY2hihGglXCVCtBgVBOd5Og
oGJ4E+S3pVmUsBPI81L7UAyjA+I8Q+OU0BCbT96XUIx9OmKNluxUYFDQX/XO
L0bviuf7BicqeNtK+blNFIPuhRtPk/I2OFeN/bCTKUHfn4AK601q3LFXoNOa
KsH4kcuy9nk7kcBOr6u3WILNQ2z6Ois7MZXbnmRIUYrPIUdb007tggWVmZIF
Yyk2p6sfFyXvgq3XS68XZ0sRENry7EHCf3B6V7zrq3cpnEOuUyen0yK4kLR9
2/EyWEfQhdYF7UOrIc31nZJlSGmoVUjL3geW7TWxdOfKQHoc7t7dtw/hijpy
LBplqJbSOUkpTI/IJgfX40/LsNbU1/uuih6Jw5lUmjVlEKBPvevIuB+Fu0Q3
k8zLYdAS/tmvlwkC10QyPR+XI3x4+MgkAzP83gtbmr0oR08tfUCcPDP0xY71
HgorR0VqrbrsN2Zs6PDlh5eUo0G3Z4jD7QCkk5md3Nkr0PnaqrLzPCvSr69u
GFZWQNXcUdiRnhMcUf++n2uugOChScHdapx4Mblkwd1bgYH2crc9gZxQc57v
6ZyvwPpIcNMDZi7Mxk/nXeWphJaFM1sOLzeOr/c+w6NKDNa4zyx85kFcTMkG
2+Ff6K1hnXu34xCs3K7148QvPHkt8ILu+CGcMR0qNjr9C9VMfiZZaodQf5Ta
46vyLxjvSpIpfH8I/1LO75e1+4Vit1dHP53mg1JB0ZE75b9gaqk/sM3xMP52
F6hm3qlC5yEn7j3CAsjLUxXrtqlC8Ivl0Ec3BeAe2cdE+awKpaKHWg57CIDD
iKJLMaAKpCWj5qvDApCfhHFPdhU4U8UyZiMFEf4vz56GthocXTK0/oePQYY5
N1r9azUsdU8fjjYRBnUwk6VcVjVmBIrNT0QIo2K/xRnJomq8FHRv29koDBV6
7ma21moYk+e1o4gT0KN1oRlYr8YZJhveH3QicKSSM7NSrkEaq33VzJwIvs9U
H/eZqoGd+M1I9g5ROJgfXnm2WINC54FTS8uiIKaelllR1KKO1kt5g0UMpePC
t64x1iJJdy3ltZYYmof8/NjP1iKblkavpFsMfzqv/Y33qsWHwoDxd5PiOF7e
nVV2tA4LbttO6QlJgnnm3rSfRB1WZ6ZdpTUkQcG0evCmTB0uaKoyX30miebb
rF5kjTrwc32gEG6QxJMNDV0Wlzo89fXe/GIvhWqJOsq7bXWQ6dT/ttlyGhKN
+rHbZesh5mmel5N7FgnGn/PvXayHaj/nGYOZs+D6R+6oV6pHl91xvUvcJOzk
cdrz9kY9VBKrU3pdSOg2f/fohHk9OtRN1KUVCbju6lTQDN3SZ9t7vWcUaJZR
n4mf2dJnqZH9IOkcVj4Mvkv9W4/L20RG5cvP4eCmjfLP5XqMnC1jIw2cg0Vu
UFI1VQMW755k9GGRxQ7p1rtk5ga4WLOX572UhbSY1qg4GsC+8EvY7c55RB6+
1Zf/ugGvOkcSnyvIocyV/LoiqAH+bMm3M83kMD3ohIawBsi1XTpD7y4H6ejI
9wMxDQjLUOwSL5dDE9eADk1WA7wVrr3DRXlsZzHuUOxrQKMm3xeXKxdx/797
jS0ijZg793Qj2UEBcbnM3xVPNSKEo8SwPUoBvVZFYflnGmE1G/tVpFIBam2s
BvHyjbAfi0mzZVGE1McK8hOdRvg6/f2u8kMR1AQ/HZ9741b98y07Uish4kH/
ReveRuyKbr6wo+gKWvl8jo0ONUK2IVoogXwFe9ul9upMNKLL4oaIK6cKnhN+
rXILjeAkPt7ssVeB2W4Ys+5uQqvpu6ehbKoQj414XnCqCYp7GhuILlVUtd/I
3ePbhF+nLpPeWKvheeco093AJnxSS2II8FaDVPcji9LQJpxs3f4zIU4NH3vf
cD+JaYK45OFZiS41PBlpcxnPakKajknfdzl1HJ+/IV8y2AQxzsAsB55reL1X
s87+dDPIJy6w1kxrQJ5+7EgL0YybGY9zMndfxxrDY2eRC82IaedILRa8DjPm
0JOjV5ohGBO9S8bkOmQ42wOvGTVj2dkmsqbvOuaOamqeeN2MFhUYXe++AXV5
zf6hoWbk+s4w/ZnWQvb+k3WD481QnXyxb5ZOG7z9u3IHZprx+paB+h5hbfxx
/Bnat9yMn7OLLEkW2vBL4VLtpm3BfCHjY8s5bVRzDOc1ibdgUDlRT2j9Ji78
fRBR5NqCbSaOfVLCekgqUPQs9GjBsQVi2VpND/t9Dz0u8G0B+072b/V2ehgQ
aFHPC22BSID8naV8PTjrSe3OTmqBmIcU54L6LeRWbtinNLcgQvs3o/E5fZyK
9LoRydcKTo4zZVefGSC50Ml+99FWLOSyMjkHGeDYoM1buxOtGOh2eFSaYAAe
fp1eJelW2DaSioPbDLA7Scj0n0ordvB1+V0RvY2+zBo7NcdWaDGzb5ycug2v
ur0h1I2tSNlkc1e0NsL2uW1Zlm2tOCRXL+PiZQRnhuWOzu5WGHvv8mj4aAQ7
jT7OlNFWiGeQ2fLbjKDflRyru94KBv4cr3rCGKdGr2Z8F2jDye1/t/fSm6Bv
I7DZzKkNead+actUm4J2qt7rkWsbeul+UU2MmEKqg+78S482/Ef3WD6J0gx+
aa9SYgLbwO3aMe4gaQYZM0ffnk9twMvZKNmPZohquH3pWn0bdHadpPF+fge3
P57MwcF2NN/iUPRUu4dhhboY5uJ2KM6l6lpfsASf15HX/hXtiD66GBBrZgmj
aicH2tp2PNRzfbDqbYmBKyJXqTraMSjNGrK31RI96v4b0zPt+EG9KTUjboV2
XXWtUrYOlGQsC+6rtsKvB217bK07sL+5KW7XTmskh/XaNxzshFK13deVH7a4
L8jRKXqkE+MMclwW9bYQ+KEpHSTUiffr8sULI7b40N6wcl2yE94Dj8fOMT6E
74ESx26lTkhOvZOts3wI8+DPT0cfdYLg9rxfddQOR/0fuKzXdGLJ0UQqI/kR
Yt23eQg6dCG37tHdqk0HMAy5PxN26oKKkOryMKsjnLHHVsy1C5V6RuFM4o7Q
XmS5RfLtgofXO/V0M0fsNRKWuBq9xVdH8881OsIeWv2Pf3UhcZWt2jbxCZQX
v56uYOuGqdL2r7vMn2HBUHvC5Gc3EukPCnewucBu/+r+9oJudD4vTGcTcsFi
0VuSQlk3rm4Lbb9L2sIHf/sda+hGWMSNg5L6LljuvSU5O9INdao3nc5xLli5
aexqz/AbsYu7OQcknoPimhWX953f8LjZW8Sv/wK7L7xUSznQg2/8T3oOD7vh
bL4lfRlHD7IH9vGvLrvBQlqrvvNgDwq0T4f30r5Eo4jQFWqhHjyWiTnRKv4S
4ZyNCjdkerAv8cshR7eXEFjiPLdu1gPNdI6JJMFXuJCQcUIhuwcntWbJi0/d
8WTfMG2/Ti8MU2XjrTS9cLQzVabboBdzL41Lxy290BHjbNtm0ou/e9UpbV95
4ZQkR3eNVS/o4u225Xz3wqyuemK2ay+kb/jqsTN7wzCxUCEoaUv+4vAcT7s3
FOXfv7y41osz0QOjQXd8QZt3jKJNuQ8ekfwHVQf8MK3Ek+6p2gdDxb2+vnN+
qO1iNCPU+9BetVHQTuGP1//W62I1+1BuHBbqx+0PBon6D7aGfWDwM5r21fUH
S5ItGOz7MMPCK1bT5Q++8Nxnyh/78Kz12D2P/gCQ7FTWi1f6cLLTpLNrf/BW
XxxzVFjvQxqLphv94WAk33JZqd3sg7C6q7L6qWDwKqQtdVD3Y20yRX1VMxg7
OQ78Ie/px0r6rd0974PRXNgzwn6oH0sHJ1rnhUJwn86i3uZyP+KZjBTeq71B
xEfvmEMR/XiynpsUUxqGW+fFzva+7wfFrnN0bV1h4B3oaA6P6sd3uYbd7H/C
8Jn7yHaGT/34j6pgbwtXONLDC80oUvvhsJ/SnME+HNV+i8d/l/dD8eemSY7I
W6w/0c8K+dsPl6EUKa4vEdDTEK/ZdXkARyLUlLK7P0CfXTkyS3kAr64en5xf
/ACDfmMbU9UB1OeNno3aGQkj8zespRoDiJM/obT7UCTuuK0YO+sP4O6l/Zxq
mpGwzSjYWHw4ANvA7YzJJZHwZFIWGYocwEnd0286P0Yho8U4MG9xAFkGH2Ju
u8bgdHUy1UjIIH6axWhRPv0EHjmThcALQ4hKl/utG5YECXEJ//SRIWx+5fCa
50lB7x+fyhi3YXQ81rS6apSOKbGrbqyiI/DUKCUHB2WBf/L4BGXTCCJSbp95
LJGLEr6HjVYuo6DdxF+L4EK8bm4xVOMbw1dRjYW44RJ4P/Pha+Afw6bEqYaa
vyXwFJAbVhEcgzn1uNQGZSncnqSbKAuPYXeNR4UjVykc+QLvXJIa25oDItIm
bpTC1FbVklAaA20CZYtndSnAWOVw1HYMd75er3TILQNZvcCfqmQMi+rxsRfz
K7D4ye1+ZtkY3vebtDg0VGBjVfHi/coxCPE1xvwcrADtx5a1ltoxCAd7XTbZ
WQmB+QnT+I4x5J1WoTdQq4R+EBOhSh6DRTaxtDhWifrmuxPv2MZB1vlvY4Wn
CqkaTOdPPxjHHg7dy4r5NQjY6zSWbzOOQ+VC/zU21cC6csxH3m4czCM2QWZj
NThJymlXdxyHkfcmqYi+Fsl8hhYWbuNgenNeUdC4Fl//JofFhI3jGs/NyIY9
dUjwV5qlKxrHOoK85k/VI6bmxbsBhgnoNr3oE/i2NcedXNX5wDSBhbKD59xy
GmAXbM2hwzKBbIW3dlOVDbika/C2hXMCEuePeHUNNWBmigirEJjA6P1pTxJ7
I6RoV4K+Elv3Pc++YfNsRI2ilbfD3Qk8cf/z2sOqCUvlOo4MRROgtVIpWbzd
Ai51+YdFJRNwCM05zGbTAvmeE5bW5RPwGM7+7/KLFoTMUxk2Vk9gc30+tCWm
BeIH4xUD2iYgYJCu+3q4BdYOC6wM0xPg+4/NI/peK6aEfLPoWSYxd+w8dfrz
NvT55y/ss5jEXolJndN9Heh7rpwdYDWJrl0rXUN/OtBv0/WM0WYS3MOmgx9o
OjGgsbSD5fEkFPWy6i4c68Qg6wk27ueTYJ9VolLa6ksjUe+J4yGTcMsUvnSL
oQuTKU9fKeRNQivJdoRNoxtT0buVqgom4eN8NajzzhYODNunXDyJkRXKQ0nP
tvDDjDDVikm8i12ScPvcjZnT04k3GiexVK/uRL/ejdlCnXrjkUmM3Ys7Hhf/
G4sNZ1if75nCa04tZ236XlCYty2dpp8COXa4/OHRXvy306Z1bv8UeCrZH8Wf
7wUXkRBowDqFM93Sr7XteiGXwLLnHN8UnAVb5Ee7exH0fIGKQnoKNHlXNYxu
9EFM7NvUU+MpOKYkUF4T68fZWsUqCbMpHDByPON5rh/yd0bip+9Ogbufe6FW
pR/aHzhNda2mkBl164zr/X483+3df9ZxCic0vI0j4/rROGjWuuo3hei3u9VS
OQdgFcRbYJ8zhZlFsbu9BwahFnz7zrb8KQxcL4xc5x+EREg0g0/hlv+Hs/Yc
OzWIlTe8xpFlUyhMezWedm0Qbm95/yuvn0LQmiO9c8AgwqN5rzEOT8GMotaZ
mX4IJcm8Y1/ppjGdzi03zjaMuJTb/lL7prGrpZWRU2gYHqnR0kUM0zA3L7lg
SBrGlXRen5YD0yhJaT19RH/rHcrkFV07OI3ub+WZfnHDmMnjfaJwahrF7ikD
1JIjOFDDu29Ibxq6t7/Ga5qOQmqh+a++wTT8Q7Z3pTqMQpPzVdtvw2nkUz0q
5PUdRbj55Ps2s2mwDqjJXsgYBdee9ONV1tOoLH51OoB6DPwqcpdTX04jIyTE
8smnMUg0mL50/jqNC49CUtM2x3H9H+vd9eRpHD0oI8XIPAG7g9XKDmnT+BFa
PvJaaAJZD0SYbLOmcSu326dDawJnGf7FmBZNQ961sf5nxgQuqHsWXmmdhhH7
3sAp60motyStcWxM49lP/uFY6q3z0/2VOooZRF2K6DuwFfdne6Hl59tmEO0q
si2NNI01zqS/YztnYHtZ+ZzJo2nEmSROpO+fgcIFoVdVU9NYWYpvVxKcQQi5
SHi6d0uO7VP6k2szSBbf/97g4Syqp0xST9yYwZ2dTd/CXs5iKY8/eUBrBkFh
rMvTb2ahZBiXeOnWDKrmB42nsmexmBgbzXh3BquZ7kEKVHNQJH30S3KawTvm
iYH6kDn8uRV1vzthBl26ObwVHX+w8IZGwuDLDHT4Nearpv9gue7O+vC3GViw
3o35S/kXmxD1JafPIFIw0jD56F/Q8hR/o8qfAWkl0Hzq6V8c7hv6I9A0g98l
wy09x+YhwKLw80vLDLROt/HdlJ2HkOqXF6LtM/B/+jtim9Y8RAseMp79vRWn
M9PzrpfzICK3n1IZncEUTT7xY2gemvoC9g9XZ3C7g9v4V/wCboZ6n1tZn8Ex
u0a/m8UL0Kuf3eVEQUbilaJovt8LMJb5Ee5OQwbjJj3jbfpFWPMo5rzdS8ZI
kX/0xyeL8O67t1l4iAxumrO2oreW8Jqlvlyen4zSB7e8fz5ZQoCquF+VABlG
MexMvuFLCCtY42k5Tkb7BdrtTG1LiIv0kR2TJKM3WzCtSX0Z+frf3PYokTEq
8N3HXfcfsuvuX+65QsZKsPHsU9d/+E4cpf96lYykuUXNP4n/kMQRG6F8g4zV
Cv1bxmv/EN4enuZ9m4zAEROF9pgVhFzUtNcxJsNzo2efYN0K/L8zQchsy/4T
B8EDqytwD/L7VWVOxpce6fHf11bxUPVl/3/2ZOil/GKM3bcGq/zznzodycjs
CfO2OLeG+8KU5gnPyHDV1ZagtFnDbdonywquZMgMrxi+b1+DasWDvR6vybjW
4aP1+us6lCRPtGgGkCHM3efiMLKOi3FT4QLBZJQ9pAy05t4A4WrKXxFOhp9Q
ju73oA0ck9El7YgjQ2P/ytiCzyb4v7Fta/u85W/NgawvdZvg5WqviEvcyocf
v431LgoZljW1a/IpW/m+Hy5Hr0Ihw3hvHxtzOhm/XcT3HrOhkNnbWdM7/J0M
ZimakZOhFDLbsy7dc8sh40ejZJrMMIUM1ZHtJzXyyTiZrG99h45SZj24eJGv
aIs/9OVi4SlKmXkb4nlJORkGscEHrvtQyvSfEA/b1kSGgFm+gKAylUz3+zm9
ppYte7F0KW0uVDLtdN/4YtrJMJl4vV6VRSVTOymYLNtDxh/PGrdA4W0yv7RH
HzL0k8Hro/uQwWKbTGnlxzMDg2R0lM1RSqRsk8n5xF3uMk6GeYweb8sFapks
5t/eV6fImLrsbkHzhlomzS1c7SB5q54e+Upbz1LLfJ2/wTI3R8aFJddGGnUa
mQRDpp6CeTJUW7yXkwtpZGIbG2P8lshb08O7B6bntstEnvO7o7+yVS9zZsyN
XdtlIpKVT4isb9XL0JjrYPwOmY//j//vN9E+mf8Bo2/VwQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwtWnk018/3lrIkpWihrCWKRCWVvF/PW0UUJRQqIUskQihbIbvIFlk+spNk
D9n3JbLv+77zVpaK6Od3znf+mDnPmXvn3pkzz3nmnjM8D58q6lJTUVEVb3b/
P7opndybxKEBqv+1W9o1OVqBWvBfLriSn90mId54JtWPTQfqyc8oI+n1EkdI
4fFlYXqgbtLX0fdrlmBMpP+wxGUAjuv6bo/utEos7X8WeDTaEIt0K+djdZMk
+l73ed3hM8aRC/pW8kpjEtq/o0vLlE0QdvMY48kDoxIdJ9WI+4GmCLB5vodT
fUFCTndX7lKHGZRo3rQ5hK9KFIeWnfViM4eETE/2Yhs1SbT5RdrRexagDeBk
yL7GQPpIf1KoMMwSktz3NEMkmEmcGEm40/8ce0j3jnkUsJH8LN7zUrisIHzT
kf90LTeJNkk+wlXLGlwMg15SvXwk62Fqdu5oGywYMOd+pjpJmmfNCcoZtcWe
3enVnflnSNo3jVhu8b2Ed3qhkOmRC6RO58Nvpx69wsni1FITKjKJr9+QpkTZ
HnfE0jIEBa+QNK2kL3st2+M1N5Wgg5UsKWQvj4NaoAPOrPYUPw6+SWpNWSs8
es4Rs2ZUizMWSqRd19v//uhwRDZH60u7IRWSzHiqeOGL11gXPhMRsFed9NrB
84UHmxP23jmoI/hei1TIrpd1J9cJ/n8s41oP6pJ+Z5OXDt9zxr9zhc/LpA1I
p5UOnaasOUMokFGO/pAx6cn88tO8MBeoNt3w8GkwJcW5N352Jbli+dT2vOOr
5qRB3k8zSv2uyCKkLp2KfUE6WOx8nPuVGy62sedur7YlKd/TfDTL5Y6K6NsO
oiX2JO8V8dicYncY5PCzdhm+JlX77htx0vLABoNB7G8TFxK10AL3LWpPUJ3Y
cZCzy51Eqv72gCPaE6I91Zy8n71IL7Rjw6Yuv8H01XOC9n98SOkbr7q/jL7B
xeP3j48+8CfNBt9ldXT2wqkLBrF7dgSS+M6evXODzxsG/LuFOamDSZqNTAEH
q7whzmHCoiUXRgo1nG4af/QWulIKtD9+fCAZvh52VdvmgyCHO+K71iNJ9E0N
cUXKPjCWEtX2EIshxXIWVByN9cH6IzEZkY9xpEtPEkc9l32g4ZbbR1b7SBr4
GrT1p5QvakdlzU/IJZFs6ZwPqwb6ovnlTfcF1xQS220zycJxX3TxPs6YcE0j
ZUVpaPKe80PVIS+OaosMktKC3CsPVz9EyGhoxL79QlogiYcvdPhh/ur9CI2u
bJKXJ3/BnWP+ONIg+oP3Ti5JoGtvb/4Lf/h+5HrfQV9A0jGnsLmzBSB2bNfK
dZ8S0pmtftbpJgGIPtKad8WojETtJ9rTUxWAkjHPd47PKkiN3B0XabjeIbOR
i2sjtor0IcUq7KTlOxgYR22E0H0jGRPs6yrf3+FM3YfixtA6ksT3QnUH3kDM
dLu33dZtIHVPb+VqbQ5E8/2yqoSWZlKCVdyr9eNB0LzzSNzBv5X0nF52kM8h
CK2yDI2WFu0k6aAZskJnEPpSO/2zbDpJe/m8I62E34OatZTrUkI3aSRThDra
5T0a1oXltNZ7SemXWx7W9b2HHIv2ZU27AdJNLVZerjfB0PsmfY3baZjEuZDr
JDMSDB/qN8e3M46SZl+qj5mKh2DmAYNQRPIYKW8nlXSobwgKhUv3XTGaIHmE
RcWVT4aA/95peRfZKZKqoBTdPEJRRfNXuObKDIk/d+LRgaBQ3EhatW3RnCOV
d5w4/lgqDJ2VBfz9VD9I/noN7v5hYdiz0797p9RP0sNl0+n8xTBs8bJZOPLf
Iukfc/Ynpqj/cJ46TLn+zQqpPlKN8cKf/1CWKspjyfebFCby98lDhXBs1zZx
Yej8QxK/IXnyy0Y4RC3T/F66rpPo+0a8+29/AFsaaS3L9R+pw9CFQvf5A8x0
9OMkm6mI3HJd1c9CERCpOz3jyL6VOMyYTX9JLQJqIc0bGWrbCHcl+q/tThG4
e/xdfGc8DaE6nMhG1RuBICnvrcNW9ETR8b81AXSR+FNQO3j133aCz1Te+viZ
SCSuRep/fL+DWP5H6Vb0iMTltT1vvRiYiPtXJT0nvkQiRbfE7aHZbqLc2++i
7VAk8jrzKoQM9xB+HGfDYs9HQexwteYHBxZiVcdFTlwnCiF2X45cjNhLaCV1
/K1/GwXuPwzDj+v2ESIXrdV/j0fhjvcyQ/BNViLIsXanF3M0fiV7pcfGsxEb
NeyFPEQ0Pnx9EPKI6RDxXbWI8/q7aLjFPPBQ3c1JiEbsbhgojkbnOSXr9EQu
ImxC65X5bDQqDs51+HziJh5bbhv873IMUuTPpD40P0zQB8hGLvyIQalC6jjF
no9YOz+0FnkwFnsPChWqv+En5vte3FG6HAuePpVRpqhjRAt/wo6sgFiwjoTM
OM8JEJV10HtUEAvmeEcJypETRI5pRzHreCzEOmMzJ3SFiPA8Wkubc3F4tvw0
Y5lWhPDVDG88oRmHqPf3397OFSGcaMQE+93icGn8ePdp81OEwU3dQXJ3HM6+
OH2Z9+9pQnSk7BqtXTxKbh4L0XwoRvC73YvNjo0Hm6A1B8fNc8RBocV/+vXx
OMd2ovvn5fPEP8vDX2q5EvDD51HAN2lx4uehXCY7mQR4lBhzSt6+SIwW33p8
0jQB+x0L4nKeSBDfGBy4fEsT4DNT//lDNkEUpLBaX5pJQMAzcozXDIhU5dTW
RZaP2OM3GpsXQCbehQ+439H9CN796Zq8w5KE5mli6RB9Iiifzy58KbxCKHW0
3fgukojj35JF1Z2kCGlbo48v1RIRkBPYza4gTQhWhj0YSkxE2/zNQrvVq8SK
2lp1nPwn7PvTIMn74ToxteF3RNXyEyLjY6lGg+WI3miBl9s/fIIyqTV3S5g8
UTKndubJwidcXb/AxJB9k3jjkPPfKf8kpG4yOYFPkXjFp/B7OC8JjAqmNVTl
ioRZ7YRiwGgSnga6k8p1lQiVfQfof539jGfpYl4LWcrE4Y8WZvmdnyFwkvlN
gZ8KsffGzu9GW5LR8VbywNU7qgTdYgw/l0Ay7v5U1NnDpUbMSrT2OtgkY7JV
z7q3+C6R3Xj66lXOFMRraU94yTwgvKdmZU5Ip2Bgl2HGO1ENQo86/toe4xSU
sUTlybJoEvtFD93oKUiBLwtVi8UuLSKv1iEx+2Qq/jXRm14R1Cb4Ox8IJl5K
RXTwSnF3rjbhP3oxKexOKjz7Zo3m5HUIw/Xlzw4vU9Ho/u1v3Utd4pDw47Tr
9anQTTyvob9Tn3C5ePU0MZwKd7LA9+ZcfeLnVd4MkZVUOLUspF17YkB80+zP
3MeZhpKg5rzUnseEtZ9izoBRGg4Ls1a/njcixsOFLzQ7pEHjn3GXS6ExofiJ
Mbf8XRqyVVW+XvB/SgiUV+Z9LEjDu6GkAsdYE6J7Wbzo2c505Au2a96yMSOk
qVnJejzpkH8oLiDzy4xI37VcrHo2HdpqC3w/LJ4RHvwppST1dFyiY/zhbmNO
iKsdqaT7nI5KjwM5wh8tiThdqqurxelws8p9ulviOcFs1lc125oO7/Na4XTN
z4lpj6Capr/psGhsNzOmsyKC83d8D5XLQO0Qe21osA2xrWZS3lszAzbXmX2T
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
x2KxFjCvS85f5JJAbadKwS7vFjBwkqd8bwKO3RP7Hvu3wNbTpZLVCTjf+9y4
4n0Lzp860DaVA8QMBHHZRrcgpzVi/sseMmzHOxymclrAQxvg8teODKElFeny
kRb0bIhIlapL4i2TaoPVhVakZGUVPr54GdJ7JvnbiFa0fj+oGH/3Mv4yv7AX
udIKSkV0/C7ry9Df//7UxI1W+LGcVnvw9TLIHJ3+yjqt6DP7wUUnfgU/BFRV
hd+24kBpwoGPl6WgJK06NDraiuhMI39vq6vIZTnVMDLVunkfT7huC7uKw0Pb
C4bnW/GR2/Z4bOFV/LTJez/4uxXKnyL5H22TgU8ap0IvYxsMmmyaf/rKoI59
rLBFtA33lk6G3vwiiyuLpmGlTm3Ina0SvM8ph6Tiax4l7m3gGVX89lJaDize
R14Ue7chZ33tW5OxHIaPtSkVvm/DT5W29O3FcrB/cH5HblIb9v69oFepI4+C
mg2rtNY2qKtI8odn34BYhKdKBG87tKve5TOXKiC15JXVDoF2eFowhSr1KEBw
5FmopXA7xG9mxmYuKYCb7/6AnHg77KpbKzv4b2FH0olHf26246gp68/Yt7cw
mP3dUtGmHdYpE6z2uorwbGAK3NbcDi6WTpYjgsqg/bE152lHO2hCPgh9llGG
PfPvru7ezXhGOuP39JRheXuQI21iM56DUC1/lDI0e1Jj1dfb8WnQw8nu0G2I
Tdz6knWsA4Lez0Qv7buDwQ3/Vv1Xm7iQdedlPlUwzjZ6PnfqgNVl7T8a0qo4
37Xzsot7B+5JXT8QqacKnwzXtGj/DlTr33nqE68Ksr6Nd398B4IykmX5BdUQ
2fRQRrmxA2ZV9lVKF+7iYcypfPB0onOV/Xa42X14+xo/u8HXiXnud7+dgu4j
9+UnAXXBTvhxcF8MyL8PZrWjwdZnO2FEI3ZaiE4dZTvZLL/IdmLkCjWVfLg6
eJ9TiQiadULL1PeMbusDjMk2RO8v60SKmKvi61RN8Hryv/Wt7oRYem334ypN
6NS9smas74T241pWo35NDN8QuUXd1Qn/B5McpYxa6Ffy3Zib70QvU9CxtMda
6FRXUqs42AUHtTadXMGH+GbascvcrAvXR9KndMu0sT1DeHX+eReWTbPYO/u0
IbPkOmZg14XDa55G+r+1UWV5Pl/DrQt0Zs96RoR0UG4TbHA9vAvt3uG7ZUN0
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
        "]], 
       LineBox[{{0.0011020705386914687`, 0.}, {0.001226810407675648, 
        1.5990676405512596`*^-16}, {0.0015335079075537439`, 
        2.7033961215949474`*^-16}, {0.00168229600187315, 0.}}], 
       LineBox[{{0.00027669545963360573`, 0.}, {0.000306717908041361, 
        4.0400493699835034`*^-16}, {0.00048762328543948326`, 0.}}]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
WPdg0Ot6xc0pUhG7H6VyUux7//svRCbyf+aBkx0=
        "]], 
       LineBox[{{0.04570363064360456, 0.}, {0.04587573683415372, 
        2.1615667439444934`*^-16}, {0.046186198172805164`, 
        3.0528760923980715`*^-16}, {0.04649665951145661, 
        2.138510196799066*^-16}, {0.0466124169833152, 0.}}], 
       LineBox[{{0.007282188146246043, 0.}, {0.007360760405237562, 
        1.3863047585668067`*^-16}, {0.007437217374578882, 0.}}], 
       LineBox[{{0.0012042115634772845`, 0.}, {0.001226810407675648, 
        8.086222904183072*^-17}, {0.0012580151260600011`, 0.}}], 
       LineBox[{{0.04379859109804302, 0.}, {0.04401296880224506, 
        5.349057193469818*^-16}, {0.0443234301408965, 
        7.157230169927427*^-17}, {0.044633891479547945`, 
        1.463611318713141*^-15}, {0.04489362312980178, 0.}}], 
       LineBox[{{0.04140902220389179, 0.}, {0.041529278093033514`, 
        4.2877642992607465`*^-16}, {0.04170710131365401, 0.}}], 
       LineBox[{{0.00541570468802874, 0.}, {0.005520575405968988, 
        1.9166561162528316`*^-16}, {0.005621124246597809, 0.}}], 
       LineBox[{{0.04759315535628274, 0.}, {0.047738504866062376`, 
        4.2598122189499826`*^-16}, {0.04804896620471382, 
        7.995904607678475*^-16}, {0.04832026229602157, 0.}}]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Divergence Not Removed\"", TraditionalForm], 
     PlotRange -> {{0., 0.9999999795918367}, {0, 4}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), 0\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), 1\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), 2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), 3\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), 4\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), 10\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8045123372802935`*^9, 3.8045145204638624`*^9, 
  3.804515150414144*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 1\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 3\)]\)\>\"", ",", 
      RowBox[{"Re", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".1"}], "}"}], ",", 
           RowBox[{"NpMinus2", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".1"}], "}"}], ",", 
           RowBox[{"NpMinus2", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".1"}], "}"}], ",", 
           RowBox[{"NpMinus2", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".5"}], "}"}], ",", 
           RowBox[{"NpMinus2", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".5"}], "}"}], ",", 
           RowBox[{"NpMinus2", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".5"}], "}"}], ",", 
           RowBox[{"NpMinus2", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9"}], "}"}], ",", 
           RowBox[{"NpMinus2", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9"}], "}"}], ",", 
           RowBox[{"NpMinus2", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9"}], "}"}], ",", 
           RowBox[{"NpMinus2", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".999"}], "}"}], ",", 
           RowBox[{"NpMinus2", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".999"}], "}"}], ",", 
           RowBox[{"NpMinus2", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".999"}], "}"}], ",", 
           RowBox[{"NpMinus2", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9999"}], "}"}], ",", 
           RowBox[{"NpMinus2", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9999"}], "}"}], ",", 
           RowBox[{"NpMinus2", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9999"}], "}"}], ",", 
           RowBox[{"NpMinus2", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}]}], "}"}], "]"}]}], "}"}], 
    "]"}], ",", "6"}], "]"}]], "Input",
 CellChangeTimes->{{3.804513860140776*^9, 3.8045138775126495`*^9}, {
  3.804513914375434*^9, 3.8045139180740023`*^9}, {3.8045140135493803`*^9, 
  3.804514026582283*^9}, {3.804514070136856*^9, 3.804514093356305*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), 1\\)]\\)\"\>", 
     "0.00013180608133763716`", "0.0197906331214787`", "0.2339287258807105`", 
     "0.7283211110594736`", "0.7870014344058355`"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), 2\\)]\\)\"\>", 
     "0.000026364654503325367`", "0.019920819624362575`", 
     "0.45129955287350393`", "1.7367263449261792`", "1.8975946262100905`"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), 3\\)]\\)\"\>", 
     "4.001058585198774`*^-6", "0.014886413836774009`", "0.6086632291563545`",
      "2.7878407573091004`", "3.0729565455118215`"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.8045137019376183`*^9, 3.8045139205257244`*^9, 
  3.804514028731286*^9, 3.8045140955202923`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2NP", "[", 
       RowBox[{"e", ",", "0"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2NP", "[", 
       RowBox[{"e", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2NP", "[", 
       RowBox[{"e", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2NP", "[", 
       RowBox[{"e", ",", "3"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2NP", "[", 
       RowBox[{"e", ",", "4"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2NP", "[", 
       RowBox[{"e", ",", "10"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), \
0\)]\)(1-\!\(\*SuperscriptBox[\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \
\(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 1\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 2\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 3\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 4\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), \
10\)]\)(1-\!\(\*SuperscriptBox[\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \
\(3/2\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Divergence Removed?\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.1"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8045112402540064`*^9, 3.8045112711862946`*^9}, {
  3.8045145729361563`*^9, 3.804514575057189*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.000024185766477748702`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(-2.49366499671666`*^-16\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.5939906358846744`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045123391055984`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045123391925187`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({4.503669942224799`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.734723475976807`*^-17\\)\[NoBreak] and \
\[NoBreak]\\!\\(3.820404467573641`*^-16\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804512339271443*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318519448951320385675257047976413268819406710008479421958327293`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.7695567233744214`*^-13 + \\(\\(4.163336342344337`*^-17\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.367876784470429`*^-12\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804512339569166*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804512339653097*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.80451234013564*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804512340301486*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804512340388409*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
rqeOU8+hGvoxq00keJ95YDoWRkdCD5jvp7aQoKA9pFPLoKPZB+PRnttJyKs4
YZ3nYYNe14od/iVKQlmCr2jjlDVqqKO/iRAnoWMnTZ+bbo1y6pnha3eToLOr
ar+1AB2FPBzfl76HhDR/pf4pYRtk90jsldheEjYWdu2zHee8bzfQg8v2k3DT
49GCLGmN9iDmnmOHSMhmqsozXlmj1Y3jA01HSDj55ZEfM9sGUY1iAarHOPXF
+Bt+KbVG/U30XYOyHD/C3Jwn/KzQ/WZmn7kcCbbfxr0OC1mjlJZx30mMhIdN
lvMZvhbIr1VM1OM0p777fJFW/ubItI3es3CGhP4lAyH1+uYIa2d6hSmSsPLX
iZOxryzQjo7xLWtUSHi+fqG88q054u4U60xRI2F55OWLQj1GaKKT7r5Dg4QL
IvOm38+ZoK4upnCJFglDhlqxJQsmqKR7vOWILgljcXE8Ls5GKPaxmAvSJ+Gz
VOcypwoD5N5DF1I2IsGhSKvTKd4E6fYyUb8JCcmKN3cUKekimSfjDqbmJETn
WB9/N6eLNj4VE5iwJEHShute9agukv3x4ru1DQkp7Tt1kl20kfHWqFejtiQs
vcV+L2GgjC4pnnhk6kDCs4G4/dotKijDlZXzyokEV0cP/QtLFNCj5OxQfRcS
VMfSau65HkVvkZbDc1cSjul47PY1W4F+f1qipulBAs/iX91j0ofRNv7qfb2e
JBC+T84837gCg2MO61QukgB6+yvWzW7ErC2Ff7T7kjB3MVbI6sVuLCSyZ1je
n4RX8h3bVnUewpjlAQ2NARxeR7a+/pWjgLW93J8rd4WErx9/pIa8OIdN/BkL
qwshwSzb3TfBXwdbtjvJ8Wg4CfesS4fe1BtgElqK56oiSeAvjBmxtDDDlH3n
9h+IISHLma5XEGKFOd0qFiy7RgLXtmOkjLU1FtNlNisZR8Lu3pNPaFttsRL2
mpHCeBJMaKJnnE86Yr0bm5FYEgmPkjqeJgQ5YQR45t1KJuHjQG604glXbH/8
S6f0DBJGpP6M3jx0AdOqi1bfkE2Cj7BkRUCAF+YxdvJg0i0OrwplXCfXeGMJ
K8j/BJiceXl5I3dCyxerOnhrLraABIOX++WuhPthg8Y6b1be5vgpF+OeYXUJ
mwle2hRZTAK2WdPO5WoAdvS5Y2RwOQlNa3zaltwIxgwXRJx/V5LwR/lcjF16
COYj+kTD/z4Jry2flh/5HoqlqgYdmqsh4cSdvaX8xe6NdRcOrveuI2Hd7Mg+
OVYE9jp9fP7rQxI+EUrXfKOjsMWWm29dEQm0CqMBsQsx2CnBhXzHVo4/ywu3
YrWxmMXJ0qiJdhJEVL9Xa1+Pw4LoFi42XSTs6VhlsZI3Hrt1da3Wu8ck/MxZ
2FMvEYI1V7UcNnvC4ZGZcvDSmVDsw4jXhuE+jv8X0gpSj4Rh3EslFvWfc+Yv
PUZ7+6NwTEHvaovmSxImHZ5bb3KLwuwvnyrsHSbh4HMucjQgBovMp6JV3nD6
KSgpzBt0Fev+rqt9Zowzn3UaW7JarmNfNi+TaRonobd+TTNfTRzGp1C78dQn
Eq6JCp5QuBuPqd/c/P4oTsKa7MJuJWYi5trwtLWK4PTv+/3sFqUkLG7iStEB
NglPg69neEffxCpWH75aNk1CUq6U9u2pZKxfZsJ1zwwJKoc/p179nYJNm6fo
FM2SUNj15Oji61RMMELl6M4Fzvn+73f47qJw7k+On7+bJfrUz2J6Q2W/tvwh
ISogyNfjnCIWdJux+IyLgjb/8x0Uz1nszqW986FLKUjpXD9/REoVGzhH/Di6
nAIrYUM974dnsF9by75PraCgES2fMkw+g0l8dZnOXEWByPDGZ5oeZzCdVmm2
Jj8FdTM5DiMMNSzgJotYso6CII+qqQ9y6liRQyle/R8FB3o9YyKXaGP9si5T
jhso0BZ5kWH+XBn7ySc9uUmEAs0YqbiKaA1MYhT/+HQzBS61XMsHjc5h2hUl
H4K3UZCrurxcaK0G5h/i/P6IKAWXlW0//Dl2FivUkxqd3EnBmx2ROaxATax/
Fz6SLkHBd1M9btMefWxxrnhYfQ8F/F/UQj1+a2DiPedf/pWmgDeOedQ+RRfT
ytrzomo/BZ7hk7sD3XQxf7cvz+0PUZDfUVDnTBlgBaeLnwnLUPDi2vivtkYD
rE/w/NPeYxR0r6ypk7thgC1MSPYGnaDgwcOwxtYr6ph47VT3oVMU3Nwkeye7
TgXTjLnTOUGjwDr4lBRNXg/zM3NqT5Wn4JCbl9yVOEMsf59kq5oCBXEi8adk
n5hgfX8/N/1WosDAJeK6/qgRNv/8NqpUpeD8wcX40SIjTKzA8ZGtOgWDQ4Ou
1zyMMA2f3fUbtChQua945fU1U8xP5fODxzoUXO/t3J/08CxibrpdHaBPgUKp
/zOvPkP0hHCoOmBEwfYEHomIn/porlGictyEgk0yz7YH/jJCYgmTd5PNOXzU
dtS/DzNH6rZFpSpWFOitvycu/NwC+Rx1KP5pQ0HM3ZztbrrWKI9X4na5HQX+
vLw/6vc6oyevPxXYOFJwdJFR4WBij2ZLC5lCzhSotQbVjrs6ox1B9rldDAqi
HghrCJW6oHPau3L83SkwG8x5WirijnzEPmXu86RgQPfjtYzZCyh3piB9zJuC
hkuNanvFTLGeTrvUJF8KMts1Y1RuWWE/0sSTlfwpCF2HL2NrWGE7XCYSFwI4
z9+7mPx30hpTwwriy65QEGbsELhQaol5r7WLswqloGbXbWFLM0vs1oedsYIR
FOjWH9lV2WyD9dz/GNMRxeFF/KTtjLU5NhORH+V3lYLE9T+qltRaY9uMbSOk
r1MQrLfT5fJbG0xVamfYuxsUbN4yUvFxkY55/xoPTkikgGk14dTWScdy+phB
CskUbFzSv7wiyA7rzqUHzKVy+JKek3ndYIN99xTzL8ng9Kui/0rKajtsm+K4
r0U2Z79wWZaGpgOmspF5USCXglv3F+dmXthhnl9svNqYFKj6PH4l98wey34k
esGnkILA9EPqy+ZtsO7rH9z23OHwfQcPab17A32zymO8LaHgSbrObIxtPPqR
uuyozV0K8Kw/eufZ8Wj+2fnfnyo4PJ7VUv+7MhH94u3rcK6i4NvYSEFTpSf2
Fw7Hsasp2BK8wnLPKi+M2y/F0LuWw0/X5O9FJU9seeXitoV6jl8NmZ43cjyx
lVOWnwMbKHg21Fi7neaBrd7RVsHdRMEucxdsx2cGttZ4t19UCwXi1X4T/bmu
mGD8tdOr2zn9kZQ7uBJjYOu72SsSOimwyYpzzOlzwoS59J+vf0yB8sPLm886
2WKbZevSM3r/t79P5m6cMce2eWyhb+/j8Mvafa+XZYaJ3QmWKujnzGfgVNLW
SC1s19jEN8lBDk9CHdvv7TyASQqrPro7xOnfgOvsyXXKaK/23bDDwxTYBu3Z
uvhTFx2IXqdeO8Lxpz/NZ8bNER1uvih0apQCZ3Ncp/SqGzo6//pt83sKipbk
rtpW6IVkD9IKFccp4PMpvOskfwnJOTFdeyYoSDBas2ku4wqi5S4/pvWZAvKj
wtapnhAkP+z8Z/ALh1e9O+bitAikIPCs05igYNVN1aLWjVeRisqRG6MUBX+Y
gW2MMiZ2LjjViD5NwY2gY6Ky60KQZt3P7Z+/U2C/QS5kqXoY0v1qNeUyS4G7
dNGaictRyECyvfLrPGf+rKYbfkvEIGNryUsXf1Kw1L54ZCvvQ8wsLVZ+8TcF
SeVL/uotIMyy/+vKK1zs////oK8wGFi6lA29Ser44DZJZH+6PiN6GRuSw1xe
KLTvRk5+W23XrGDDnEJlWdoNHcSoDJFO5GND7XxQhqa6PHKf+vR9wxo27BI1
PbW1VgJ57lBryFzLhmL51AmapSG6aFwevkOQDdtx71HTcG3kFy+oUSjEBvoW
ec5HzjkU0O2zXmojGzA1cZuThoroCteb0XIRNuzbdmq38F8FFCoLRUe2sMHa
Mzw8eEAVRXrku9VtY0O2ac2p8S4dFHOH9zgmygZ3L+Z7k196KHbM5W/LTjbk
nTR/u/2wDroh3N+lJMGG5hPlGS8/a6NEbZn4Xkk2rL36tuTOb12UEp1mrC3N
BobP4BbNYhOU3vxrx9A+Nhzb4H1I0lAXZc1bfzE5yAa9WRTpFmGFcg923Ht3
mA2HWu6eiKi0QflOe/xtj7Ih1fb09mNXbVFR7vUzU8c55w0x6+tcbYOKh6f5
XE+yoctX2sxdxASVCRgOTp9iw6jOsZMzzpzvNZWHmT7AhjqN3OUj+81RVfA2
u5/ybCgbd7zr226DaupC9wYrsEG818nMWM0e1X2dnOFRZsPKqPW97sVOqEHy
HIpRZYODRnTH9nEX1GRdEcGvznneoHhMrMwRPXzGOPdOkw05sSWWTzA39IAm
ta5chw3MwNhU6WhXdO/u55eB+myI6xRUTEaOqGxLYZaGERtYV28GqkkZoTvX
6PStpmxAj2XtXlvoofzF7ZKkORuG9rVX/vbVQjnnR8kGKzY8C4gJTSmxRBnD
Gfdj6Wxo2mCsJkbYoBRl40vm9mzgTbf0p84eRwkP1sNeJzasGrhk3pivhGJ3
DfL8cv7HY/TN+J5eVzYcTzCry3A0wMKWasZnerDhVoO4QEWvAhbkucrQxYsN
Kn4rs44fkkH+H7o3y/lweFBkJMmmHcEuakd+4LvEBurMWY0HXEcwj6azt0cu
s0Hfu1a+xvkwxti/xLUk6F8+x+zGw/4hbPD9GylKTZhg9NUB86rhbHBMZFms
sd9Js7x8olEkig0p/NfT9WO2NJrgs2FfYtiQudmv6fluLUzfpFq1PpbDh6zE
lRJ+GqbdfWFtzA02XLzZNfBk/hSmfvzAkHEiG2YfihgoTMoh5SIiQzL5X/4z
60us51PZQN7QD7TtPYHRwh0lujPY4NMf6m2WqItOfBcnUrPZwL+UOeXaeBzJ
0MfvOeb+23/w+S3f4/lsOGfWZ9F5wAyTPm2B8Rax4YBEcBRfpwImUbFp6as7
bAiv3BAcPZWCxLYNdxeVcvqd7a4EzffR1uvJcT7lbCg6OG0m7tSIhH/p6ivd
Y0PPO3X3M8tsMCEXgU0bqtnwp/7ai7/bTmNrR56+//SADf4Tf0YeXdLE+FSv
FdbU/6tneZ2KS0QDZ/7mVgfc5jPDuHcvP2TQ9G/9d3LbrHgrGz6vcPNvblRG
8zwhDTPtbHg80DwVLKGEZrxooe1dbHDO/o+qTLVD7PGfyjd72BCmejfwhuBZ
DNepX2P39F+8yWafwSP9//SHAzLpSwf/6bc505aDQ2zocPO9kI08sOE1FeL5
w2xYtl5W9YKkMTYYwMA937BBS5WmJneL877H2lN55h0bhMS3rdTo52vsMf18
UfADG/azDLckvNTGOh4XyI1//Be/WZa+pGryn264vb0r5AvHH/Hegd2f7VDd
htFYHeLf+v2IDF1RNhveyN1bnJVywcpnjISnp9mwosDt+JEyO1Riu/5d8wzn
fhy2eRCf6ooVDgzkx8/9258rH3/eepENfuc0iSx2OMqq1Dhw8DcbOt8P8Xke
K8KqMg4an/lfzY0f/KNWDf8DleaS9g==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV1nc8Vf8fB3CUaEhJZVXISllFiZyXiGRFCCUZISJUFA0hZO91r8wIZUaE
7DKaVrRI1r3XuCrrm/W7v7/O4/n4nHMen/NenyNk43rGjoWJiamNmYnp/1dt
O0pHPdWE+EMT++xaVF0zVnjWZoBXHroPZc8kkqNUdmzsiXjOewLbl36sp5Dr
VV7W3nO+KaaP5c38+ips31Wkj3JnP+I1xmVOR7YZ8rQK0zZq7Ooec8S6Kkur
KTIRHROv/KzFLBH2hHftZrZNhKFtW6V1gjXqQlYbulV3EEqfDhXH8F6Cgqim
/ReyILFXJfVJU4o9Um8csx/IFic25bOnzexxRFimweQ+RVliZsf1BNGsK9gC
89t+CQrED/8f4WfFrmK+fPjv0LpjhO1CVmOTsRvOVcYq8HccJ3qlzQmLBHf0
iwrXl6hqErp2m6tmeq/B6RxLQp6lDlFPblII570BbzHzwmqyASHfeatE9LwH
VK64RraMGxF57NJStSmeeBMoEFOabUrsxlDu2f6beMGb3/ji43kixiNJhL7H
C7YayuvZFK2Idc/00oOsvaHo2rrP640N4f2LRUAw6zYEdRS/6ifYEVM8lYmV
w3dQla4+9Tj/MmF72mWbodg9eAWp6yWtcyb6AoQjqQ4+GGzY2adR4EqI9V9h
bTC+j7ADPsTIJ3fCyktTPXz2PjyU7V0z/l4nSNxCvuYJvvDPmv9jp+pJdBct
1ooe8cPElUahhspbxGadz0u/e/1wgK3J4rjlbcLfN/RWCO8DcJ7Yxu9Bvk/U
Cti/OFv1AC8sF6sTD/sRCxWqM8LnA1ByP9/HcdyfcJ6ada1OCUSE2rPZw9lB
RE7wp4IglSA43Rz+Xv80mPgp8nTcqD8ImsXpFjs+hhLG560cJvYEIy6vUyX9
SBQRMaeUXVkfjLXZMmkdntFEa/T2oQfWIUjrE5+eex1DqLS2W+7KCsUmKVx7
Gh9P3LLNTqGqh+HxkGou885EonTF52v5cBgu3ef98iUviRBTUDirLxYBvbvi
AqmsKYTVJ844vpYIhGeHihl+fESQr9A6Rh0ikXjFlIf7WRrB3vExp844Cpxp
dq/3f8ogsne/ei2azXDAb6/T3zMJNef84dDZKPDT6Osb/2QRd9gChM0SonHl
8WriOeQQvCbXjteORkPskhTLsMcT4kXmRSuRIzF4sjdlt39FLjGtopQ63RuD
YP3ao20WT4lLN+i8wbxxOGXGLHKNVEwcWhPjXeoWB0Obk27bPEsIlhj5b99a
4lDiUWQqYl5KpBV5pUh7xqPX4njAtsNlxFVCYNn0fTxMu2Q45WTLiWPvay/4
iiQgU2im5tjBF8RX2po93Z0JWHNtF/Mj/Uoi1yvHZ3lfIh6qSnXLOr4kbrKf
+inmmwh7xR51ubAqglssIsNLJgldJuKX58ZriNPWPCJ7wpJx9MM+rTUbG4jd
01UPtIaSQbNS3lxV3UBM3Lsw4q5EwlJApb+oeyMRkpKZ00whgSRalWlOayKa
ew/sc9JIweSxoUfTO1uIWPuPwbEpKWCrt/uwbrqFsJl1p9X8TQHPhb3jp9+3
EqtcFU85Mx9h3FNl9WViO6Gkf1y6fCUVeeTy3zkuHwj2H0MR/SZpGJAJmuZw
/0j0XgmksxWkYTGN7T8ulU9EVbOdWYFUOrzpJ1a69DsIs1/5vEzf08Ed1n7v
c3wXUbdvqS2OLQM7T7y+LinTTYi563nvO5SBYwerB+LfdhOzq/SvZ0IyMLFZ
I6qT4zMRs0shJVsxE2GaZVfqKvuIf5cCdZUuZUIqvEju6ZUvhPWz3qUPkZnI
f9CoOyn0lZBV9r6wMJoJ9Z52amzSN+K9Wd1unfgspHSL+GgW9RPscacypn8/
hm8/07eI5l/EouLgYgZfNmZb8iUKDg4RUz9unTVSz0aff6ypZ+YQ0SWeu/FF
XDYC7mXt2BE0TKRWr/O8fSQHt08KEMOXRgn5oSbtdXefoPze/Vf+HjRC/OH5
7IrsJ6hr5595v0oj+KT+rl7+8ASyj35MzIaOE6uewuVv9+TCtcDr83jeBNG+
wXdPdGMuVIUrz7UuTRFWB4kZfvZ8yHPFsAQw/SGMenv038vm41Cplu1Zkz+E
5h2XvHvm+RhirV2SefqH2P8mxXIwPx/rvI4fYDn3l5gzX2zN0XsK7ukrFfrN
M0SYb+UjudhnYK9g+U19N0/4iBks/Kp+huH6nVpLBxeIa2/HzsQNPwPz2BFu
WdICYbp9J/u8QgGWk9LPsjj/RwjneVyr6StAZ0FfyN1di0TFp4MnT+4uwqtN
ib7SL1eICOqE1gHNIiRsdogulVkl7FmeaG+9WgRx97szl56sEjvk+fW/vSrC
dmYvPSk9JlS/9c2vkC5G1oY8M/OTzOCXcSrR+VCMg23adBnzNQhUPnmQ+FWM
i5/FZo+lrsGfkyLPZeeKwe0xRpsYWoN2q/6y7btLoGMQGq/ovhbeMWcqB1xK
8EfXwjU2lhVfZ5XqrnOUYvZDF7E4zwZNFh5Ve6FSNLkdlo48yY7SzbP1Zgql
sHRyaepIZEeIeFGjyoVS6P/zabdTWg8l871v2ApKMXnuQPmPoA1Irtn4nqz7
HMf+xW8tPsEBM//vX5tCy3CRV2B0Pn0rtvwUO+CQUQbt+dt31X5sRdsx97sb
KsogkZEW4rOdC0pzrIKGv8rQVD3aYRbEBX5HGbt+xXKcKeyYjnPbhn59P/rC
SDkunlAVIZlvxyU+ibXSqhX44MfOtjGYFwI3r5l0mFTgmO7z7yc+8aKnqybn
xpUKpNhTapl5+KAZbniqOqEC1P26t9bl8UGc6XaE1mQF9tC/2Wt18IM28p7H
llSJrLsvVbYp74ZryXWppJmXjPM5cfhGtRCmjg12tbFXwf7ac7GaYSE4t+p7
LwpUYVRYpVJtszAuD+xrsdSogtJMoN9mG2FYcfy0Ek2ogpPGQn32pr0wcNSN
Kz1SjcuJUkcWXUQgKyS6+M67BiLq8gf8bcRR+CwmYyWiBtWZ51044sRxQJFJ
SzarBsZX91d+fy0OidPf4mLf1uCkt6SgjqQEBO9GS58TeIWPtlQp5zkJbP2y
bD326hVYtL+0jZIl8Sfqcyszcx0Euon6BQFp1DiXYHhHHTLtFeYvWUgjSCvs
xZsDdVjJH+yXSJGGAJPa41CzOqhcNMisFJCBhmuBz/biOuh6O3OtbpHFOzE1
cpxMPchhm8TzdstBkJX3TG5/PToyddSMLA6B9XpgeDK1HtScRxVVvodA+/m3
NWSmHpc1CD/DJ4dQXvMBLhsaUJB9O4Dj7yFo33ggdfBwA3Y/FNZoDJPHjSE6
e014A56PpKceblNAa8Obuo/HGhnzcv+e9Q6KyHm3NBx+shFvE9a5NkcrIqD3
4AbdM414aSqQVVyjCLXJVONWh0YIWuzdJbDtKGp4blLrYxpxfYMvv1rjURS7
im8rpTSiTA8nfu5TRtKuh/ZxcU2I+hfIxb2HgKPXKQ7ziWZYOdOcLhipIZ9/
6wXLuWZs3viU1dxFDROv+p7ZMr2G3N3Tkc5BarjKcln3KvdrpHfnxH+rVsON
0MBQ/2OvIbpU4P1VVB0+j5rWF4a9xmOKwortijriG1TWrZF6A4sVaQFKgwYa
1h9cfebSgnqWLPZXcacgYSxbEXKrBUe/zcxVVJxCVKq062X/FngMDjV2fD0F
q0P7B/YmtyDSfkjQRkgbKxYidaTmFgzUxsrNF2lDqXiHz0P+Vlz5fMBrqVMH
ZWcXV2zbWuGuKW/RIKuPnKzmFT7RdrzZcnKmLccQbgHGg5BpR3dkR+dAlSGU
HYabLh1tx6oaYbj2oyE+Sa4NLtRrh1O5BeE1b4j/StS3qXm2g/1vst62U2eg
W98o7tjSjkelMV820s/g7/d6gwrHt7CJOL9tv6YxVHe8yjQqfIeHEVx6q0Km
kGr5XvlG8iM4lpQ7fa9fQLeq0VTe1Cc84PfJ1HxhA+cNVzp7ZDshF0uJLf5n
j7d9pq82R3ShMMmpm6LoDCNNs8Hh4W6UvQjq4WN2x+H0UNN0kc+wyPBMfLV8
HT9XYrsv+/RCxcTgR1HoTYyc+pi1o6kPBH/k0Gvx2yhOHvDqEPoKdwrbvIOV
D7Ifrgne5/0NjpJSfTuovpi1PUezr/6O39Lf3y7xP8DGE4FnSnb246wRm6NF
aiDubBnZNGgxAHOPQzsbtgRjU+1+pl69nxi8FXJ2NDQUKp6nl5v+/YTzn0bz
E6cjkPI4LGtvyiD6zVTbXG5GwdJE/v16nV9IOV2sMzISjfIeu9jauV/wProV
ozqxOPqumGU0YQiB/I+P9MXGQVDDfjb2xDCatSe4I8fjoSCvEF02OgzPoIMS
KfyJGPgT3pYVMIJ4LeWb3LJJmDhkGMB7cBSR8S+CU48loy1nWOyR/CiCuMtP
qqomI4f3VqvgkVEoR959PaCeDKvV1I0Sx0ZxiDK8sFMnGV3tE9GHNRn3b5De
4GKejCrrh6lG50ZxoERPKtcjGcGRdRXhfqO4KeC81uRZMuxZjMy3BozC4B0/
+9OiZKh5jP6LCxpFwNo/4SulyVg6x0GkhI0ieWQ/T+rLZLiJnW/OTxjFf7PW
9No3yTB7NfepJX8UvBubaAE/kyE2LkVj7hqFPmXfMh8XCZvYP2ZX94xiJzPX
OsvtJPwVcbP26BvFr26Vnkc8JNRblvZRfozCbairetseEs51Hm75SBnFsO34
xb79JES8xONHK6OItussajxBwmyQoeVRyTFcyyhLYL9BwvfHf3j/HhjD9Phu
xQFPEhobYnueyYxB29/2VKkX4/nFHl1BhTF8srUv1vMhQcL1nDKb6hjmJO+r
mYeQYHHWlqfHZAzPj39Z25BGQrOIR6eb7xgUL+FIXQsJ/k+qzJb8xxBqtk17
ro0ENUmmgaDAMegNkv7se0dCg0zoeGroGMbqdRcDP5FQq5Sx9n38GFjv1Ofu
/EJChcH7w/vyx7B/i+6FaCoJnl1cr8qejUE++05B1DgJh8+aqasWjaHkkYBL
2CQJZeeHTpuWjeGH35Ks128Siu3/uxxQO4bJdPUg8f9IyL8jSh7sHEOaW6/K
MBsZjqtOQi49Yyh8mnQ7bz0ZEn7FTxZ6x3DS/g3zlY1k5AQpl3H+GMNCoc+P
X5vJyIoxfK8yNgaWrpGw7O1kpOTeXU1eHENTh1/KDWEyzu9vChBdGcOiquDh
5b1k8BWybyphooDVW3zaV5SM5OexPK2sFHy2Nqr2kSAjoTZPbo6TgiAFbgdd
aTIiu3tsz4hQ4Ld+tE/8KBlh98JFOsQoEFQ9891JiYwQCY2R0/soUD9it5qn
TEbAnTJ7PWkKHrLVkwQIMm6LxDpqKVJw4uzAYKcaGbc+aEu2KFFQe29X6pw6
GZ63WMY1VCjoOn/VfocGGe7v3J3V1SjgbnPZqn2SDIcbBq6ELgXBnxpCfXXI
uLSbXfaVPgV3km7aBuiSYdNaN61sSIHmkOehAD0yLgjIXDt6loLI0gult06T
YdTM4SFvRYFhLH1E2ogMcL/1lrxBAce6gD895mQcq/VTzvOkoNXESzjpHBlK
l5WWxL0oSMy8K3z2PBkKNXl3Re9RsG3v84evLcjYf+nhfcGHFKwvUstxv8jI
z2bV42khFOzMyOXksiJDrHKeeXc4I14Kr+QLGRba5ODPH0OBml7hky/WZOws
0wjckcL4fscMypItGdyWy5rxqRTEf7kx5n2JDC72cjbuDApunDMLn2GYw0Ik
eGsOY/2d9eF2OzI2rPt+KiqXAh7txaLD9mSwF8du4HxKwd1/9m9SGV6zdk3Y
pmIKjvTp1Vk7kMFUWKUbWkrB+IPYlBqGV0yvcWwoZ8TvlOqmbZfJWGKW/PCw
ggK7axUb7Rj+7+lgBFsVI78nzyeVMjxnknw6sIaCfMfwokWGZ1YNtrDWUXAo
q1Bf1ZEMulF9NEsz432Vx/hqGJ57EuBc8YaCUG2tynmGVxa1Tzq3UfDaPIVN
2okMVoMtwkLvKJDM/Lr2IsObHvcs9XygoEbs8bMQhrctkHpDOihwjkxaLGaY
T9eqFN2MdfezUx0MC6WLhs98puCf023fSYYlZmgOeV8Y+YrLKllzhQwZrWI1
y+8U9Kk63eZm+HCKx65tAxQk2Th+28OwyrTSQssgBQVrlD6IMnziBFPXnWEK
TLquG4gxrJP0ukBujILjNQWWQgyfmQh5OEqlwH30zuwOhs1VDWzJExSYH/fc
ysawVdx2woBOAb38QNFvxn4cKF95WP9QsOhx8O1nhq8eS//7coYCp8c8Ni8Y
9oiy+3B1noI1e13dohi+MyyZt/cfBWnFzX8uMeyvOO3ft0RBzIYnI4cYDgkr
twxfpSArO1NjmRHP6J/eR9VYqDAbVeNsYDhJXpV7fi0VTRJc8GE47SEr/Skb
FdXsfh1HGM753t5mtYGKKv5TTTRG/gpkox5v56BCkrt3SxLDZQ9MfNo5qQhh
Ln0Bhqv7+M75cFGRcdyyZJBRL40HfsrLb6eisOPi8l2GP3U70R7xUfFxv9Pt
bEa99UrIvj6zi4ra4Bs5sgz335lNYxOkYpq7l/sFo14nRO6buItSoR1CKihi
1PPfWxqyYhJUsArMfNrL8L93GzZ+k6TCKCNhXwyjH9g94utPyFKh/JLsfMGG
DM62c+T/DlLRWzZ5uorRPzt2CXoWKlChQ3E4t5Vhkdf5+3mUqTBgzv1cwOjH
49vrE8Y1qEju/s6ezuhXLccA93QtKvQLVxreM/rZ4JW2rokOFbmhHQGzjH63
tOthrjOgYrBTac8hxjzwLqc5x5ynwnrkiby9CRm+64tPnrSkovMGtd/WmIyH
FzyEl6yoYLq/++Z5xjxJYGXqs7On4vbYlI2iIRmlJtvVj7pTUXOgoTGXMZ9i
OH0oddep8NnPJh7CmF/X2ijhmp5UrMmLkrDXJkNOpabP6DYjHj+j5zm0yCgW
sb16NYCKJ/t3XRNgzMfCv8XJWclUjFzlVzmoSEZEAR8kU6hYVhTaUnOYUV8O
D4aLU6lwpZMNVBXIkPpmKlObRcVC5ACH4kEynjWuNPcVMN4vwiI6vJ+M/Gjd
aY5GKl6a79l9YDejvnRexMc1U/FvbMjivAAZTqyCyvwtVDS7+fQ94CNjn9ff
AIl3jHy/WfB6s4OMXCsSv/pnKhy3/+Zcy8moLxmK5i0aFaavzvTYrZCQ9d7/
0S8uGviMw4Lz+0gIk1u0SNtOQ8dvQe3hHsZ5GX9NwIKHhlhOjY4dXSRoXbAm
9+yiYUlp31779yRMTRDJrRI0xDNnXSpoIEFx07+4QoKGsnnNnq+5JAi5uRtf
OU5D1/dYvrRsEjZ0U7ZJnKDh+MLzkfOZJPwg98ZknKJBnG/Xci2ZBL/95VFx
xjTMi8nVSkaQ8F7bLczbiQaamfHfOHcSXhSO6RxxoSGYGpc/4EJCOtfFjTOu
NIRyMucIO5Fw7ateiIsHDcU+XWbRNiTwOO1/aHWfhtNC3kpbjUiwCR7110yg
IejR6LG4gyTMt1jc5mqkQVtO58ij8WTsNtL0aGymQWeX5t2V0WRo9su4Xmuh
4W9oxQfTX8lImGGx7XxHw0d1jgd/+pIhL5SnHdNLg1b/59aW18m45j3LyzVJ
Q7nkiPLUo2RMHIio3MozjkoTlarNWsngrrxZ2sA3Dpklh1xHtWQoq1s/c981
js/cGyVqGP+bIeby6R3C46D85S87KZeMfYFfg6KlxlFYwfpsgZfxvzggZrpV
fRyNh1cdaqlJ+BldN7vl6jiUP77prvFj2E+vKsZtHJMvpR097iRh8Pq3e9zX
x3E5qlVOzDMJv0zm2XhujaOP1/eMm2MShnhl+Pb4jWOoLM0z53QSRjNSCamE
cWjxm7km8iVhvORu0KnacWwZdr/kkZ+IicyNum/rx+GZYSsnncVwbPIWvaZx
xDx/2d5PZtijPNmgdRzcKTUm4uGJmDo6+dS0cxyL7G7XTVwTMd1g8clulLHf
p7Usew8mYq5Dmddv8wROtZrquJQkgMmld/7o1gkUmCTY2OUmYAP79c+/t03A
T9XC0igtAbuJ/Fhr3gncjf7wd0t4AjTyeTYfF5nA8DRdgutyAuL8ZlmYlCZw
w8jYbJ9AAg4dKpq4azcBficJqag78XCLE673qpkAz3BMx41dcTgTb+O4pm4C
Dt/0UiO54qCQkMkV3jCBqqdvetLZ4vAvUdgu/c0E7nWcvp3zOxYBZOENLZ8m
UFJ414J4HQtSprAx98gEmOKtXVKdYtFcLEwp5JhEPVgCtxTGYOd74S3DlpNo
alhrbLozGoqz3X+trCdhw+d5T3VDNMx2BfX+sJ3EaDzXJsHlKJBcxlN7L0/i
wUiCfuOvKOzeXCb19tok7M2TbWMLoiB2WkOnNHASkdOFDx2OR0GhwyHwfuEk
qv02yhc3RcCo59mSwMokXpBd9/JvCsWfixnO3/OnsNAefXF4jR9mE1kVrAum
QOIx2jg34IuFj47LI0VTyJFz/v5ftS9WcTCCXjaF92d2BfVd98UmwaYilrop
mEeWmMz9ug/Rn8N/JLqm0F56muP5XR+YWUl4eSxOwXP9sUfqP7xxPins+L/l
Kfjc3nQ5N8Yblp+m1/sw0dH5ymlu5aQ37FRfkhhHHpjy7N75l3rhmqB2DZmT
jrbHlV+WA28h7OeV1Ya9dIRNrf7VlfZEnVVRwGZdOviVgyOE7rij6qOzTr8+
HVqZLnZBEu54QUhuLTSkg8V3WXW12w3PBLJT9Ezp4KAh5oC0G0h9pOdhNnRs
HVflcm5ygYdB4OAGLzq4Bz1DNqVdhlud+pOvt+nQvmh8WnLJAc7SzC759+gg
KawNrjJ3gM2mOwunHtDRpZ12Sn+HPQxa3TmDI+nwWm0tZU2wxX7VCypsOXQc
8OZujrx6AWJFfGt6c+mw+KJp9YawgPDuvtacp3ToTNoZcm49D56lM8aaJXSk
SMvJateYYV2l1pWAGjoqYkuWRmWNwSK+Ts6kjo7G6jWdktuNsBzfNCfSSMfL
c5brSUuGmLlO+DW30NFUkeV64+lpDMrIJ6/pomOu9x3d6OpJfE/9bdnVQ8eC
f8GbBg8N9HEUiWT10XE9nF4WFKSOD+P7itX6Gd5R+OUyCWg/N+bBNUjHlJy+
yWfWY3jd9lj51xAjnrE6xUfDFVHzZE+LL5UOx2XjcNd/cqjc8SPMcIKO4Ykv
RR7vpfA8gHRGiE5H1NvFgrAFcRTOmPL8/k3HRJIAMXBfGPm22/vrZxj5GLCn
NVL4kN3ZmRU1T8elRJ/d199tRfrxKEerf3TcvJSmw/JuDVKK9WRkl+l4Kmrf
ZtI2QZi8dDBVY/gNC012RbsM/wPe6suJ
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
gfqrBMfycjKu9dhb6w9SsLLBtjqnggxRdaXXl0YoSJmLPuVRRX9Pl5xSvUul
oFz5z5EvtWQEUQxm1mbo9wseH8msI8M6rSwykEaBbOMfm5v1ZAjvefQ5apGC
VoH22Zl3ZKzvXPbl+kVBxp2t42kNZIw/vCKa/JuCqgCfFJNGMtLXZJxfrlHw
6tEf86wmMgJKkvZIr6Miq1g4WaOZjKvOmypKmajgitXTnaBbaOIzcxMLFdwi
E2U7PtDvn6z6UncLFbu2FTon0D1+Ls+wdxsV7Jtvtu1vISOt1f/5GBsVL1IN
LAVbyQg9snoxiYMKyW1VOml0uz525r3ISUWSp+KnvW1k/PebMsjJQ0XMTXWG
KLrVL1nE9+6lQuKLasU/uo/W9J+PEqCiJytzs007GTzC+tx6+6lYTuwba6R7
boaIaxKjwkH5+F7XDvp+1S8yCzxERTf7IZc6uqsLxDmVJahgunMHmzvp68tJ
6luTouJWoaubJt3RnrxPyo5RIbbLlzeAbs+RaNO7x6mY+zotWEy39Zktu2VO
UiGftOn+V7r1Mv16v8tTYU4+cHpTFxmyW1diXhFUhN19aiBG9z5HJ+MbSlSc
+5D0QpHuzT1T7GJnqNi4EqhrSPfiCfPucVUqotvCj1yi+0t8X1SKBhX3KCt6
FnQ3/NM1vKxNRflv5vTLdOdZNrDy6FFRVjovakJ3XKNCZ58BFS3ss71n6PY7
VBgRY0yf77sjmeJ02z06rG9wlorXdvNPd9BtspC2Y/t5Kjxglkqlj584y9P+
/iIVb2diKivpFiuLCr//HxWuLu2TIXSz8m/WPXOFimvd4pyGdK/4+W5bZ0XF
f8NdGqx0j08st1TY0MdTPOTaTK9vq6ZjqLstFbflHeLc6S56Nal1wp4K2dvx
OUJ0J7P9t2XxJhXZgfcy/r9eD1w/vs9zpmKri9h9S7qdB3Qe2t+mIvTkyzPL
9PW+SLzTOHiXira/XAOBdKuknto06U5F8ZRT5Ga6OW0PBZv7UGGUZFi/jr6f
1rWlqu31pyJdf5OvM33/UY9wMw8EUtG6f/7XIH1/VvxmCTIKoYJPVvHP0/dk
XHkw4a8aS0UF92hhKb0ftGYvnWaKo8JxRih+nt4v0ga9jNXxVOy/J7mZn25m
rnrfkyn0+l07ZG9F77cXmSneh1/Q95MJT/yTajJit3KB8ooKf+mN+yPp/evt
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
NA==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
RtZjt5SksQbTdWxU+RWdt/gfomYVFw==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
ok18RpMKUtH7KuJ4txCu8ZzIFMN/7iloPw==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
KC7blqxBE8kK75FsEfwP8kmr/w==
        "]], 
       LineBox[CompressedData["
1:eJw1lGs0FHgAxS1NL8n2IGuppmiLSrWtOtpc0gObZkhLUTRoCT2Is7O1lIwy
JKXWYs4Q4zkz5qlVO8ejUFrFstbUlkOrPHb6/2MVK4+1H/bDPffcL79zfl8u
k3PSK0RfT0/PbTr/9eePK+LrdG/QoD+wYdJdjf3tknGLyTdojurMKLJUI644
YqxZjyBjaQVryESNEu7a0QQDgqRcZYrJfDXGLSV/980m8O6oCe2eUKHomHhA
vYhgQVrG66Q/VGjZGt73jSmBn9PG9qRWFT7MtX1t/gnBfocghn+jCmxZWff5
pQQz9HIYvNsqjI2UaveuIXC/0xjVmKaC1aOw36dsCUJHUg+HJ6rAEqz5Tbme
4FBm3tYurgoip9Jms80Es356cM05WIV9ySUNPY4ERS7c+Gf2KuSbF6vPeROs
8DDTMduUaNIdU9r5EEh8WW+f1CsxUrVK/vLgNP+p1Ni9Uom9QUVi1wCCCus0
TqlAiffiwvzFxwlM7Z/mGQQp4b5dlC6JJ2BqejZ2vVLgjHFwWkACwUBTg79b
uwK53StTF/IIfDXy7LN1CgzzCi59yycwfnR1jkO+AsIn+XE7bxJEj3U2mPgp
MBRwK+J5GcGnEs/6qVo53mUyvjgqJSiMVljZyeQYbQ6beCUj4Of47LERyDGF
TWlUTRBbQFoSYuSYt/y+TL+a4J/T/doKazmsu3qGVrcRzNkWx+oYKcdqM7ef
pe0Ex5NdmVG/lGMtW3pxk5Ygs92ILxCWY1NNzOIvXxD8UHUGQpdyOObNtGf1
EjhgqnP3ZSl8A1dzYz4QnDCvvN3xQQy/H1OdxyamfSnf2f6hGEda3s6J16No
YBxLtLwhRojTnezLDIotnFhNoo0YUcvdNTnGFJErIlkSzzKkdoVP1a6kYNQZ
1ixLLkF1oIw3fy/FDNPesF05Itxtjviqcx/FwS6HQC5bhNuONgvKPSkmDr87
spghgsSiUODhQ+Gbte77CxEFyNZmq1I5FIp0kdB9cz5i2Endc7kU+zl9hLBz
carapfjZWYqvm45OGJUKEbH+o8iyOIpZjdbxTD0hOPPOjbolUnBcvKq2igVg
PzxtnHyVIs194PG9d1mwdTq8fVYRxVBV4tV6zg2skpkbdJRQfHcXhcHSDKxY
qn1YJKbQjfBCL45ch9m4l/duBYVrCNf2PP8aZla6hvM0FOta+fMX+V2B/mcz
Nx6opmhmu+wO1qVg4ub991b3KCylmVmGcXwMRzsm1D2Y9ht3W+dfcAnddpuz
DNoozg3dq0mfvIDnwsEjbe0UWUtOWs7IOQ+tkcyqQEuxofZmlHdMHJ78tUa+
o5NCeSospceQi0eHemMWdlNcP5j7bDIkFvWNom0v/6SwMz0Qu6UpGpriZQ8u
9FPwLYQrT6VEotL0RaqnjuJjozP+bZpQqHjZXkxKcVS3S95oEYzyYR+zwUEK
geRW/r6wAJQFmXTWDFMcktYYRjN9UNjaWpA+QtH3dqrlymwW8pzTwwLHKH4t
WyI9keIMgdzDbsMERX/t6MnBeTbo793psWN6//8//wI05FmP
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Divergence Removed?\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {-1.3232785364192012`*^-6, 0.07926930135910046}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
0\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
1\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
2\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
3\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
4\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
10\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.804512960879467*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"p", " ", "-", 
   RowBox[{"2", " ", "0", " ", "or", " ", "something"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.804521800898731*^9, 3.804521816416125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), \
1\)]\)(1-\!\(\*SuperscriptBox[\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \
\(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 2\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 3\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      RowBox[{"Re", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".1"}], "}"}], ",", 
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".1"}], "}"}], ",", 
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".1"}], "}"}], ",", 
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".5"}], "}"}], ",", 
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".5"}], "}"}], ",", 
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".5"}], "}"}], ",", 
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9"}], "}"}], ",", 
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9"}], "}"}], ",", 
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9"}], "}"}], ",", 
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".999"}], "}"}], ",", 
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".999"}], "}"}], ",", 
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".999"}], "}"}], ",", 
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9999"}], "}"}], ",", 
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9999"}], "}"}], ",", 
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9999"}], "}"}], ",", 
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}]}], "}"}], "]"}]}], "}"}], 
    "]"}], ",", "6"}], "]"}]], "Input",
 CellChangeTimes->{{3.8045141679011087`*^9, 3.804514177416279*^9}, {
  3.804514371357263*^9, 3.8045144195185604`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
1\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"\>", 
     "0.0001298339411145503`", "0.012854393280133708`", 
     "0.01937376184599964`", "0.00006509416939333884`", 
     "2.225809258157967`*^-6"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
2\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"\>", 
     "0.00002597017501432056`", "0.012938951894179176`", 
     "0.037376213740573185`", "0.00015522103804192403`", 
     "5.366805576965678`*^-6"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
3\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"\>", 
     "3.9411929971263625`*^-6", "0.00966900941542085`", 
     "0.05040892862429206`", "0.00024916506708689087`", 
     "8.690981782112263`*^-6"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.804514190995675*^9, 3.8045151526610594`*^9}]
}, Open  ]],

Cell["\<\
It kind of looks like -2 is just going to be consistently smaller than +2; \
maybe even at its maximum value it\[CloseCurlyQuote]ll be negligible?
Except +2 is specifically small near e=1. But still. I guess with that in \
mind I don\[CloseCurlyQuote]t need to know the maximum, but it might \
dominate. I can do for both. Or something. Yeah.
At the very least it kind of looks like for low e, we can drop -2 basically \
entirely, and maybe drop both of them past some value s. Anyway.\
\>", "Text",
 CellChangeTimes->{{3.804515216579728*^9, 3.804515240277731*^9}, {
  3.804515305745963*^9, 3.8045153134937725`*^9}, {3.8045153841771665`*^9, 
  3.804515526018506*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"NpMinus2NP", "[", 
      RowBox[{"e", ",", "s"}], "]"}], ",", 
     RowBox[{"s", "\[Rule]", "Infinity"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", ".9"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8045155348123426`*^9, 3.804515591520707*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ s\\\\ \\(\\((u - \\(\\(e\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(e\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^2\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045155929973373`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ s\\\\ \\(\\((u - \\(\\(e\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(e\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045155930652795`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ s\\\\ \\(\\((u - \\(\\(e\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(e\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804515593099243*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: inumr\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804515593180169*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.804518866957651*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["I should organize this better", "Section",
 CellChangeTimes->{{3.8043612825000396`*^9, 3.8043612849650702`*^9}, {
  3.8043613413326035`*^9, 3.804361344415412*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pEmEs", "[", 
   RowBox[{"e_", ",", "m_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{",", 
    RowBox[{"{", 
     RowBox[{"u", ",", "0", ",", 
      RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.804361375222472*^9, 3.804361449543662*^9}}],

Cell["\<\
Okay, so the hard thing was first getting the thing in the right form, so I\
\[CloseCurlyQuote]m going to try using With\
\>", "Text",
 CellChangeTimes->{{3.8044392851648407`*^9, 3.804439350794869*^9}}],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{",", 
   RowBox[{"Cos", "[", 
    RowBox[{"m", "*"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8044393526307435`*^9, 3.8044394213471756`*^9}}]
}, Open  ]]
},
WindowSize->{1154, 988},
WindowMargins->{{135, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (December 4, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 107, 1, 70, "Section"],
Cell[690, 25, 177, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[892, 31, 99, 1, 49, "Subsection"],
Cell[CellGroupData[{
Cell[1016, 36, 272, 7, 31, "Input",
 InitializationCell->True],
Cell[1291, 45, 336, 6, 56, "Output"]
}, Open  ]],
Cell[1642, 54, 1159, 32, 31, "Input",
 InitializationCell->True],
Cell[2804, 88, 773, 23, 31, "Input",
 InitializationCell->True],
Cell[3580, 113, 1342, 39, 72, "Input",
 InitializationCell->True],
Cell[4925, 154, 1012, 31, 31, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[5974, 190, 99, 1, 49, "Subsection"],
Cell[6076, 193, 264, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[6365, 202, 251, 5, 31, "Input",
 InitializationCell->True],
Cell[6619, 209, 307, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6963, 218, 104, 1, 39, "Subsubsection"],
Cell[7070, 221, 1266, 37, 52, "Input",
 InitializationCell->True],
Cell[8339, 260, 1325, 40, 72, "Input",
 InitializationCell->True],
Cell[9667, 302, 1370, 41, 72, "Input",
 InitializationCell->True],
Cell[11040, 345, 1311, 39, 72, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[12388, 389, 108, 1, 39, "Subsubsection"],
Cell[12499, 392, 326, 5, 30, "Text"],
Cell[12828, 399, 727, 22, 31, "Input",
 InitializationCell->True],
Cell[13558, 423, 671, 20, 31, "Input",
 InitializationCell->True],
Cell[14232, 445, 673, 20, 31, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[14942, 470, 128, 1, 39, "Subsubsection"],
Cell[15073, 473, 1058, 31, 31, "Input",
 InitializationCell->True],
Cell[16134, 506, 1147, 35, 31, "Input",
 InitializationCell->True],
Cell[17284, 543, 1192, 36, 31, "Input",
 InitializationCell->True],
Cell[18479, 581, 1127, 33, 31, "Input",
 InitializationCell->True],
Cell[19609, 616, 784, 23, 31, "Input",
 InitializationCell->True],
Cell[20396, 641, 753, 21, 31, "Input",
 InitializationCell->True],
Cell[21152, 664, 953, 29, 31, "Input",
 InitializationCell->True],
Cell[22108, 695, 874, 27, 31, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23043, 729, 105, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[23173, 734, 146, 3, 31, "Input"],
Cell[23322, 739, 354, 10, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23713, 754, 203, 4, 31, "Input"],
Cell[23919, 760, 228, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24184, 770, 150, 3, 31, "Input"],
Cell[24337, 775, 1143, 35, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25517, 815, 1242, 37, 60, "Input"],
Cell[26762, 854, 196, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26995, 863, 190, 4, 31, "Input"],
Cell[27188, 869, 200, 4, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27437, 879, 179, 2, 70, "Section"],
Cell[27619, 883, 182, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[27826, 889, 104, 1, 49, "Subsection"],
Cell[27933, 892, 84, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[28042, 897, 3534, 94, 121, "Input"],
Cell[31579, 993, 813, 15, 42, "Message"],
Cell[32395, 1010, 580, 11, 21, "Message"],
Cell[32978, 1023, 804, 15, 40, "Message"],
Cell[33785, 1040, 934, 18, 59, "Message"],
Cell[34722, 1060, 535, 11, 21, "Message"],
Cell[35260, 1073, 580, 11, 21, "Message"],
Cell[35843, 1086, 578, 11, 21, "Message"],
Cell[36424, 1099, 537, 11, 21, "Message"],
Cell[36964, 1112, 69472, 1261, 246, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106473, 2378, 3461, 92, 121, "Input"],
Cell[109937, 2472, 813, 15, 42, "Message"],
Cell[110753, 2489, 580, 11, 21, "Message"],
Cell[111336, 2502, 804, 15, 40, "Message"],
Cell[112143, 2519, 934, 18, 59, "Message"],
Cell[113080, 2539, 535, 11, 21, "Message"],
Cell[113618, 2552, 580, 11, 21, "Message"],
Cell[114201, 2565, 578, 11, 21, "Message"],
Cell[114782, 2578, 537, 11, 21, "Message"],
Cell[115322, 2591, 72819, 1317, 246, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[188190, 3914, 101, 1, 49, "Subsection"],
Cell[CellGroupData[{
Cell[188316, 3919, 4685, 129, 181, "Input"],
Cell[193004, 4050, 810, 15, 42, "Message"],
Cell[193817, 4067, 578, 11, 21, "Message"],
Cell[194398, 4080, 806, 15, 40, "Message"],
Cell[195207, 4097, 932, 18, 59, "Message"],
Cell[196142, 4117, 535, 11, 21, "Message"],
Cell[196680, 4130, 580, 11, 21, "Message"],
Cell[197263, 4143, 580, 11, 21, "Message"],
Cell[197846, 4156, 535, 11, 21, "Message"],
Cell[198384, 4169, 75895, 1366, 250, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274316, 5540, 685, 21, 31, "Input"],
Cell[275004, 5563, 233, 6, 31, "Output"]
}, Open  ]],
Cell[275252, 5572, 290, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[275567, 5582, 630, 20, 31, "Input"],
Cell[276200, 5604, 79, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276316, 5610, 190, 4, 31, "Input"],
Cell[276509, 5616, 164, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276710, 5625, 193, 4, 31, "Input"],
Cell[276906, 5631, 399, 12, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277342, 5648, 635, 18, 31, "Input"],
Cell[277980, 5668, 427, 9, 21, "Message"],
Cell[278410, 5679, 429, 9, 21, "Message"],
Cell[278842, 5690, 429, 9, 21, "Message"],
Cell[279274, 5701, 530, 11, 21, "Message"],
Cell[279807, 5714, 681, 13, 55, "Message"]
}, Open  ]],
Cell[280503, 5730, 95, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[280623, 5735, 4656, 129, 181, "Input"],
Cell[285282, 5866, 813, 15, 42, "Message"],
Cell[286098, 5883, 578, 11, 21, "Message"],
Cell[286679, 5896, 803, 15, 40, "Message"],
Cell[287485, 5913, 934, 18, 59, "Message"],
Cell[288422, 5933, 535, 11, 21, "Message"],
Cell[288960, 5946, 580, 11, 21, "Message"],
Cell[289543, 5959, 580, 11, 21, "Message"],
Cell[290126, 5972, 537, 11, 21, "Message"],
Cell[290666, 5985, 63574, 1164, 250, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[354277, 7154, 635, 20, 31, "Input"],
Cell[354915, 7176, 212, 6, 31, "Output"]
}, Open  ]],
Cell[355142, 7185, 87, 1, 30, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[355278, 7192, 169, 2, 70, "Section"],
Cell[CellGroupData[{
Cell[355472, 7198, 148, 3, 31, "Input"],
Cell[355623, 7203, 99, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[355759, 7209, 231, 4, 31, "Input"],
Cell[355993, 7215, 733, 14, 55, "Message"],
Cell[356729, 7231, 878, 27, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[357644, 7263, 322, 8, 31, "Input"],
Cell[357969, 7273, 8505, 152, 236, 4102, 79, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[366511, 7430, 152, 3, 31, "Input"],
Cell[366666, 7435, 79, 1, 31, "Output"]
}, Open  ]],
Cell[366760, 7439, 99, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[366884, 7444, 260, 7, 31, "Input"],
Cell[367147, 7453, 237, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[367421, 7463, 260, 7, 31, "Input"],
Cell[367684, 7472, 240, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[367961, 7482, 260, 7, 31, "Input"],
Cell[368224, 7491, 207, 4, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[368468, 7500, 311, 8, 31, "Input"],
Cell[368782, 7510, 207, 4, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[369026, 7519, 313, 8, 31, "Input"],
Cell[369342, 7529, 212, 3, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[369591, 7537, 311, 8, 31, "Input"],
Cell[369905, 7547, 211, 3, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[370153, 7555, 1248, 32, 52, "Input"],
Cell[371404, 7589, 932, 18, 59, "Message"],
Cell[372339, 7609, 880, 16, 47, "Message"],
Cell[373222, 7627, 50794, 934, 288, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[424053, 8566, 1444, 36, 52, "Input"],
Cell[425500, 8604, 837, 15, 42, "Message"],
Cell[426340, 8621, 601, 11, 21, "Message"],
Cell[426944, 8634, 828, 15, 40, "Message"],
Cell[427775, 8651, 958, 18, 59, "Message"],
Cell[428736, 8671, 557, 11, 21, "Message"],
Cell[429296, 8684, 602, 11, 21, "Message"],
Cell[429901, 8697, 602, 11, 21, "Message"],
Cell[430506, 8710, 561, 11, 21, "Message"],
Cell[431070, 8723, 91126, 1612, 246, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[522233, 10340, 604, 11, 31, "Input"],
Cell[522840, 10353, 601, 11, 21, "Message"],
Cell[523444, 10366, 599, 11, 21, "Message"],
Cell[524046, 10379, 601, 11, 21, "Message"],
Cell[524650, 10392, 702, 13, 21, "Message"],
Cell[525355, 10407, 853, 15, 55, "Message"],
Cell[526211, 10424, 851, 15, 55, "Message"],
Cell[527065, 10441, 244, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[527346, 10449, 4663, 123, 192, "Input"],
Cell[532012, 10574, 908, 17, 42, "Message"],
Cell[532923, 10593, 910, 17, 42, "Message"],
Cell[533836, 10612, 907, 17, 42, "Message"],
Cell[534746, 10631, 584, 12, 21, "Message"],
Cell[535333, 10645, 1235, 26, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[536605, 10676, 1460, 39, 92, "Input"],
Cell[538068, 10717, 648, 14, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[538753, 10736, 312, 8, 31, "Input"],
Cell[539068, 10746, 264, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[539369, 10756, 421, 12, 31, "Input"],
Cell[539793, 10770, 158, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[539988, 10778, 1998, 53, 72, "Input"],
Cell[541989, 10833, 908, 17, 42, "Message"],
Cell[542900, 10852, 677, 13, 21, "Message"],
Cell[543580, 10867, 903, 17, 40, "Message"],
Cell[544486, 10886, 1029, 20, 59, "Message"],
Cell[545518, 10908, 630, 13, 21, "Message"],
Cell[546151, 10923, 677, 13, 21, "Message"],
Cell[546831, 10938, 677, 13, 21, "Message"],
Cell[547511, 10953, 634, 13, 21, "Message"],
Cell[548148, 10968, 91261, 1618, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[639446, 12591, 231, 7, 31, "Input"],
Cell[639680, 12600, 925, 18, 59, "Message"],
Cell[640608, 12620, 578, 11, 21, "Message"],
Cell[641189, 12633, 931, 18, 59, "Message"],
Cell[642123, 12653, 781, 15, 55, "Message"],
Cell[642907, 12670, 580, 11, 21, "Message"],
Cell[643490, 12683, 944, 18, 59, "Message"],
Cell[644437, 12703, 535, 11, 21, "Message"],
Cell[644975, 12716, 578, 11, 21, "Message"],
Cell[645556, 12729, 537, 11, 21, "Message"],
Cell[646096, 12742, 168, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[646301, 12750, 263, 7, 31, "Input"],
Cell[646567, 12759, 185, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[646789, 12768, 261, 7, 31, "Input"],
Cell[647053, 12777, 181, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[647271, 12786, 374, 11, 31, "Input"],
Cell[647648, 12799, 107, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[647792, 12806, 392, 9, 31, "Input"],
Cell[648187, 12817, 290, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[648514, 12827, 235, 7, 31, "Input"],
Cell[648752, 12836, 927, 18, 59, "Message"],
Cell[649682, 12856, 578, 11, 21, "Message"],
Cell[650263, 12869, 929, 18, 59, "Message"],
Cell[651195, 12889, 783, 15, 55, "Message"],
Cell[651981, 12906, 580, 11, 21, "Message"],
Cell[652564, 12919, 944, 18, 59, "Message"],
Cell[653511, 12939, 533, 11, 21, "Message"],
Cell[654047, 12952, 580, 11, 21, "Message"],
Cell[654630, 12965, 537, 11, 21, "Message"],
Cell[655170, 12978, 153, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[655360, 12986, 2126, 47, 80, "Input"],
Cell[657489, 13035, 833, 15, 42, "Message"],
Cell[658325, 13052, 600, 11, 21, "Message"],
Cell[658928, 13065, 815, 14, 40, "Message"],
Cell[659746, 13081, 943, 17, 59, "Message"],
Cell[660692, 13100, 557, 11, 21, "Message"],
Cell[661252, 13113, 602, 11, 21, "Message"],
Cell[661857, 13126, 602, 11, 21, "Message"],
Cell[662462, 13139, 557, 11, 21, "Message"],
Cell[663022, 13152, 108560, 1901, 254, "Output"]
}, Open  ]],
Cell[771597, 15056, 450, 14, 31, "Input"],
Cell[CellGroupData[{
Cell[772072, 15074, 703, 18, 31, "Input"],
Cell[772778, 15094, 429, 9, 21, "Message"],
Cell[773210, 15105, 429, 9, 21, "Message"],
Cell[773642, 15116, 429, 9, 21, "Message"],
Cell[774074, 15127, 528, 11, 21, "Message"],
Cell[774605, 15140, 679, 13, 55, "Message"],
Cell[775287, 15155, 1078, 28, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[776402, 15188, 681, 18, 31, "Input"],
Cell[777086, 15208, 145, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[777268, 15215, 483, 15, 31, "Input"],
Cell[777754, 15232, 427, 9, 21, "Message"],
Cell[778184, 15243, 427, 9, 21, "Message"],
Cell[778614, 15254, 429, 9, 21, "Message"],
Cell[779046, 15265, 530, 11, 21, "Message"],
Cell[779579, 15278, 679, 13, 55, "Message"],
Cell[780261, 15293, 77, 1, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[780387, 15300, 120, 1, 70, "Section"],
Cell[780510, 15303, 1448, 36, 52, "Input"],
Cell[CellGroupData[{
Cell[781983, 15343, 1645, 40, 72, "Input"],
Cell[783631, 15385, 862, 16, 42, "Message"],
Cell[784496, 15403, 629, 12, 21, "Message"],
Cell[785128, 15417, 855, 16, 40, "Message"],
Cell[785986, 15435, 981, 19, 59, "Message"],
Cell[786970, 15456, 584, 12, 21, "Message"],
Cell[787557, 15470, 629, 12, 21, "Message"],
Cell[788189, 15484, 627, 12, 21, "Message"],
Cell[788819, 15498, 584, 12, 21, "Message"],
Cell[789406, 15512, 110079, 1936, 276, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[899522, 17453, 3996, 105, 172, "Input"],
Cell[903521, 17560, 951, 17, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[904509, 17582, 2086, 47, 101, "Input"],
Cell[906598, 17631, 813, 15, 42, "Message"],
Cell[907414, 17648, 580, 11, 21, "Message"],
Cell[907997, 17661, 804, 15, 40, "Message"],
Cell[908804, 17678, 932, 18, 59, "Message"],
Cell[909739, 17698, 533, 11, 21, "Message"],
Cell[910275, 17711, 577, 11, 21, "Message"],
Cell[910855, 17724, 578, 11, 21, "Message"],
Cell[911436, 17737, 535, 11, 21, "Message"],
Cell[911974, 17750, 122585, 2133, 250, "Output"]
}, Open  ]],
Cell[1034574, 19886, 212, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[1034811, 19894, 4168, 108, 184, "Input"],
Cell[1038982, 20004, 1233, 25, 70, "Output"]
}, Open  ]],
Cell[1040230, 20032, 677, 11, 87, "Text"],
Cell[CellGroupData[{
Cell[1040932, 20047, 369, 10, 31, "Input"],
Cell[1041304, 20059, 758, 14, 55, "Message"],
Cell[1042065, 20075, 758, 14, 55, "Message"],
Cell[1042826, 20091, 756, 14, 55, "Message"],
Cell[1043585, 20107, 534, 11, 21, "Message"],
Cell[1044122, 20120, 77, 1, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1044248, 20127, 169, 2, 70, "Section"],
Cell[1044420, 20131, 329, 9, 31, "Input"],
Cell[1044752, 20142, 212, 4, 30, "Text"],
Cell[1044967, 20148, 191, 5, 31, "Input"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
