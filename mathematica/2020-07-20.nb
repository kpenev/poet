(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2043190,      39076]
NotebookOptionsPosition[   2014777,      38275]
NotebookOutlinePosition[   2015121,      38290]
CellTagsIndexPosition[   2015078,      38287]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Function Definitions", "Section",
 CellChangeTimes->{{3.804249707395234*^9, 3.8042497128711557`*^9}}],

Cell["Don\[CloseCurlyQuote]t forget that there\[CloseCurlyQuote]s also an \
omega floating around", "Text",
 CellChangeTimes->{{3.8042498313032227`*^9, 3.8042498390280557`*^9}}],

Cell[CellGroupData[{

Cell["For m = 0", "Subsection",
 CellChangeTimes->{{3.804249894695382*^9, 3.8042498963048887`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"const1", "=", 
  RowBox[{"1", "/", 
   RowBox[{"(", 
    RowBox[{"2", "*", "Pi"}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8042498093016453`*^9, 3.804249818121458*^9}, 
   3.804249965516646*^9, 3.8042512786847644`*^9}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"2", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{3.8042509230129004`*^9, 3.804251279311183*^9, 
  3.8044441790749702`*^9, 3.804509439710074*^9, 3.8048666164478817`*^9, 
  3.804948517729862*^9, 3.8050252716506824`*^9, 3.8050362001948843`*^9, 
  3.805112242488683*^9, 3.8051969333252935`*^9, 3.8054589376177826`*^9, 
  3.80554757315653*^9, 3.8056293041772103`*^9, 3.8060646531274424`*^9, 
  3.806148420875233*^9, 3.8062350188062053`*^9, 3.807015015128883*^9, 
  3.811260354658983*^9, 3.8142749530184946`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"p0", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"const1", "*", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"I", "*", "s", "*", 
        RowBox[{"(", 
         RowBox[{"u", "-", 
          RowBox[{"e", "*", 
           RowBox[{"Sin", "[", "u", "]"}]}]}], ")"}]}], "]"}], " ", "/", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"e", "*", 
          RowBox[{"Cos", "[", "u", "]"}]}]}], ")"}], "^", "2"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Element", "[", 
         RowBox[{"e", ",", "Reals"}], "]"}], ",", 
        RowBox[{"e", ">", "0"}]}], "}"}]}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8042497417593374`*^9, 3.804249742971213*^9}, {
   3.804249823209738*^9, 3.804249825638482*^9}, 3.8042504083645954`*^9, {
   3.8045983989477015`*^9, 3.8045984024803524`*^9}, {3.804868511524465*^9, 
   3.804868512198599*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Np0", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"const1", "*", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"I", "*", "s", "*", 
        RowBox[{"(", 
         RowBox[{"u", "-", 
          RowBox[{"e", "*", 
           RowBox[{"Sin", "[", "u", "]"}]}]}], ")"}]}], "]"}], " ", "/", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"e", "*", 
          RowBox[{"Cos", "[", "u", "]"}]}]}], ")"}], "^", "2"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8042658667510514`*^9, 3.804265877173378*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p0NoPole", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"const1", "*", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"e", "^", "2"}]}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"3", "/", "2"}], ")"}]}], "*", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"I", "*", "s", "*", 
         RowBox[{"(", 
          RowBox[{"u", "-", 
           RowBox[{"e", "*", 
            RowBox[{"Sin", "[", "u", "]"}]}]}], ")"}]}], "]"}], " ", "/", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"e", "*", 
           RowBox[{"Cos", "[", "u", "]"}]}]}], ")"}], "^", "2"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"e", "\[GreaterEqual]", "0"}], ",", 
        RowBox[{"e", "\[LessEqual]", "1"}], ",", 
        RowBox[{"Element", "[", 
         RowBox[{"s", ",", "Integers"}], "]"}]}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.804249761345158*^9, 3.8042497632833605`*^9}, 
   3.804250412363885*^9, {3.804251048540388*^9, 3.8042510511909294`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Np0NoPole", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"const1", "*", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"e", "^", "2"}]}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"3", "/", "2"}], ")"}]}], "*", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"I", "*", "s", "*", 
         RowBox[{"(", 
          RowBox[{"u", "-", 
           RowBox[{"e", "*", 
            RowBox[{"Sin", "[", "u", "]"}]}]}], ")"}]}], "]"}], " ", "/", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"e", "*", 
           RowBox[{"Cos", "[", "u", "]"}]}]}], ")"}], "^", "2"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.804265380225936*^9, 3.804265383557848*^9}, 
   3.804265501784275*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["For m = 2", "Subsection",
 CellChangeTimes->{{3.804249904113641*^9, 3.8042499063096046`*^9}}],

Cell["\<\
There\[CloseCurlyQuote]s also an Exp[phi_not]
Apparently that\[CloseCurlyQuote]s actually handled in POET, never mind\
\>", "Text",
 CellChangeTimes->{{3.8042499424590483`*^9, 3.8042499548365602`*^9}, {
  3.8045092907088766`*^9, 3.8045093028715887`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"const2", "=", "1"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8042499566628637`*^9, 3.804249979544628*^9}, {
  3.804444005606981*^9, 3.8044440078359118`*^9}, {3.804444052392553*^9, 
  3.8044440527172546`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.804250923263668*^9, 3.8044440097880993`*^9, 
  3.80444405327074*^9, 3.80444417973635*^9, 3.804509440000804*^9, 
  3.8048666166806884`*^9, 3.8049485179616475`*^9, 3.805025271830516*^9, 
  3.805036200340717*^9, 3.8051122426495347`*^9, 3.8051969334641666`*^9, 
  3.805458937796173*^9, 3.805547573614107*^9, 3.8056293044049654`*^9, 
  3.8060646532767086`*^9, 3.806148421001119*^9, 3.806235018940081*^9, 
  3.807015015302722*^9, 3.811260355106659*^9, 3.8142749531673555`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sub integrals", "Subsubsection",
 CellChangeTimes->{{3.804250033439602*^9, 3.804250035291881*^9}}],

Cell["Symbolic integration", "Text",
 CellChangeTimes->{{3.8054584410289364`*^9, 3.805458450531994*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pTwoA", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"const1", "*", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"e", "^", "2"}]}], ")"}], "*", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"I", "*", "s", "*", 
         RowBox[{"(", 
          RowBox[{"u", "-", 
           RowBox[{"e", "*", 
            RowBox[{"Sin", "[", "u", "]"}]}]}], ")"}]}], "]"}], " ", "/", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"e", "*", 
           RowBox[{"Cos", "[", "u", "]"}]}]}], ")"}], "^", "4"}]}], ")"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Element", "[", 
         RowBox[{"e", ",", "Reals"}], "]"}], ",", 
        RowBox[{"e", ">", "0"}]}], "}"}]}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.804250040670888*^9, {3.8042501766047144`*^9, 3.804250180610001*^9}, {
   3.804250227662328*^9, 3.8042502362513533`*^9}, {3.8045983112338076`*^9, 
   3.804598327552512*^9}, 3.8048739263243513`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pTwoB", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"const1", "*", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"e", "^", "2"}]}], ")"}], "*", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"I", "*", "s", "*", 
          RowBox[{"(", 
           RowBox[{"u", "-", 
            RowBox[{"e", "*", 
             RowBox[{"Sin", "[", "u", "]"}]}]}], ")"}]}], "]"}], " ", "/", 
        " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"e", "*", 
            RowBox[{"Cos", "[", "u", "]"}]}]}], ")"}], "^", "4"}]}], ")"}], 
      "*", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", "*", "u"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Element", "[", 
         RowBox[{"e", ",", "Reals"}], "]"}], ",", 
        RowBox[{"e", ">", "0"}]}], "}"}]}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.8042500524669437`*^9, 3.8042501965571966`*^9, {3.804250240331566*^9, 
   3.8042502567683086`*^9}, 3.8045983416954765`*^9, 3.804873934788295*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pTwoC", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"const1", "*", "I", "*", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"e", "^", "2"}]}], ")"}], "]"}], "*", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"I", "*", "s", "*", 
          RowBox[{"(", 
           RowBox[{"u", "-", 
            RowBox[{"e", "*", 
             RowBox[{"Sin", "[", "u", "]"}]}]}], ")"}]}], "]"}], " ", "/", 
        " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"e", "*", 
            RowBox[{"Cos", "[", "u", "]"}]}]}], ")"}], "^", "4"}]}], ")"}], 
      "*", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", "*", "u"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Element", "[", 
         RowBox[{"e", ",", "Reals"}], "]"}], ",", 
        RowBox[{"e", ">", "0"}]}], "}"}]}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.804250123974566*^9, 3.8042501980737896`*^9, {3.8042502750073767`*^9, 
   3.804250317539899*^9}, 3.8045983591945066`*^9, 3.8048739439690704`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pTwoD", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"const1", "*", "I", "*", "2", "*", "e", "*", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"e", "^", "2"}]}], ")"}], "]"}], "*", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"I", "*", "s", "*", 
          RowBox[{"(", 
           RowBox[{"u", "-", 
            RowBox[{"e", "*", 
             RowBox[{"Sin", "[", "u", "]"}]}]}], ")"}]}], "]"}], " ", "/", 
        " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"e", "*", 
            RowBox[{"Cos", "[", "u", "]"}]}]}], ")"}], "^", "4"}]}], ")"}], 
      "*", 
      RowBox[{"Sin", "[", "u", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Element", "[", 
         RowBox[{"e", ",", "Reals"}], "]"}], ",", 
        RowBox[{"e", ">", "0"}]}], "}"}]}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8042503495232115`*^9, 3.804250368877252*^9}, 
   3.804598367837075*^9, 3.8048739477889547`*^9}],

Cell["Numeric integration", "Text",
 CellChangeTimes->{{3.805458457435115*^9, 3.805458460242817*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NpTwoA", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"const1", "*", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"e", "^", "2"}]}], ")"}], "*", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"I", "*", "s", "*", 
         RowBox[{"(", 
          RowBox[{"u", "-", 
           RowBox[{"e", "*", 
            RowBox[{"Sin", "[", "u", "]"}]}]}], ")"}]}], "]"}], " ", "/", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"e", "*", 
           RowBox[{"Cos", "[", "u", "]"}]}]}], ")"}], "^", "4"}]}], ")"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.804250040670888*^9, {3.8042501766047144`*^9, 3.804250180610001*^9}, {
   3.804250227662328*^9, 3.8042502362513533`*^9}, {3.8042658133805904`*^9, 
   3.804265825686167*^9}, 3.8042658973736267`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NpTwoB", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"const1", "*", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"e", "^", "2"}]}], ")"}], "*", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"I", "*", "s", "*", 
          RowBox[{"(", 
           RowBox[{"u", "-", 
            RowBox[{"e", "*", 
             RowBox[{"Sin", "[", "u", "]"}]}]}], ")"}]}], "]"}], " ", "/", 
        " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"e", "*", 
            RowBox[{"Cos", "[", "u", "]"}]}]}], ")"}], "^", "4"}]}], ")"}], 
      "*", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", "*", "u"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.8042500524669437`*^9, 3.8042501965571966`*^9, {3.804250240331566*^9, 
   3.8042502567683086`*^9}, {3.8042658153887234`*^9, 3.804265826907036*^9}, 
   3.8042659057668347`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NpTwoC", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"const1", "*", "I", "*", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"e", "^", "2"}]}], ")"}], "]"}], "*", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"I", "*", "s", "*", 
          RowBox[{"(", 
           RowBox[{"u", "-", 
            RowBox[{"e", "*", 
             RowBox[{"Sin", "[", "u", "]"}]}]}], ")"}]}], "]"}], " ", "/", 
        " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"e", "*", 
            RowBox[{"Cos", "[", "u", "]"}]}]}], ")"}], "^", "4"}]}], ")"}], 
      "*", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", "*", "u"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.804250123974566*^9, 3.8042501980737896`*^9, {3.8042502750073767`*^9, 
   3.804250317539899*^9}, {3.8042658162848916`*^9, 3.8042658285185375`*^9}, 
   3.8042659124256573`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NpTwoD", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"const1", "*", "I", "*", "2", "*", "e", "*", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"e", "^", "2"}]}], ")"}], "]"}], "*", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"I", "*", "s", "*", 
          RowBox[{"(", 
           RowBox[{"u", "-", 
            RowBox[{"e", "*", 
             RowBox[{"Sin", "[", "u", "]"}]}]}], ")"}]}], "]"}], " ", "/", 
        " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"e", "*", 
            RowBox[{"Cos", "[", "u", "]"}]}]}], ")"}], "^", "4"}]}], ")"}], 
      "*", 
      RowBox[{"Sin", "[", "u", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8042503495232115`*^9, 3.804250368877252*^9}, {
   3.8042658170551767`*^9, 3.804265830173004*^9}, 3.804265915996343*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Main Coefficients", "Subsubsection",
 CellChangeTimes->{{3.804250393279598*^9, 3.804250396836296*^9}}],

Cell["\<\
I\[CloseCurlyQuote]m not sure why I\[CloseCurlyQuote]m dividing by const1, \
but I don\[CloseCurlyQuote]t believe it\[CloseCurlyQuote]s causing any issues \
w/ regard to behavior, so I\[CloseCurlyQuote]m just going to leave it for now
10/9/2020 got rid of const1 b/c it was causing issues w/ regard to behavior\
\>", "Text",
 CellChangeTimes->{{3.805027866337372*^9, 3.8050279142431445`*^9}, {
  3.81126029325657*^9, 3.8112603100606813`*^9}}],

Cell["Symbolic", "Text",
 CellChangeTimes->{{3.805458475398411*^9, 3.8054584771563425`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pPlus2", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"1", "*", "const2"}], ")"}]}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"p0", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"pTwoA", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"pTwoB", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"pTwoC", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"pTwoD", "[", 
      RowBox[{"e", ",", "s"}], "]"}]}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8042503993529625`*^9, 3.8042505653888483`*^9}, 
   3.811260312900523*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pMinus2", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"const2", "/", "1"}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"p0", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"pTwoA", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"pTwoB", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"pTwoC", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"pTwoD", "[", 
      RowBox[{"e", ",", "s"}], "]"}]}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.804250597517028*^9, 3.8042506447082243`*^9}, 
   3.805458504844121*^9, 3.811260315943576*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pPlus2Ltd", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"1", "*", "const2"}], ")"}]}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{"0", "-", 
     RowBox[{"pTwoA", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"pTwoB", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"pTwoC", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"pTwoD", "[", 
      RowBox[{"e", ",", "s"}], "]"}]}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8051122209196835`*^9, 3.8051122276684265`*^9}, 
   3.8112603167132535`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pMinus2Ltd", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"const2", "/", "1"}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{"0", "-", 
     RowBox[{"pTwoA", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"pTwoB", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"pTwoC", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"pTwoD", "[", 
      RowBox[{"e", ",", "s"}], "]"}]}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.805458364198971*^9, 3.805458371217493*^9}, 
   3.811260318222804*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pPlus2NP", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"e", "^", "2"}]}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"3", "/", "2"}], ")"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "*", "const2"}], ")"}]}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"p0", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"pTwoA", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"pTwoB", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"pTwoC", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"pTwoD", "[", 
      RowBox[{"e", ",", "s"}], "]"}]}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8042503993529625`*^9, 3.8042505653888483`*^9}, {
   3.8054585847594767`*^9, 3.8054586051447563`*^9}, 3.8112603211198277`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pMinus2NP", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"e", "^", "2"}]}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{"3", "/", "2"}], ")"}]}], "*", 
   RowBox[{"(", 
    RowBox[{"const2", "/", "1"}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"p0", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"pTwoA", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"pTwoB", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"pTwoC", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"pTwoD", "[", 
      RowBox[{"e", ",", "s"}], "]"}]}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.804250597517028*^9, 3.8042506447082243`*^9}, 
   3.805458504844121*^9, {3.8054585882842417`*^9, 3.80545861372351*^9}, 
   3.811260322930511*^9}],

Cell["Numeric", "Text",
 CellChangeTimes->{{3.805458483187949*^9, 3.8054584849238605`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NpPlus2", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"1", "*", "const2"}], ")"}]}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Np0", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"NpTwoA", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"NpTwoB", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"NpTwoC", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"NpTwoD", "[", 
      RowBox[{"e", ",", "s"}], "]"}]}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8042503993529625`*^9, 3.8042505653888483`*^9}, {
   3.804265818224097*^9, 3.8042658582539387`*^9}, 3.8112603253572664`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NpMinus2", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"const2", "/", "1"}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Np0", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"NpTwoA", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"NpTwoB", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"NpTwoC", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"NpTwoD", "[", 
      RowBox[{"e", ",", "s"}], "]"}]}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.804250597517028*^9, 3.8042506447082243`*^9}, 
   3.804265819043331*^9, {3.804265849802784*^9, 3.8042658603619843`*^9}, 
   3.8112603273836308`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NpPlus2Ltd", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"1", "*", "const2"}], ")"}]}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{"0", "-", 
     RowBox[{"NpTwoA", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"NpTwoB", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"NpTwoC", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"NpTwoD", "[", 
      RowBox[{"e", ",", "s"}], "]"}]}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8042503993529625`*^9, 3.8042505653888483`*^9}, {
   3.804265818224097*^9, 3.8042658582539387`*^9}, {3.8054585518729987`*^9, 
   3.805458565324188*^9}, 3.8112603285753045`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NpMinus2Ltd", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"const2", "/", "1"}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{"0", "-", 
     RowBox[{"NpTwoA", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"NpTwoB", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"NpTwoC", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"NpTwoD", "[", 
      RowBox[{"e", ",", "s"}], "]"}]}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.804250597517028*^9, 3.8042506447082243`*^9}, 
   3.804265819043331*^9, {3.804265849802784*^9, 3.8042658603619843`*^9}, {
   3.805458556854947*^9, 3.805458569002513*^9}, 3.811260329886806*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NpPlus2NP", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"e", "^", "2"}]}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"3", "/", "2"}], ")"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "*", "const2"}], ")"}]}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Np0", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"NpTwoA", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"NpTwoB", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"NpTwoC", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"NpTwoD", "[", 
      RowBox[{"e", ",", "s"}], "]"}]}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8042705087263603`*^9, 3.8042705123370066`*^9}, {
   3.8042705460567083`*^9, 3.8042705631588335`*^9}, 3.811260334967751*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NpMinus2NP", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"e", "^", "2"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"3", "/", "2"}], ")"}]}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{"const2", "/", "1"}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Np0", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"NpTwoA", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"NpTwoB", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"NpTwoC", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"NpTwoD", "[", 
      RowBox[{"e", ",", "s"}], "]"}]}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8045107895808163`*^9, 3.804510807983709*^9}, 
   3.8112603376746635`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NpPlus2NPLtd", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"e", "^", "2"}]}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"3", "/", "2"}], ")"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "*", "const2"}], ")"}]}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{"0", "-", 
     RowBox[{"NpTwoA", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"NpTwoB", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"NpTwoC", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"NpTwoD", "[", 
      RowBox[{"e", ",", "s"}], "]"}]}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8042705087263603`*^9, 3.8042705123370066`*^9}, {
   3.8042705460567083`*^9, 3.8042705631588335`*^9}, {3.805460062645707*^9, 
   3.8054600752485704`*^9}, 3.811260339336923*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NpMinus2NPLtd", "[", 
   RowBox[{"e_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"e", "^", "2"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"3", "/", "2"}], ")"}]}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{"const2", "/", "1"}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{"0", "-", 
     RowBox[{"NpTwoA", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"NpTwoB", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "+", 
     RowBox[{"NpTwoC", "[", 
      RowBox[{"e", ",", "s"}], "]"}], "-", 
     RowBox[{"NpTwoD", "[", 
      RowBox[{"e", ",", "s"}], "]"}]}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8045107895808163`*^9, 3.804510807983709*^9}, {
   3.8054600688215837`*^9, 3.8054600805000863`*^9}, 3.8112603412175875`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Verifying Values", "Section",
 CellChangeTimes->{{3.8042509111678934`*^9, 3.8042509160723443`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p0", "[", 
  RowBox[{"e", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.804250978897027*^9, 3.8042509817164106`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["e", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]], ",", 
   RowBox[{"e", "<", "1"}]}], "]"}]], "Output",
 CellChangeTimes->{3.804250998578761*^9, 3.8042512998681064`*^9, 
  3.811260369321168*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p0NoPole", "[", 
  RowBox[{"e", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.804251025443828*^9, 3.804251031301385*^9}, {
  3.8042510804897313`*^9, 3.8042510964978724`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{"1", ",", 
   RowBox[{"0", "<", "e", "<", "1"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.8042510362378073`*^9, 3.8042511011945133`*^9}, 
   3.804251307614911*^9, 3.8112603757199287`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pPlus2", "[", 
  RowBox[{"e", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.8042511050079737`*^9, 3.804251108324895*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"5", " ", 
      SuperscriptBox["e", "2"]}], 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["e", "2"]}], ")"}], 
       RowBox[{"5", "/", "2"}]]}]], "+", 
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["e", "2"]}], ")"}], 
      RowBox[{"3", "/", "2"}]]], "-", 
    FractionBox[
     RowBox[{"2", "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["e", "2"]}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["e", "2"]}], ")"}], 
       RowBox[{"5", "/", "2"}]]}]]}], ",", 
   RowBox[{"e", "<", "1"}]}], "]"}]], "Output",
 CellChangeTimes->{3.8042511481739044`*^9, 3.8042513254004025`*^9, 
  3.811260432657257*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"ConditionalExpression", "[", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"5", " ", 
         SuperscriptBox["e", "2"]}], 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["e", "2"]}], ")"}], 
          RowBox[{"5", "/", "2"}]]}]], "+", 
       FractionBox["1", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["e", "2"]}], ")"}], 
         RowBox[{"3", "/", "2"}]]], "-", 
       FractionBox[
        RowBox[{"2", "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["e", "2"]}]}], 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox["e", "2"]}], ")"}], 
          RowBox[{"5", "/", "2"}]]}]]}], ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}]], " ", "\[Pi]"}], ",", 
    RowBox[{"0", "<", "e", "<", "1"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8042511549755917`*^9, 3.804251164229006*^9}, 
   3.8042513392065887`*^9}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{"0", ",", 
   RowBox[{"0", "<", "e", "<", "1"}]}], "]"}]], "Output",
 CellChangeTimes->{3.804251164856419*^9, 3.804251340349527*^9, 
  3.8112604327831483`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"pMinus2", "[", 
   RowBox[{"e", ",", "0"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8042511746223574`*^9, 3.80425118249205*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{"0", ",", 
   RowBox[{"e", "<", "1"}]}], "]"}]], "Output",
 CellChangeTimes->{3.8042511966019535`*^9, 3.8042513613220634`*^9, 
  3.8112604617782516`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["p_0s behavior", "Section",
 CellChangeTimes->{{3.805458131978506*^9, 3.8054581378470683`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Np0NoPole", "[", 
    RowBox[{"e", ",", "1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8042568276925163`*^9, 3.8042568381737823`*^9}, {
  3.8042653935607243`*^9, 3.804265403430563*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAA03gmpeOFOD/xFKmramRCP0DQMlj6
GkU/GLGrMXeoTz+5vn5sdyZOP7hb7RjZnFY/5Me88kvZUz84qi/Z8MVdP5KX
GK7us1k/VkgX2PFGYz+vQMSZVudeP56qhex+LWc/UWPJuGGWYT+MhCqYj2Fq
PzrQM7CSGWQ/Sudcklcmbj/Am8M1jRl0P0di8/hBJn4/g4GLeIoZhD9Yj1BW
CCaOP2R07xmJGZQ/UoPCLzAlnj8IlEmh8PGkP9v/HBTdZa8/t9AyR0cerz9J
YJewb063P1iD3NrDi7Q/0LaF25q+vj9vsXMtmPS5P56iYpFCZMM/8pDWyAEB
vz9BgZfJEiDHP8jBxr/PPMI/EQ5o1Akmyz9peUkNWezEPy/LDcNIEs8/wQky
/6xtxz+xkGkj+1nRP6ajxP4aJco/xYm/XrNN0z9AFr2iU67MP2gsbuy2G9U/
LcfcuMYqzz+Ea1gKBdzWP9RAU+6p7tA/PaihR9G82D9sCmvS1TDSP1vAr0fD
d9o/y9hXvQ6O0z+V2KTtQFHcP1NGWOHk5NQ/oJdXK+ka3j82oItXoCTWP3w5
49Dsvt8/sMF/eQsq1j9fAfz8+8XfPyvjc5t2L9Y/HxKYpgrN3z8gJlzfTDrW
P/6R53Em298/C6wsZ/lP1j+OKsPlV/ffP+C3zXZSe9Y/m722FNEX4D9b2cGY
vYDWP8SUKpBUG+A/1vq1uiiG1j9coXvJ1x7gP8s9nv7+kNY/rWh8dd0l4D+2
w26Gq6bWP9pTarHlM+A/MOViqBas1j8NcjkaZzfgP6sGV8qBsdY/ggB0QOg6
4D8m2oc3l7LWP74dgaabO+A/ZBY6YQ==
     "]], LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAAGswtH7RR2j+fZclOh4PiP0qnANw9
Uto/KP/oo9uD4j8GNz08n1faP+2E/80mh+I/fla2/GFi2j/IyJRBvI3iP22V
qH3nd9o/wPrypOOa4j8qkXGB/c3aP8iIdxlSz+I/pYgDiSl62z/bpxtQSjfj
P/VjWupmu9w/MLz2nQT24z8LRIZSsRfeP3458p3av+Q/fBDlDOFc3z8MIVW0
enflPwy+KwDXTeA/2YEQ9tIm5j89dk/9w/rgP6+1cUul3+Y/nKSMoyOc4T8n
Lzrq5YbnP15VNM0JS+I/nZ3/ck826D+11WWTvvbiP40f8JBu3Og/OcywAuaW
4z+Ju65uzXHpPyBFZvWTROQ/t5rcG5AN6j81NDWRtObkP8Hobrn9mOo/3/KN
yaOF5T9s0v1X9hvrP+wzUYUZMuY/7KU9j4+j6z8m6y3qAdPmP2/Ki0vZG+w/
xCR10nCB5z8ng/2pVpfsP4/U1WNSJOg/RlIFAw4E7T+Mfo0k0SboPwkgSomr
Be0/iihF5U8p6D/rHAysSAftP4V8tGZNLug//2PwxoEK7T97JJNpSDjoP712
l1HvEO0/Z3RQbz5M6D8v/Uq1tx3tPz8Uy3oqdOg/Omitjf027T88voI7qXbo
P1uGWZiOOO0/WGTVq8h36D+F0abvQjntP/8TAnI=
     "]], LineBox[CompressedData["
1:eJwV03lQ1GUYB3DEBEE5vJFBQTREMJcAKRX4omQpSAqCZBKXeSFmaGSgA7Kc
1YZrCuaCRhyLHLEIG+NBLJeBJKKciwMGqMku/H4PihwhSK9/vPPMZ975vTPP
83x/K4KPex3Q1NDQcGfnbbWXlDWkaqkg0CtL9RJz+DVpFhVoq9BuG5Q2yizt
argbqKtCnOzwbvHPHORxPtENBipE6j/3q07h8KA1RH3FWAWvrQ9bzdI5lPgs
ct0QpkK4qUmh1n0OWY2xV/rmqxExW1RgYsFjrM7v9PxqNexLY4d0onj0nFeM
GH41gA3t6R1X7vEYfbhpqVB/ENbzXLq79QlfXzSvjCgfxJF1ljHtnxKWNJob
PvXnsGV7a9+okPDhSOtwYBAHh84hb3ks4bNliR3d+zms/aTFMyyOIDk2cLXj
MAcbrZQBVTxhub78vb9PcPC7XZLelkSw2LnVvSSBA/Xo9qUmE9Y/PJRwtohD
/JDpnsrLhN1thZMmbzhUnrxulVdEiMoNnWjS4BG9ws5gj4xwLWLtuHAmj97E
W0GaxYTJZYXD/bN5hLZa7Np7nSA9WKCWL+BhKDvhoSEnTIzlKXes4RFT6JBh
e5OQaZwrP+PNIyDT0Xl1DeHe4MESgS8P058MY6uYxyosivv28thcsVOwr5aw
Y7+0YFsAj6ZvFvwpukMYLcjJXBjCo0N9VdpfR3BzyhYXRvNw/Cvr29h7hJcB
v4V25fNo31ul6dpGGLk0a33Q7zzOpl0oqmQebzoy9UzGI7PHodGpnTAN22SS
s+9tyoMcOghzzWpkmgoeM0RL/zHrJLzb8/SlZQuP5Svt+x51sXkHWkaEv+Zh
05wW3fOEsO8X0eaJKR5L/ojudH9K8H8wpBOtQSjSNZOUMR9wuSlhEYO2ntTj
h2eEE2Zu5WkGrE9JxXGr5wRRz9HpqpUEp62rLD3UBEWgLF5/B0Er8p3FRkOE
W02h7o9ZDoZ7r22MYC5ztppX5Emo9VuU0MlcaJKT7uFLaDOwEl16wfavlJSK
ggnGbpECnWFC+K6EXt0IQoZdfUzVCMuXwjX30WmC7lyfLxeOEkLXzTiWH0U4
FLXJ+yBz8Nwz49tZjoQJdbu1xwi76sMMvj9HcNULuOA0TrB2+cJJW0qITGp8
8N0Ey5PMeGbHNdZXiFvAbWbz5cp6aQHhv43W9yeZjSa9vD++/vZ9heOZ16yv
G9uOxpcTHP29u0MnCZqrtd73URCaUj8aymGeSqkZXVVNyO4cvN3N/Oqks7CW
7dk2pT94+xShV2B/eWYL4aS6bInhG0LX1Rf+LWyvQvsyY2dmpZ5sVZaS7aVT
IQ5hvj+wpnjLY0KizVhGBXPD58/D5/ey/+rHWpN/me/czd7Ux/Z4zq6pcc40
oTzXtC5Gxeb8rP6UJ/ONxd0iz0F2b6TcGMZcGi/xWkGER7V3apOZi175Gr1g
cz+ffUiVx5y/f9HjylcEtfDi8WrmnObmLDGbY6ngAx0lc8Zm8ZFANpcnVS5b
1MzpxR4CG9bX4a5tnuPMl0znjEyzeuqGePpt/R+Nq5Pj
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {0., 0.9999999991903356}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.804264747086096*^9, 3.804265405827338*^9, 
  3.804265515069939*^9, 3.811260465818224*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"Np0", "[", 
       RowBox[{"e", ",", "0"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"Np0", "[", 
       RowBox[{"e", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"Np0", "[", 
       RowBox[{"e", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"Np0", "[", 
       RowBox[{"e", ",", "3"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"Np0", "[", 
       RowBox[{"e", ",", "4"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(0, 0\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(0, 1\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(0, 2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(0, 3\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(0, 4\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Divergence Not Removed\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8051969227740726`*^9, 3.8051969581068897`*^9}, {
  3.8054594489204783`*^9, 3.8054594619072833`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318519448951320385675257047976413268819406710008479421958327293`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.7695567233744214`*^-13 + \\(\\(4.163336342344337`*^-17\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.367876784470429`*^-12\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.805196964450637*^9, 3.8054594748424463`*^9, 
  3.811260466647023*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({1.1269007302813904`*^-7}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\(\\(-6.591949208711867`*^-16\\)\\) + \
\\(\\(4.163336342344337`*^-16\\\\ \[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.507415993203266`*^-12\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.805196964450637*^9, 3.8054594748424463`*^9, 
  3.8112604667089663`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
JSRvrmVFmaXDm/uT7ambSuj/1Bnn8g==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
ymwS2vI+NKasqeP/AEzwZ2g=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVlXc81fsDxqVklhEiCcfIFtEwzvNpkNzISGjIyEiEREiEXGUl65plRbmV
0SCFI24IKSVFMjvO+F4tdEvj1++P5/W83v+9/3oeJY9Aey9eHh4ezu/8v628
WM8YbEe6+Ce5uFTJJ6bTN/d6jMoaYisJCf/sm0KXFh5IuyW7HV1N1r9O+l6n
32uO9j+pZgMPm/c2LnMtdN3NkleKZPeg2sG01sS3h86zgp35S8EF9tMSHC/9
l/RnVFOcu5orPvd2/tCdG6XbeXY1uOe44zmt+9mDlnd046frazJkD2O11v2t
yr4UXdnsUmVboTe67o3nvfv6kS5SJXB5VuEIrJbxJe3Tn6fPSofkqJYdhbbT
ZHXQ0Df6SPxI6l61Y/D8RbNVn/tF9/yv7GHbniDM8n4bYjB4MajrQj+QE4x9
i87lNbfwgVHQZpQqewLRZ93/1fEVgWF/eK3q/lD073b71CcghmsCujrNhWH4
tXp+4ONXcWSE5qq8V4jAWZOpziB9aSy9bl2c6B4JIrZf+slJGURO8K5WLDuF
a8fnOrKGVsFzd8AKO7VoiD3se+c6p4BXCbQLbJ8YKPOU2tTuVYLa26N8rXvO
wMyqdC2LQUO+pFKsS04sdiZeU51rUUV8bHJ4kuxZLHYR703z1Ubzau+7exvP
on4sVsBkgy7+qyeztP0JyH0aErNccB38Z+YC7xf+ianeU+Zbvuljz343H0rh
PF63Hr7G1d+AtHnjKw2M88hRPrwz324jOi9KTZ51T4KgCBuHwzfBrPOxq3xZ
MgQrnp2wGjaGmpHRXhu1NATEbfjsPg+4PRXNWtWRBodVTwrDKgkKjnKeMX0u
gBnENLRy2gKBZ30VLXvSkXoh2r+gdSui+BNozjkX4XSmW2maYY7DJ97LnpfN
gneuXbaO3y6sX5wRWReUhYUZb6rDwxq8GYbDwx1ZUFddmZ9+yAaXqyMKdcOy
4WklePmlgS2GOIsVXvTnQOTEfI+QvT12u8uoKKTk4fYlwbTXs3ux5kPjWcvJ
PHxaV99alOEEKvrgu2DjfLze190YYeCMpMLSinZWPkbO/q0eEe6C9kFtDT/z
Qghxp7X+kj8AY5stund+XkLBRM1SHaYbBEYm0946XkaV5qGffebuGDz653v+
G5fR4SK1KabCHY3tXs43dIpR2fshmfeoB5wnqmR53hSjieoNLuI5jAx5o8Ir
m0qxImnMUdPVBwJZO0s+fCwHS++DxcDEMSxsGl8oWXUF37yKhMP2B2JmJHyv
w7YryKv9nrhoIBDP114Vvpt1Bf9Uenj4ewXh0v2lYac2VsCrWimt3S0YhpNt
VktPV2JC4837UwEhcDOgz8oJVGGK/+w/tNGTcBgcsOldV4WbX0O01TTDYREV
cC3apQqt/5QEXQ4Nh9ajQtfxqiooP2gr/bwsAvMuC50V1n+D+WO5rvL2SKTE
NhTpZ15Hpg/3S+mjKNQ/NdixY001hFTPdyhLxCKNTVlqW1SjVGHPJ1V6LLx5
K63Ej1XD4PC1Ze5+sZA2lLMZbqrGjxpNxbi2WNzvjq2q161Bm8mT74HhcZDT
86v940kNjst/Hf9OxWNozrglZFkdtm25FznDkwgLXhnirVQHndehnBWGiahb
PsdwNqpDVurisuM+iUhaW/3Q7GAdakLjvg0/SYSxi/Ij/ht1sD7n8Zdr8Tnk
PRDuLdh1C3xO7RvUbJLgHP9mqC35Nvw01xoNvEiF2Jiatk/JbYjbL5VeI5mG
LtPg00L1t/ED6YNVDmkwnudTtJu4jUXuKsvTn6dB7oie19tNd3BjZKL9/MsL
eGsT9/6/d3egbf+adnk2HYdXqS/RJfUIjDm3iKmYicDaEJ3c2Xt44rOF7Bj7
CzOm48+7BBphmZhz5zFfLvw7bSIXVjfCx/kPc3+tXPiOanS4mjdCx3ZJk+DJ
XLgtG3NTzWnEIdkwm5uiebA9siurbuN9nJVevrTYIh/rlFQXeiIfYEj0bO6G
7kJ8Sn/ZuWhRC3j6GF1vV5bggX8tpqRbkHM3+W+7dSVItEy5+0i7BTv2Xcl/
aVmC1Txby5OdW2B15lOldGQJzANvxEjVtEB1ILE2cKQEPWpbC7L0GOgw01qV
WFkKRT5Z+6tvGchRCDjovLMcna2PWvpMH6K1tuXSp7ZKHInYucyFakeAgcRw
fHA1WgUNfl0P6IDfj4PK7v23UFHW/nOV6mO42r8fqhhqAJFuKnW42YPr5NuB
QYVm6HS8aXik2YexzCWmM1QrXhCHmWszT+G4+WB98IF/4C90tH9gXT/WmupJ
HJzqRPcrp6blac9hKRTw+aRMLxwsnMenpl6AjyXA8nz6FBuKk52KVV5Coq4u
XE3hOcZ+Zr7wjRlESoqno8PQAN7t7CuTbnsFKw1TpmXpK9TkjUY8UxpCxvdX
w/uoYVw5t/i8RuQwstunxs+HjmLOcx/H+/4bSHUxFOoSxyG8/U/72pVv4RJR
6HuwahJRYu9Exg+Mokf1fhfP0DuINGvxDFqPIXpEY2uSAQtmYbt/tH0bg4DI
tvj+XxwUlqeUKReO480Z1fRLk//C1dGwV/CPCdgVlR0Srv6AOwNemc3zE3hY
c1/fN/cTNvfU8DJzJhEsaKZ7869ZKJp7z2Vun0KlSZABTfALjAyNLt5mTsHP
TNTvbvFXjH5K7SpLeIcL2Uk3khO+g1pvlyBrwIRqik1suQQPUePqcBY9Z0LR
gHXngjAvERHou3J/gIng2Z2v+iR5yWeVIPfQV0yYxWv4Sa/hJQzXulesESaa
NtfM313HS/b1b+joYzGx2WrG32IvL0m7h/Kin0xMJjk9KC/lJXOJdq6bNaeR
E6Rhnk4Wk3aV0P6g2Gm49wV69mUsIfGVjc7f46ch6MFeqVG0hGzV5BlN/HMa
Yakqq5Mql5BWvWTupeRpbHGjGXg8WEKajUuW9GZPQ43f2u8ocwmpt+3doFE1
/ft/yFuWCR+pilItGO+fRuYLoaudFB+58GLA016FheGYIyaCvvwkJTpV5Zka
C49rGwRNTvCTJHXzd7s1WKj67icQdoafJETd9rbWZYEt49vCn8dPTqlkHrHc
xML11u/6BY/5ic8J20D6LhZUbER3JesJEEh2R2qeYOGM2qfsNzyC5L0D4yJv
Owvb9NJoI21CZL4ywb/+EQthIivWfnkuRH4uWO3w72JBw0wnXWFKiIiUD3wf
eMJC2dJFwwVLhIn6LMfn2msW7poYeW+3ECZuWVJ02/csFLO27vXuESZPX/hx
ilaxEWJ0ozVqSoQMqq/7x16ejQUdBemkeRHyNmruMr8iG7Rf0T5XBZYRSuWM
Y7AqGxEvRw/K6CwjAqHZjO3r2PCbW6ndGbaMbJFi5HDN2VA2dg+OWrac1DlK
bdsczEZX5lo221KUZIjGsFpC2DiwM6CFs1+UHO9ipVqEsfHxWI7+j2OiRN/s
wSuHU2ysiVlt6ZQtSmpUPI8dS2CjcU37m4kJUXLzc01eWR4bDY5SmXeJGKm6
uOvDsodsfHXIvBfLFCNJf9zNzmpnw/B0+WHDj2LEj0/RRK6D/Xu3/eI+LogR
jYjPCeo9bBydkrZLFhcnV93y5ba9ZKPNfHSEbiZOKvRYFuEcNorPEvVbOeKk
rDe+aEKCg03l21S22kuQFP2FA5elOLA7wiftfUiChGUfX31AhgO/ycHGXH8J
YnnQvWBAngPlqbwozUQJMkPR8zrVORj/yYrnbZIgm0S+Zd2kcyB4+oxXvtYK
0msVlBLpx4GJ1sYBmpQkuXtz+o+NARz0vHKR2K0iSYolDgnPBnJwfHeCR+p6
SXJ8yDopIJQDBfXv9cReksj4aZ1zO8OBFqu+KiFdknicZ8Zb5Pz22yNmdEVM
inzpOHBK4iEH9QXy7bqK0mSNg0Xow3YOBCxubkjRlyYWb/UCj3dw4NRbfvDX
VmmSM8vr2d/DgUzqrcNrvaWJodI1q4xBDiLeD92MuyFNjkfOyUr8y8Gj+jjV
JLKSUNppDeIyXDDGxL+JRcgQyYaTda2ruNh05T/GyVQZYrLN/XqwPBeOwbIj
X0tkSJKLYfEzGhdprxSmbbtliMafQ4kXdbhInb8sb6sgS7xH1ZzEt3Ex/exC
dVuPLBm72DIndowLqftBoTTIkbE468aMIC6CK0IXWh3lyHjIcLRkCBf/QfBj
jL8cmXD8wi8TzsVm0R1SzvlyZFJWb5VCHBdFizW7Y77IEWbJJbpODhcXHF5o
TNavJtza04k7m7n429vJvdd+DaFKhXd1M7j4cMGV1hDwmzPzxKzbuJBtMh7r
OvebQ+/k2XZycdLJNNuzZQ2Z2fzv3079XOBa7HS4rgL50HrgqRfzt6/ZlLSJ
kCKZf2YiG7ecgjHddpi2SInwBAx+2SxOQfdrwKlmCSUiJBDy8uMKCvUWBsvD
VZTIGnpVprsshf2tKboWlkrEvEpm+RYVCrvzFs7svahEsuLmeHmMKezwdLuX
rEEjl+QvjtebUkj72n9O04xGrjZoMwJB4fW0hDllSyMPZjxPj26nYLXQzHwd
TiNT+/q/NO+m4CoS8NDnMY2sX19NnfaikFOTfqzkhDIxfWLVbeRLgZKJkC5I
UiYWR5jX/vWj8Cl6vK2pWJnsuyzvczCIQpI6azKmV5nECaeMm56icNWiKWqx
hgrpn/R9uZBOoVx4v10gS4UEZdEYEQ8omBzKrT6Wokbssz2OLG6hsKhLfmNR
hRoxyimVSG2lYDi8Dj8ZauTbXzSv4kcUjqy/teAyr0YSCmhCHU8pHDDqaUr0
XEvyS2l7JN9RoJ+yeQtLdRJV5vGjaJqC0wqXkmEvdXKovLRiLYeCVubFM7fi
1YlKBe2r8XsK8aPKVqsY6uQO9SRm6SyFR/nDLanf1Mn/ACMu3HQ=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
o15pkvsopSLwLxVNiR9rIv5Ik/8DDjHr5A==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
pPe5IlTRzaI+/nNl6G9x8n9WaOHM
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Divergence Not Removed\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {-1.0822720791091134`*^-16, 12.48936271243782}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(0, 0\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(0, 1\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(0, 2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(0, 3\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(0, 4\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.80519699945335*^9, 3.8054595209121556`*^9, 
  3.811260512740672*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"2", "*", "Pi", "*", 
     RowBox[{"p0", "[", 
      RowBox[{"e", ",", "1"}], "]"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"e", "^", "2"}]}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"3", "/", "2"}], ")"}]}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"e", ",", "0", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.80486830753169*^9, 3.8048683806553345`*^9}, 
   3.804868460337556*^9, {3.8048685952882805`*^9, 3.804868595511749*^9}, 
   3.8048686472099457`*^9, {3.804873045848398*^9, 3.8048730737891445`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Refine", "::", "fas"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: one or more assumptions evaluated to False. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/fas\\\", \
ButtonNote -> \\\"Refine::fas\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8048737432930417`*^9, 3.811262333316372*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Refine", "::", "fas"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: one or more assumptions evaluated to False. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/fas\\\", \
ButtonNote -> \\\"Refine::fas\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8048737432930417`*^9, 3.8112623333763146`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Refine", "::", "fas"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: one or more assumptions evaluated to False. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/fas\\\", \
ButtonNote -> \\\"Refine::fas\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8048737432930417`*^9, 3.8112623334422536`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Refine :: \
fas\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8048737432930417`*^9, 3.8112623334912148`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Integrate", "::", "idiv"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral of \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(e\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((\\(\\(-1\\)\\) + \\(\\(e\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^2\\)\[NoBreak] does not converge on \[NoBreak]\
\\!\\({0, \\(\\(2\\\\ \[Pi]\\)\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Integrate/idiv\\\", ButtonNote -> \
\\\"Integrate::idiv\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8048737432930417`*^9, 3.811262333972904*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"3", " ", "\[Pi]", " ", "e"}], "-", 
   FractionBox[
    RowBox[{"9", " ", "\[Pi]", " ", 
     SuperscriptBox["e", "3"]}], "8"], "+", 
   FractionBox[
    RowBox[{"9", " ", "\[Pi]", " ", 
     SuperscriptBox["e", "5"]}], "64"], "-", 
   FractionBox[
    RowBox[{"19", " ", "\[Pi]", " ", 
     SuperscriptBox["e", "7"]}], "3072"], "-", 
   FractionBox[
    RowBox[{"133", " ", "\[Pi]", " ", 
     SuperscriptBox["e", "9"]}], "81920"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "e", "]"}], "11"],
    SeriesData[$CellContext`e, 0, {}, 1, 11, 1],
    Editable->False]}],
  SeriesData[$CellContext`e, 0, {
   3 Pi, 0, Rational[-9, 8] Pi, 0, Rational[9, 64] Pi, 0, Rational[-19, 3072] 
    Pi, 0, Rational[-133, 81920] Pi}, 1, 11, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.804868367851924*^9, 3.80486839153905*^9}, 
   3.8048684703823*^9, 3.804868549196122*^9, 3.8048686007402196`*^9, 
   3.8048697638237305`*^9, 3.804872733132324*^9, 3.804873066638072*^9, 
   3.804873853293836*^9, 3.811262455402872*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"Np0NoPole", "[", 
       RowBox[{"e", ",", "0"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"Np0NoPole", "[", 
       RowBox[{"e", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"Np0NoPole", "[", 
       RowBox[{"e", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"Np0NoPole", "[", 
       RowBox[{"e", ",", "3"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"Np0NoPole", "[", 
       RowBox[{"e", ",", "4"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(0, 0\)]\)(1-\!\(\*SuperscriptBox[\(e\), \
\(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(0, \
1\)]\)(1-\!\(\*SuperscriptBox[\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \
\(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(0, \
2\)]\)(1-\!\(\*SuperscriptBox[\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \
\(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(0, \
3\)]\)(1-\!\(\*SuperscriptBox[\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \
\(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(0, \
4\)]\)(1-\!\(\*SuperscriptBox[\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \
\(3/2\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Divergence Removed\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8063233488516035`*^9, 3.806323398730692*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({1.1269007302813904`*^-7}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.7655321649101552`*^-13 + \\(\\(6.938893903907228`*^-16\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \[NoBreak]\\!\\(1.3677552771139446`*^-12\
\\)\[NoBreak] for the integral and error estimates. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.806323402309922*^9, 3.8112624571699753`*^9, 
  3.814275061436864*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.806323402309922*^9, 3.8112624571699753`*^9, 
  3.8142750615097904`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({4.700019483074162`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\(\\(-6.522560269672795`*^-16\\)\\) - \
\\(\\(2.940356291780688`*^-16\\\\ \[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.1433377659527205`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.806323402309922*^9, 3.8112624571699753`*^9, 
  3.814275061555812*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF1A1Qk3UYAPANMEE+JC+hUZoQeITMCBQPUx9KhAOFFCSoI1wSGGbyIXaN
8AoR5FPkILJEDx1+tDg+bAQVML5OELYD5gaIi7ExvrYxkDm8AkbQ++zfe/fe
/3733P/jfZ7n/zqeTAiNNaHRaKzVd20Mip3qb5kOP7COtvbMQUZ63te5jEtg
9Gcps4wcRgmYoPeGvLezznATNCtrzyyYlwTemntWATw0y/PA89fMuXAWXd/n
GRCwtRoOoYf1e/nnrB8AFx2ZIR1uz+PBL8b9HFzNdvrWw7IJ5YTac8xrz38H
xXrKHo4ui4LURthiS3n+6kAXnc6HbhvK29YxQu+PtJDzd7U+5PfuawMz9LUt
2XElJe0kHs8OtP5I00HirRaeK5VfdoIpmvfhoiHmURes4HnvcjoMDi7dsIjW
SVuO1sf3wALa167pdliVgOTnN62AWaARggLN7JQ2PHTrBRF6t4h156X3+6AJ
LfYN0/6s7QMOutzlxCi/sB+y0Gc2fCGSeIjgFLosSR6QLBOBL7pnKKLJ5spj
sEMXbozsZfuIYc5AOcw/Uq5UikGC9tMllbVdkoAA7V2eF1HuPABKdF7vxlIz
0QDswfVGDcXiz78dBC36ZMU7jeA4BLmYr/HAXo5d+xCw6ZS7kwZtUpKfgJUp
5ZofZex+x2HYV+lmWJvvVpSUviwcBo05Fb+TbZrzVupTUFtTDl6o8ulykMKe
DZT1MR+r4v6UwnWsN+144tb8+L9IvSz9skJr7UeI/bh1bwf+MULqm2Y7biWP
kpH6B/nfzApYkpG4VfMO2mDwKPH+rz5Ybv9nlKxXVpHPebNMTrycxmoo1cmB
jo4O3yW0OKyAJcxP7uZgD2W5gvRHnSS2uHlBQfL34qjlYZH/GCjRPoIak4nS
MRhAV2ZbLjXOjEEretuhOH2xn5L0B7cx+GDF90rIMPbTrt1FvAklRBn3L/6U
6e49Du5o2XzBI07mOMxjfeOKE+6NPB2HGrTG61gmw3MCktE5hfz6gosTEILe
rmaq6I8nIAKtv3ws2sdtEp6gO5zPixLTJ2E75oOb5nJdLpqEn7AfCsWSmFDn
KYgxowyv9KS6pUxBiAXl2bCWIpOOKVBhP/SJT6tuOEzDM7zvD8I3H/RJmoa/
jd9fdGTOum2a5JcjzLih2KQiFgYl5qee/t8vOqO+2dSmIvM17lcaXn5VDTpj
fxfx9bZn1aBGq2svXA5sVpP7utD/LuOijQbuo728qjUXYjUQgk4scWphN2rg
V2M+apymqqxnwB5tL3SyVUbPgLexXv2nsr6rmgGqIecgTFK59Lphhpz3tsM9
XtpxLem3+RO3zki5WrBER7Jc2ecXteCK5rOqM22OrN77JWr+Dt9P9q+/u/pf
wfV+eMNSvzZm6q7+538BZTlOTQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
ZzGzP+r/AbPb0eo=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
NElxshT/zBIVj8TELf0//g9S6hd+
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
/n/+D1XCucU=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVl3c41m8bxhGloomQjJJSSCRSvqeUMiubXyojo4xskUL2zIqKMh5UdpQt
e2ZTVLJHxPNVIWW93r+u4/PPfZ+f6z6O67gvPqM76iZ0NDQ09rQ0NP+vSibf
OyomtYh6NqmfgnSPSyeytI0GOE5A4gOjn9uPQzJsWz+G5nGcB9oDuZUXzWSK
3j+wdBa4hGWF53ZbdUJlRE6xpDzn0MTJp9vl+hdfytDsnoxc49FDmg5LuNS5
MpmO6bKHhgLXkcYdb9iu3SqjZtxYaBhtiFyazBgbzj4Z6XbxnAiOmzBhe2H+
enFC5oDMi5fVcabwntkh1yv2W4YpjTF+jucWLrbfG5qXW5GZY7OPPkixwNlj
4dPFFgzEN69vIdoC1jh6V5M7RHsbYbxIqarWtEGJTnT0y1EWokdEj9CPtsVD
qkaaMCcXoWKyrXiuxw6FA3Nsct77iYrYaokQDgccuvJI5PbiIeJE5903B686
gt3m5C7jYBHiNaOI8Ps4JzxxQ228mDjBjZFX2v3O6BAxyzn8UZKIcHzCT/K4
QETGPS9KTobYmKGa4Gfoio6Vug8mDWcJ12E6Ll7KPXAv8KrftpAnqOyFMYWj
btDpNVWyiFYkjC9b7VYTeABNwxN5W7UvEb0++x9Nmrlj0zdx/vKvaoRAvwVD
paYHhnqM38mNahIGLhfOhcx7YMvPobAiZV3iGQufp160J6rzWB5FcegT3dlL
7w9KPsSrJwNH6o4YENuUPy3/7HkI+dmYzHYvI0JhPEf6/V0v2DjQ/2TmMiG8
PIPuBnJ4Qz+Rcan2jxnxnss0X7vYGxP139/e3GtBLBbIzu2/6gO+f2IzLkHW
hJjGXjFyyQcRIb6v9QVsCUvq/J2SOF8E3uE8vXLcnkgNaM/0k/HD882cxlwW
jsQgf/oPjX4/TBz0alDsdiY0rxqYTfME4MWF8kdmZ+8ToQvSKYUVAdjPEWdn
ftCDaAhnHfE2DAT3lMWx5/WeBJ3wLK8aXRB21fcm1fl7ETINTdf3UYLQzVdu
anTbh7hrnBI3eS4YzOK+W/5Y+RG5q+5f3o0GY9br6C6WxwGEgISE9iWBUEwH
XjqgrhlKGLRvj+KsD0WCQJHbgHMYEWsx1TFu9ggTOv/GUr6EE4wdbanlmmEw
CeErGhiOIlK4y2oPpoRhT7dFN1dgNCFnmTYaNB+GPjLzyoriE8Jtk89+3ehw
NBX5rlruiSM4tOzOvh8Ph8SmvpRJgRdEftINA37JCJwI8FGxE0wgZmWkX8z2
RIDmYlOR6MMkIiToUJn24UjEZKVe+FdLIY58ZukrvRuJ/rJbR1k4U4ibDiRH
AEcU+p1FSo3mXxLiGyJcc22isKvRqtgv/jVBF3Hi69f6KKjYWUe630gn4rNd
4kScHoPlh2lA74FswprgWtFpeQx+0b2f+6JyiDMt76958kcjp+bZ+MnkN8SX
qQ083Z3RkDbPvVk4mUe8ckl1XxGMQQ5FSDCD9x3hzKg4KOAZAzF1lW1JJvkE
i0BoosuxJxjsO9wos7eIuGzIzs8T/BQXB72Hhc+WE9yzxd4KI0/hEv3GZIdr
BTH94NqYrfQzyPxotFTQryQC45JSa74/Q3iIic/Q6WpC96j8JipiITMvdaTk
VA1xqHjCbE9MLE4flPI/f7aWqOkRErwtHwd51cu0Btb1RKRpW0BkXBz+mSS0
2kQ1EEbztlOlv+OwJGBaJFLbSKztKkjfnvQcQmRcXsHFZkL60lmRd6svsJB8
peHwdDvB+G0ktF8rHiqv/yUFZ3YQPRa+5KbMeGRw7ajRduwkimtMdDOFExDg
yf47g72b2M9UwCinl4C/C8aennPdRIAGY9En7wSkvyjWVu35SOgOp3HQ9CWA
M2jDRoPcHqJccLkxalMilLd/vP0rrZcQsFV1FRRPhKW/vtDu9M/E/Br5RT0w
EU03JBljq74SEfsk4lKkknBv1og9WHCQ+HfTV0X6ZhIc6DRtJOsGCcOMnuXW
R0kIydMSUDIbIkRPu15bHE+CTlq5/t/8YaJFt5xb+TEF707S6XaFjhEnEna0
DVRQoJCokcukNk7ETRi6O0xT0KavnafHPkHcdqIffH4uGbYsgUb++d8JxijF
xNmfyRCdZGIuEJ8mlqSGlhI5U2A3nMF0YOcMQf12V1vjXAqiB73ux/6eIboO
vdqaH5UCplspj9bqSeJFyUane5Kp2FT0p+R6708i3OBFu5BBKp6W0z38T/8X
4c1w8mi/fyokjwyeFBr5Rdy6bDIo+yUVicOJia5/fxMnRqqVNt5/ifqDU8MT
igvEIf+rKQUpL9HHv4mxYGyB4BT+vWbe+hI9WYb6Od5/iDWn/e8+8LyCrO3E
FtXmRaJpiydPeNUr3KSfKjbyWiIMxIi5vYxpaF1wEbNuoYFGz8dLLaJp2NlU
+lNekhYX3KxeP9BLg5qFdwszhRZH6+KuD6WlYVyK/pOPBx0W9JYaUlXTwUp+
W63QoMfkasQBXad0VGnmSla30KOPcuTB5vh03Lj7x2JckQGVM3rilrPpMGBI
GnilsBHBnoXPj0dmII+rPqLNgBHuAlcWh0syoMnMwRg0zQi7DxPqUaMZOB+o
E/7MdTN0WPcw/pHIBJ+5DEv78y3Y/9rRrrQ3E2tJP6Qv0TKjoF3s4kXubDBK
73UB306ETk4rCF3IxoIus5G/y06Y0r1U2mmdjZ07OJcOdO0E24m9l76WZWOD
eeMLg8BdKPngmVYgkoNf9wUkL21mwd5jt98ot+aAmxogtqy8B76nL4oRwzmo
5XzZs7lkD35d5M8TXcjBzyZe78Sj7Ggy6H/Lyv0Gc/N0Wvd3csA1Qr1wwOoN
+F0ljFRmOfFlXrrcnjkXN5j/BHmucOMCHbusKV8uJg+xaE/48iB323yFrkQu
yq1vyWzezIvAQ9lVMtdyMVUVyjEazQtpvQN1mzJzkSJ5azK0jA9PS7e2xKrk
wSo7j9dWih/0jd9VQw3yQFbSOJ8K5ofNx9pWD4c8HGag3Us/xA8Fqnu7SVwe
jklK3H0VchCLPHNdx6bz0PZe4rDZbwHoevV9qQ56i3zW+LePfglix6CAkFni
W0QJT1bsMDiCxjO297cUvIV9aYf9ZOsRSC8w8KoNv4UXy/fPGTlHsffWMZN+
qXf4a3QwvNFbGP2XHpKLY+9Ax1CtMFkoiuj0Ztm4pXe4cJzZYfuSKC4z7onA
znwoPeU6sChzHBWV6Sd8z+RDXJBrnK3uOBJPfHTZHZkPr7RM6bwBMdzkPEwv
IluAXqOgo+9OSYDL2U6rQ6sAndZaxe/8JfCxqzTVwaIAfwMq68N6JXAhRE2x
JLoACx4lAX2uJ3GI5l6owkwBRspv8Sw0SmJqrIXd+FkhttAw64VHSuPOG3vh
J3NFKKm/V911RxbUM0NdjYzFyGjZGv41SRaWDZdcl7iK0bCktqb7SRbmA4L1
1+WLEarY6F5AnIUB86DBwehiuG8xcWJjlcOVWypRuZIlMPPWmFjsPYfWuSLp
UeUSPKazMs3afR4qHoeGWA1KsH14pnL00nkoxNCJuPiXYLND8/SnuvOQrS2s
x+cS6PjbnB0rlYco38GlZtdSKMXbfFSpuoisjIjE1dBSBLtK7jNjUICQFI2C
KKUU9hMgmRUVcPjy16jID6V43DsgRN+pAN774SL/cZVBepGP7tWUInZ+XjGc
KCvDwwVPLidJFfwK+9RAS1uOOMmTWvJJV1Bq+QajbOXgOjzRstB+BX4Kwfl1
QuV4UhqgtplGDVw0cslBuuXI5Yj01LihBvk7me6sOeVodKZvDtyvjmYBudio
YxWwuxBzbLFEA2+isj/5SFdA+Gvr5z+zGoim27fLWb4C6oxsbQYCmjDs/+Ov
d7UCpzwfvrWJ0MTC40wnbr8KBJp/Eo65owVeBg71V/0V+MO09aMjoQMGe9+Q
p5MVuBb6r1LRVQdTg78bAucqYGk+5/4oXwfvSlthtaUSxoPdT+1EdaHk4C0s
drISqv2h7qmCenAYIRlLQ9ZZhK8cYlfRUFlX3namCg+sVr9wJtxAavPyaMjF
Kpwa3/v0y+QN+PSIbVFRr4JGr20sE6cB5GZeaDaYVeES090XW0wMUMruPFkR
UYUir8WerasGyLlzaHfu9yq008bfMjhjhCf7/E2joqqh085zXm76JpwOvw9S
j6/G1pnPhU84TKAlPpezI60a9CwPPCQvmmCXosFScHk1Bil/jl6mmCDYQSrM
Z6oan797/6ReN4XHh+9FTrI18ObZ7So6aoZbLorMetM1KOLtrK46bIG0vTuv
XV+owXLM4W+rVy0wXdabYUxTi9dbbi14PrKANZ25ijVLLUR/ivNc/2MBhyDf
IK8ztRhqit/q2GQJ9+fVm7OCa3Gf7Wq0xgNrPK6U2bhBuA6ut9wizm+3xSdj
Bm1GyTp4jwkshArbgn1jSwrz2Tr4yR+voVGxxTMlfXl2rTrs/fSJ+2qALRK6
XL2F79dhnO+4CpXBDuljBXS6LXXg3VAQmrbRHpWbxdYyrOqhaHbtrv4hRxzW
FC0IvFsPusHLMp2qjgh7IXLH3KseOzTe7rvn4AgD8aMDB57WI3Hjao9plSNW
9fnLn9XUY0yvsS7NwAnSOWzu/nsbcCrom8rml854q720atzYgB1y03UK+q7g
Svybf7a7AXtZ1ePsA1zh9eOPNc9AAyJ2a/d8yneFusdc/5e5BlwTei14cdc9
zL6eea/G2wieujM/uz7cg/DKwAM4N2Jg47vcasX7SKXUrHIebELC1kUt1lMe
sPHRHMKxJtAvcTPHqnngtNlo9c1TTeBiXn5z+rYH2o/QB2SpNmHj6tLW1lgP
/H1zbrecUxPcZgN+S9F4QqWi6tCt+iZoh3QflWz1xO++iisFtz5gtCraV93d
C+/fXxHvs/+A3w8lInRjveCfMMhK++AD6ksoDfcKvMB1k+arUsQHvL26Y5Vj
1gsXfsCkv/gDzinbexcYeePZ3/cuDEzN2Nw42Oqr6gNZtrIkjaxmJGpHHZg/
5Qf6x6x35AubofbMk/OAnh8adluflqxqxvWLihfu3PXD5Z083ZyfmjHznNbT
qMAP15k8GYZXmhEQ6m6cf9If9+jkzW1UWyDmNz68/3QA8qnNwiHTLeAnJw76
XQ2CcH1fYd2RNuyqEzc8u/oIbFSLmTCJNoxSvq9ZsYSBhnWJ76psGzYGhya0
CYah24gjiNRqQws3Sdu+vne4rWpdY/dsg2mciUtdehiaJdpob/e0wSkz7Fvk
tfW9otMgZaNcOxR8lh+stEegW1aD+praDmqsZZXd38f4Fz/yPPd3O/Q9Y+4b
7IoG35q9asliOxI3OSsbHY2GdVlURjNdBybWkuWSrkVjk/Sn2yRbB74x1j9m
qV7fA8T1Jk6gAy03SrybwmOQcPDGYPmjDmTxHdpQRDyF5RaLzo+inYin3t4T
0BuH1DK2fKWTnfBn0J5V+huHAZuqp+WnOxGTUkQV4HwO9R4Ow9cXOtFo4+on
rP8cUskNpJt+J5hbDPWchp6DnhBg5vfvxItkpuW12ReIsx26aDfQiWuqSld5
IhLwoVenbFtoF6rpPVkHqEl4+GWC9XZkF64tGNOq01Eg1edsXfukC255fS2d
rBQkD8TwuFG6UH+Ylmv1DAVu4z2ek4Vd0D00yrIcRIHwnM6FmpEujAtQc58K
JePRdt02l1Pd8Ki+ceD+3RRoXNAdGh3tRneu2+yP069wMiFIJ4H/E1L5Q8JL
GLIwuBrZbe7egwp15eknybkYU2yjsFX3YjvveSsLn3zkPB1w6eD7gubRjb9e
XixBiv+GAEHXr+gRehWrdL4C88b/TZmW9EFN8O4xn6UqbD3vq/5mTz+8ewMu
La7PHbcdY0xD+gPYkhdYpe3VCKb3R2l6VAeRkqq8KXq1GTJOl1eq/w3CccpZ
ssinHXHJwZQDcUOIqMj3Hl/v43WtEy2blYfBdize6mJPN959NIl8vzCM+Lk9
Dr5SPTjVnEM3Hj0Cx7VvGhr+n8ErbzofeX4U9jtHjrDx9kHihET42/FRzNmn
PnGL68fAr5BGis8YvPadtWQOHsS0uJoPh9g4Hp4Zn98+OQSBH8JTtF3jGOpP
0DwsOoIafsdOG88JvOu4r2ATPopH3R+N1fm/w/zflINSzxhIjYpwuprvsP+h
UnBuxwRytVjPnbKdxNlrGWFGet9BafF6PrxrCvKhY1Vj7pP4U69/b1fVFCIH
3tMvZE5hMLx8fof1DxjEm+/7VfkDCx2nOR5um4ZfU0asYNY0bKL2V7iUTiPe
6vQoX9QM9rTs3zF6fQZ9K/6WTy9TITXf/dvAcAYt/JWNsupU6O7z6/lmPIMr
rVoW45pUPLP68aLHfAbciRdchP6jgnvbW+EPdjNYS+PLodykQuCyvHKu7wyc
PSwZCRcqJDrMfD2yZqBY9leTO5EK7b8ct1dyZsAhUM0dQqHCia9Z1TVvBueY
tDj/pVBRaCvK6lA4gzeCd5Nb06g4s+svxaxqBhLsp+cM31JxXiOw8tKnGew8
sHtFtJ4KjY8Zy1yrM3DMkfOy/EHFg5eW/9poqJAbOSHSPkPFKxehxYcbqBBR
vJp0fJaK5X0Zv78zUrH5NPvIzBwVqabpU293U1GP5WzlVSr+/XndqyJIhfWj
oqrYHSSSOF++dVv3zn9QQuMvTqJ52jT3mA4VmzS3nKFIkPjzXiBnWI+K9OzG
g6WSJFSMU9MVblBhxU1HO3GaxEJ6ShLL7fWcktOlvOdJKMkkh2W4U9GyUOx6
QJPErxuJln3rnsutodI37EjMxzBIGGZSkazP4r3dgcRi262VsWwqPLJ4Mssc
SaxBLJRc78M5M45nu11IMPFWZ9OVU1ETr1+b4k7i4ODor8NdVFS4B/kZBZPQ
NTjs4rhERYJxhP7JZBJXnwSf/bdCRTj3m+cJKSSut89udqchcW4hPJbxJQkT
2aJn/gwk2i4rNHS8JmHHq1Qau53EUqVQuUI2ieBBi7XKAyReCVh9qy8iUW6Q
7bNNhcTmV2Hn15pJFLdZKvdfIsGY8mb980sinziyM0uNhKTzyBG3NhIZXClx
qjokOLWWKNMdJJ71PssLNiKhKYpvLz+RcLziO7Rl3Ytnuvyn1wAJm/JzL7/c
I8F2Lyw5bJCEpQitVdoDEsIPDyw/HSJhxOS2qOhNIv6Bg1fSCIkrDbbbAx6R
ULf/oRw4QeKo7DWZTakkhJTHs7KoJASyOTf0vCIBcZ1HD0kS+7l7G1LT1+tH
2Vj1WRLsy+qaF96QaLLPYpz4SWJjoYKFTykJc+b6zwNzJOgObTyuVU6i/vfR
osh5EiuPqxf4q0hQPDW0zy2Q63OBeFhTv/4OR2rcH/8hMXTsxNMNXSQ6W7iP
bfhHou/Fz+tdH0k4LRUnRaxzL3M2P6WXRPrPpm37lki0/hDMkesnwawrIbV/
eT3HfxOOu9Y9vSmvn8etc21j8unhdU9rXiXFnSskSl/y1HtOrp+fmWH3fZ0L
2b4Fq02T8KxNUFdaJZHn80ydb92zQ5VTImWds+Z02H+uexW/sY9ZXOc0Y9b+
inWvIN7BtnNrJFI6Oylh67lZ2S3nfdY54WzYLYP1nLkVyhll6xyXo3pMdP2e
k1Ms0d/XOYZn6/zaei1A2Nr/6/8Anztd2g==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Divergence Removed\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {-1.358361895208377*^-16, 1.000000000000963}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(0, \
0\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(0, \
1\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(0, \
2\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(0, \
3\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(0, \
4\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8063234155720525`*^9, 3.8112624803705807`*^9, 
  3.8142750730685987`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Chebysehv", "Subsubsection",
 CellChangeTimes->{{3.806323286324854*^9, 3.806323287980101*^9}}],

Cell["\<\
I mean, if it does work well then that will be convenient later\
\>", "Text",
 CellChangeTimes->{{3.8063232912389984`*^9, 3.8063233067667084`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Zc1", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Re", "[", 
     RowBox[{
      FractionBox["2", "\[Pi]"], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Np0NoPole", "[", 
            RowBox[{"x", ",", "1"}], "]"}], "*", 
           FractionBox[
            RowBox[{"ChebyshevT", "[", 
             RowBox[{"n", ",", "x"}], "]"}], 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["x", "2"]}]]]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
          RowBox[{"PrecisionGoal", "\[Rule]", "2"}]}], "]"}], "-", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Np0NoPole", "[", 
            RowBox[{
             RowBox[{"-", "x"}], ",", "1"}], "]"}], "*", 
           FractionBox[
            RowBox[{"ChebyshevT", "[", 
             RowBox[{"n", ",", "x"}], "]"}], 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["x", "2"]}]]]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"PrecisionGoal", "\[Rule]", "2"}]}], "]"}]}], ")"}]}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.806323312620392*^9, 3.806323325729785*^9}, {
  3.8063234341475983`*^9, 3.8063234477655926`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\\
\\ \\((1 - x\\^2)\\)\\^\\(3/2\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^2\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8063234636319995`*^9, 3.81126248070063*^9, 
  3.814275098093593*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\\
\\ \\((1 - x\\^2)\\)\\^\\(3/2\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^2\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8063234636319995`*^9, 3.81126248070063*^9, 
  3.814275098132559*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\\
\\ \\((1 - x\\^2)\\)\\^\\(3/2\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^2\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8063234636319995`*^9, 3.81126248070063*^9, 
  3.8142750981785154`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: inumr\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8063234636319995`*^9, 3.81126248070063*^9, 
  3.8142750985455904`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(x\\)\
\[NoBreak] near \[NoBreak]\\!\\({x}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.\
99999998148123782572526190025430478831858227550810624961741268635`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\(\\(-0.0004373798525546619`\\)\\) + \
\\(\\(4.112762758606063`*^-15\\\\ \[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(7.012191633141564`*^-6\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8063234636319995`*^9, 3.81126248070063*^9, 
  3.814275140580612*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(x\\)\
\[NoBreak] near \[NoBreak]\\!\\({x}\\)\[NoBreak] = \
\[NoBreak]\\!\\({\\(-0.\
99999998148123782572526190025430478831858227550810624961741268635`65.\
954589770191\\)}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\(\\(0.0004373798525546619` \[VeryThinSpace]\\)\\) - \
\\(\\(4.112762758606063`*^-15\\\\ \[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(7.012191633134625`*^-6\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8063234636319995`*^9, 3.81126248070063*^9, 
  3.8142751484665456`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(x\\)\
\[NoBreak] near \[NoBreak]\\!\\({x}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.\
99999998118326507805163705891701481261180095572171921958215534687`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\(\\(-0.0002295818303110502`\\)\\) + \
\\(\\(7.694544576611617`*^-15\\\\ \[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(4.843510575015782`*^-6\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8063234636319995`*^9, 3.81126248070063*^9, 
  3.8142751606702366`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8063234636319995`*^9, 3.81126248070063*^9, 
  3.8142751607022057`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.4135798584282297`*^-16"}], ",", "1.1185833876936992`", ",", 
   RowBox[{"-", "3.533949646070574`*^-17"}], ",", 
   RowBox[{"-", "0.12105272122275804`"}], ",", 
   RowBox[{"-", "1.766974823035287`*^-17"}], ",", "0.003184038388699598`", 
   ",", 
   RowBox[{"-", "1.766974823035287`*^-17"}], ",", 
   RowBox[{"-", "0.0005568893243430304`"}], ",", 
   RowBox[{"-", "3.975693351829396`*^-17"}], ",", 
   RowBox[{"-", "0.0002923126651047246`"}], ",", "1.766974823035287`*^-17"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.80632354140171*^9, 3.8112625714453983`*^9, 
  3.8142751741187744`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"Np0NoPole", "[", 
       RowBox[{"x", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"First", "[", "Zc1", "]"}]}], "/", "2"}], "+", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"Zc1", " ", ".", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ChebyshevT", "[", 
           RowBox[{
            RowBox[{"n", "-", "1"}], ",", "x"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", 
            RowBox[{"Length", "[", "Zc1", "]"}]}], "}"}]}], "]"}]}], 
       "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.806323583269031*^9, 3.8063236006890554`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
ZzGzP+r/AbPb0eo=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwV03s4VFsfB3DxlkpJTqUZd0nHkS5KF6d8VcollyLp9pZcQklJKqWUQq4p
lVwToeIwoQ4nNUThRO5S1AwGg5m9Sg0l9K73j/Xs57PXs5/9W7/vb2k6H7Nz
k5aSkvKj6/9PSzdhQ2m/g/Fj2QOPbb2cjPtydzrzWCuh5OGz00rTGPPkWqIL
WKbQ8T/qM13TBkvWzslIZu3A/RXPqoUa+2FUv4Jzg+WKj6cWaLZoeKM0sdww
inUSddO6fnA1LuDypYgz4awriEj2Zl/ViIbrScIKY92E51/yP5+qp2DqTYt7
n7/cxxVtvz0WTnn4u97AzEwtD32RW62OW/6NXZc7PpRHFCLL9cHEzeIXOPbY
V//Ot2JsWpy2zOZgOYZiWqsmTeKi9G5GZbNKJarKXnPr1r1ERveodrrWG3j6
W8zcLapA79v65QL5OpRNM/iVc7QS5Uzp1327GpCZXjHBXvgvlPLumsOqCSbz
nqfZ59Zgw1RvwTl2C/QrO4pe/1GH8WM2yQrtrWg2sWceMvVo/Py+b1VJG7ym
H2lsWdYITkc4O+T0B7xpc3wuH90EF8d2U+/tHbDfsqtTIGjGkGPYnUDlT1iV
GuGYqt2KUAOlIT6XB/5EbLNH4Ds8UhONfOfy0WNRlz6vvA3SogH7JVGd4MTz
/Bs0P0Ats9pQ0b0LGVdlwnTPtuP9lau/bVzTDYnLnoFDzzrw8817i4nhbsiZ
htg9VvqEAF+Pi5WlAgQo9Mzo3MfDkynqjtZnejDjhZ7UO2s+lD1UKy8s6sX6
U7bj5aN8eJw4H8Hi9yLpfmT6gqROPODOTlYO7cN+h5W107Z2YfKt82/XrBLi
SYtb7IvhLqySc/ec2iHE2hqOdO/tbpxHtpeqTz80Nh+SxJoKkJUcWHNrxgAM
VxpeL+wVwID3XFQVNwDeUFR1enAPbh07mhjHHoRoxfZglkEvgnQ99dhpg9AZ
1B+Y1NSLhRdyWj3YIlRo+zUev9SHr7rdPLnbIlxrbnGx0xbC78Wec1NkxCD2
pdelK4QI4R0cLXAXI99h7qa1tI5a/Qd6XbVipNdeTu5SHIBRcV5qsA6Dkcp9
5xRfDkAzXfbq7EAG/OtciYL3ILpNV2stf8tguOFPVpC8CIslo6o1CgTHb2qV
+peIcJe16VL7NgKlWi0FwX4x2G21Rg+vEKyRNH91OiiGbLyqv2swwS7V0Hcf
XcRoCD1jpB5CkHB0MOWdhxjzzwg3x4YSqMkX6r85IQbPpC3AL5xAx3bz1vwQ
MeT7JfZaMQSGDe4hF3PFEM7RGVRJJNj5g3V4nCNG6m57xyrqU5o11mcLxOhf
p7fJN4mgyGfZ3JNFYrgnesZXJhOsU/yR7v5SDA1XmfWHUwlM7cPLbFrF+MkP
MIvLILBvyRlTmRDjdPS/idfyCC5keY3WSTGIcpASr+YQPPBf/D1IhoGXT3Ua
j3pMNeercCoDM7fTf+rnE2Qeyh4o/I1BUHGfSlkhwejIwzYrXQbR4fyAN8UE
aeyswoAdtI/xkhjPcoIa0aH8pY4MDObfWzhBPfJCh9O1m0G4dD7rRgWBlUtm
tvkBBhyRg3rRK4Lh7Iy0OYcZnA9tTxyrJLBcfz8mh+YkMlde4V5DMHTgnlfH
IwY6gXuTy5oJJHGTDQ/+RfcLe43WthB8r/Mc78ljkGCeZcah/gWDaFJI96fq
5ya1EszQKM+T5jLY4v2fbO82goV8wdDvTQyeX9mxYaSd5uf0u7/fT3p+WZvX
8V0Ee+9EbhgdZ7D+rc74BPX++s/TAqUI5pcsSHHpJnAzKU64Opm+P8xX1RMQ
nNCwLEmcRf9j8GxWQQ9BJP/Ir7IFBNY7tsRlCgm4TnnB8lYE3WbTpZUZgn/q
vLZ+siE4qy7MOUX91PiP2bnbCTZHqd1uoM5RyUiydiQoEMdqBRM6T20JBZHO
BEE7o1S6PxP4bQvpnO5Pz7Hm/N6zX+m8cjdlfThH4DRzd201tdeSSUcfXSBY
rnjCf/43AucZAd8t6NyulFgHFlBvq/KZFXaN4Lb0RiO+hEDP5L/rZTMJYlNY
y+d8p/OZx5Z594Dg+peXOo7UWmptVZnZBBct99rFU88fs9ux5TGBr7OxpfIP
gilF5keCSwi0ebJP5o4SSC+astyBS5Af4mpnRz1+q3xY+yXt8ym/BdHU33yN
gypozjatNw7I/CToXLoyXqaJYPHB16sF1B0pX/Y30Rx3hjUcZo8RtM3M006n
uW2vNq+zpX47qMvZ+InA08ter4i6JEu98lI/gf6KwkWB4/R+zPsYuV1EoB41
9jGXuiA4wU6T9rGPtbf8I/Ujl7mfSmkfTIr12GsnCDIaG9NjRghsn06OcKNO
3RDj6UTrFP3zSvc6dRLHeuky+t2dperDz6jj1OUkv34RbDV9RXqo/weLHtgn

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {0., 0.9999999991903356}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8063236049516115`*^9, 3.8112625729774914`*^9, 
  3.81427517598961*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Zc2", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Re", "[", 
     RowBox[{
      FractionBox["2", "\[Pi]"], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Np0NoPole", "[", 
            RowBox[{"x", ",", "2"}], "]"}], "*", 
           FractionBox[
            RowBox[{"ChebyshevT", "[", 
             RowBox[{"n", ",", "x"}], "]"}], 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["x", "2"]}]]]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
          RowBox[{"PrecisionGoal", "\[Rule]", "2"}]}], "]"}], "-", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Np0NoPole", "[", 
            RowBox[{
             RowBox[{"-", "x"}], ",", "2"}], "]"}], "*", 
           FractionBox[
            RowBox[{"ChebyshevT", "[", 
             RowBox[{"n", ",", "x"}], "]"}], 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["x", "2"]}]]]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"PrecisionGoal", "\[Rule]", "2"}]}], "]"}]}], ")"}]}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.806323672202285*^9, 3.806323680181575*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \
\[NoBreak]\\!\\(\\(\[ExponentialE]\\^\\(2\\\\ \[ImaginaryI]\\\\ \\(\\((u - \
\\(\\(x\\\\ \\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\\\ \\((1 - x\\^2)\\)\\^\\(3/2\
\\)\\)\\/\\((1 - \\(\\(x\\\\ \\(\\(Cos[u]\\)\\)\\)\\))\\)\\^2\\)\[NoBreak] \
has evaluated to non-numerical values for all sampling points in the region \
with boundaries \[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8063237222436085`*^9, 3.8112625730602365`*^9, 
  3.814275176077297*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \
\[NoBreak]\\!\\(\\(\[ExponentialE]\\^\\(2\\\\ \[ImaginaryI]\\\\ \\(\\((u - \
\\(\\(x\\\\ \\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\\\ \\((1 - x\\^2)\\)\\^\\(3/2\
\\)\\)\\/\\((1 - \\(\\(x\\\\ \\(\\(Cos[u]\\)\\)\\)\\))\\)\\^2\\)\[NoBreak] \
has evaluated to non-numerical values for all sampling points in the region \
with boundaries \[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8063237222436085`*^9, 3.8112625730602365`*^9, 
  3.814275176122261*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \
\[NoBreak]\\!\\(\\(\[ExponentialE]\\^\\(2\\\\ \[ImaginaryI]\\\\ \\(\\((u - \
\\(\\(x\\\\ \\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\\\ \\((1 - x\\^2)\\)\\^\\(3/2\
\\)\\)\\/\\((1 - \\(\\(x\\\\ \\(\\(Cos[u]\\)\\)\\)\\))\\)\\^2\\)\[NoBreak] \
has evaluated to non-numerical values for all sampling points in the region \
with boundaries \[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8063237222436085`*^9, 3.8112625730602365`*^9, 
  3.8142751761622195`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: inumr\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8063237222436085`*^9, 3.8112625730602365`*^9, 
  3.814275176201187*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(x\\)\
\[NoBreak] near \[NoBreak]\\!\\({x}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.\
99999998148123782572526190025430478831858227550810624961741268635`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\(\\(-0.0005938990022790599`\\)\\) - \
\\(\\(9.947992083087819`*^-16\\\\ \[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(7.033154232043879`*^-6\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8063237222436085`*^9, 3.8112625730602365`*^9, 
  3.814275222703094*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(x\\)\
\[NoBreak] near \[NoBreak]\\!\\({x}\\)\[NoBreak] = \
\[NoBreak]\\!\\({\\(-0.\
99999998148123782572526190025430478831858227550810624961741268635`65.\
954589770191\\)}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\(\\(-0.0005938990022790877`\\)\\) - \
\\(\\(9.947992083087817`*^-16\\\\ \[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(7.03315423203694`*^-6\\)\[NoBreak] for the integral and error \
estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\
\", ButtonNote -> \\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8063237222436085`*^9, 3.8112625730602365`*^9, 
  3.81427522966864*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(x\\)\
\[NoBreak] near \[NoBreak]\\!\\({x}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.\
99999998118326507805163705891701481261180095572171921958215534687`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\(\\(-0.00022673135678407107`\\)\\) - \
\\(\\(7.910011250873007`*^-16\\\\ \[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(6.878853382899465`*^-6\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8063237222436085`*^9, 3.8112625730602365`*^9, 
  3.8142752407523637`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8063237222436085`*^9, 3.8112625730602365`*^9, 
  3.8142752407963257`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "7.067899292141149`*^-17"}], ",", "1.028407868226908`", ",", 
   "0.`", ",", "0.030296241764091885`", ",", "0.`", ",", 
   RowBox[{"-", "0.07604681846604443`"}], ",", 
   RowBox[{"-", "1.766974823035287`*^-17"}], ",", "0.024291693596887886`", 
   ",", "1.766974823035287`*^-17", ",", 
   RowBox[{"-", "0.009911263401888314`"}], ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.806323801477196*^9, 3.811262679590665*^9, 
  3.8142752472313595`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"Np0NoPole", "[", 
       RowBox[{"x", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"First", "[", "Zc2", "]"}]}], "/", "2"}], "+", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"Zc2", " ", ".", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ChebyshevT", "[", 
           RowBox[{
            RowBox[{"n", "-", "1"}], ",", "x"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", 
            RowBox[{"Length", "[", "Zc2", "]"}]}], "}"}]}], "]"}]}], 
       "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.806323832597313*^9, 3.806323839597243*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
NElxshT/zBIVj8TELf0//g9S6hd+
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
U8fLik78+EHrl2n4sITOh/8DfUV0Pg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {0., 0.9999999991891096}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8063238426390705`*^9, 3.811262681729639*^9, 
  3.8142752492680626`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["p_+/-2s behavior", "Section",
 CellChangeTimes->{{3.8054581533195257`*^9, 3.805458162279744*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["What do these things do without the p_0s?", \
"Subsection"]], "Section",
 CellChangeTimes->{{3.8049538816291246`*^9, 3.8049538975434093`*^9}, {
  3.804954043742614*^9, 3.804954043856517*^9}}],

Cell["i did not make a mistake i thought i made, sweet", "Text",
 CellChangeTimes->{{3.804953913922624*^9, 3.80495393183086*^9}, {
  3.8049540338510437`*^9, 3.8049540406785684`*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["W/o the factor", "Subsubsection"]], "Subsection",
 CellChangeTimes->{{3.8050252884611263`*^9, 3.805025290748004*^9}}],

Cell["hi", "Text",
 CellChangeTimes->{{3.805025304287435*^9, 3.805025304465273*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2Ltd", "[", 
       RowBox[{"e", ",", "0"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2Ltd", "[", 
       RowBox[{"e", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2Ltd", "[", 
       RowBox[{"e", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2Ltd", "[", 
       RowBox[{"e", ",", "3"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2Ltd", "[", 
       RowBox[{"e", ",", "4"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2Ltd", "[", 
       RowBox[{"e", ",", "10"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), \
0\)]\)-\!\(\*SubscriptBox[\(p\), \(0, 0\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), \
1\)]\)-\!\(\*SubscriptBox[\(p\), \(0, 1\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), \
2\)]\)-\!\(\*SubscriptBox[\(p\), \(0, 2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), \
3\)]\)-\!\(\*SubscriptBox[\(p\), \(0, 3\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), \
4\)]\)-\!\(\*SubscriptBox[\(p\), \(0, 4\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 10\)]\)-\!\(\*SubscriptBox[\(p\
\), \(0, 10\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), s\)]\)-\!\(\*SubscriptBox[\(p\), \
\(0, s\)]\)\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.805036875569254*^9, {3.8050369437035904`*^9, 3.8050369442308836`*^9}, {
   3.8050369785019803`*^9, 3.8050370412833834`*^9}, {3.805459577737806*^9, 
   3.805459670989234*^9}, {3.805459713580452*^9, 3.8054598122368937`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.000024185766477748702`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(-2.49366499671666`*^-16\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.5939906358846744`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050370691434174`*^9, 3.8054598287971773`*^9, 
  3.811262683137398*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050370691434174`*^9, 3.8054598287971773`*^9, 
  3.8112626832188473`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({4.503669942224799`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.734723475976807`*^-17\\)\[NoBreak] and \
\[NoBreak]\\!\\(3.820404467573641`*^-16\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050370691434174`*^9, 3.8054598287971773`*^9, 
  3.8112626832593384`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({5.325883644531503`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(4.8452214462813`*^-13 + \\(\\(2.185751579730777`*^-16\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.046037959204861`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050370691434174`*^9, 3.8054598287971773`*^9, 
  3.811262683421387*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050370691434174`*^9, 3.8054598287971773`*^9, 
  3.811262683461739*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050370691434174`*^9, 3.8054598287971773`*^9, 
  3.811262683714438*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050370691434174`*^9, 3.8054598287971773`*^9, 
  3.811262683823578*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050370691434174`*^9, 3.8054598287971773`*^9, 
  3.811262683856004*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
f0y2j/0=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
8T9uwKS6
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
dSi5vMP9OkH5uUajDvo/dhuXBQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV13k8VN8bB3CJUvYlIRRflTXZCsUnLbZSEqVCWYsiUYhUhGSpREpSkqSS
aJWKS1JJYcydse9mrjEolaLU7/7+mtf7NXfunPuccz7PuWpeh5x8BQUEBKxn
CAj8/9Pel2oihlwsOxYYPE/UDbXkFm/36lY0RtAztuqtzK2QFyXPPVZcj+7T
okRUpieWmcndzlF0xmyFZ8d9Mg/DvNGo5KKiD/zj3JLtM2NAZL8xSVU8gjAj
dWehzDScjkmOSFKMQ0BrOf5k3ITPkTHFs4oZMF9r5TdwoRQiGXY3v3zNR8J2
yZuzV1XjeaOhjY3qQwikRSTfHKqD6+mOtjfJT5DC8n+CnCYcKg3Vu/L9BcoN
vrllTJEYv8B6P2NGJbQzpRJLe1vxvqq2smF1NW6MCr9Y298J/2N24jv5NdC6
9Ozg1nc9qJpj+K8o8B3EhQkdyd19KLhV81dpcR2m5xsW1HH6sUb+dd624npI
RJNO53UHIXRp3qENZfVgTj7xNTIYxHvZoFUrq+tBuT8vZZoMYov0QqYSqx5d
llFfJTAID7EY4b7peli9dp/w3DqIKMEN+4MdPuH08BXbmKODeDZar5fK/4Sj
ylWF118OQu9dR1mtdgNi5CIs1MCB/OiBkQsmDcgsj0jyXMeBwLzfarvXNECi
p87hug0HTC/F5DGXBkRlVhiKO3Jw/K+Lu0JMAwz7PV2IvRzUmzTMCGA3YDQx
bzIyhgMTxt7bs9Y2QoDqvGFGcHDPt7DygE0jAli3w2fVcKA6OdbauKkRoyn5
uQ3vOBBZdFIie0cjnpTl925v4KAjMCdcP7AR7WrW/0y7OIib02bneqURlpmN
t+1/0+NZs2307mgjxCyNzmQbcjF1oz/n0bdGxJhe2/7chAu1f6EOL3814tqH
2U0NplwEvc4oqhdsgsvJxW8mLLmYbc4KGJNvwvgJo1jljVyYG+3kGqMJu6J8
smq9uMhdvKen8nwTtGQHr547z0Vt3Nj59xlNYN0zn7S4yMVI/0k0ZTUh/2rq
wFAG/fu83Ot9t5qgYXPAY+VVLppV+9yEy5qw37empjCfi1kKvq32PU3Iixg4
O1DGxcG5BxjkcgbyxHJ9X3RxUfBa/pn9Cgac252eaPZy0R1cnVW5ioFX/KWM
9H4unNiKnnetGVhVdzjMneLCNP/92HE3BuSKZNZUfOVCyHKJuEYiA8S7bx+f
zKRg+bXpy5VUBq61hUT3CFMIz49miqczUPNjgjdbhAJvLpn9M4eBuxetf9iJ
UWhkn9b++JgBwfKU21flKFw73GsT0s3AVa3x/YEaFFgaqTrcAQaqnzltdF5C
QbLFVNKNx8C6O5dZKzQpxFpeYG34wQDVJ9w/qkNhvyh8FUWbsb77e6m2EQXj
29diiRXNkJ0ro9y4hkKQq62fyepm3LXSmA5eS+GO6He7e1bNcOr4Hiq+noJS
yEbpjE3NsP40S9XMhoIAPcP7vJrhPeq1drcDhY8tO15LnGsG8Tu58oMr/f9t
3HkB6c2oiOrUUNlFwbQjPOjtlWbUeB9ccXA3hfzuywuP32pGomDZzml3Csc5
7JihsmaYpq+KGfaiYEjta1tf0Yzyuw80lX0oUEM/DXPfNEPC0ybU1peC88j8
ge2fm9En5zeSvo+C3vcd1jX9zegRjHaZOEBh4Af3+sKhZlxiuU7MDKRw9Wf4
z8jRZswQWG8gHkRh1u/LhQaTzVDa+zJYJphC14yWuTckmGAs3TrBDaWQMXO/
95QsE2s+1NkwjlCwF/710kWRie33TLXLjlJ4JqIQKKbBxKZXXjlh4RTOS7o2
HDNj4oiTiEpFJAVraWopaclE5LHVrLgoCn9kIk4tX8/ErqfW822O0/Mhf8WA
u5mJlN0OuhXRFNaotKQ7+zAhwNePDTtFYUJ1P/+hPxNuN9V2KcZQKFr0a73o
ISaedL8reU5bQUNhouoYEwULc0lOLIWv2q6u+ueZiI062SkRT6FQlypJyqCv
fzAvOZW2x7KIOZwsJlbrrSqenUChzuBK+bV8Jp5vynUcpX3KSFP2110mzHsu
fdp1hsIKk7ID2x4yMXkn4WU17TzTFuW55UyICL8djEuk4Gq+/6hvJROXRd4v
7KYtsfrXJ6KGiRPKBrXGZynUWCQuUa5joq++jR1POxIKJ8MbmHDPuLGNQXu5
VSGbwWSis32nqVISBc5a0+XL2phImuqPc6e9zdq1d2CAidzKRkcW7XJZg4b+
ISa+1xu5iiRTUO+d87pvlIm4j3fdVtBOKu671/uNiSVY776X9njUyys9v5jw
zJHbmUB7l11GQvc0E64OulsKaVfJBx7pEiTx4s41y1ramgMbvDpnk0icCFvS
Q/tCqapjhxgJ1aP1whO0f534adEuTaJtS3H77BQKezY16rTJk9DI17szj3at
4l3F1gUknE/t3reQ9jJuzOyWRSTC+m0XLKad+WTXD9ZiEuavZ1UvoT0dY9RP
apOoGbm9S4O2zxaxJqY+iZINKwdUaNcrD1Y0G9Pji//oLkvbmPe6iGFGgvQI
rRWinf0882qTJYm+w1AZp8cnGH8osXEdiaItazzbaQc42YY12JK4F5GQRtBm
LFTz+exAguem/uAmbbORya2fnEgIumk8PkE7t5yB+h0kGDXX8nbQFkm8r/fR
jcQRMjtSl3awS9yCOk8Sci8NzKfp+WCru8/54EeiMi2o5wNtyy8mP98dIBHg
43XwIu2C1xKDtcEkCnRVOrfTlkjmMt4eJXGRUWwwn/ZRV4KoiSRB6C71b6bX
w/pvh69Vx5H493duNGgXEfZJVWdJTNVd2jFGry/Zc/9FEOdIZIxvkM6m3adJ
bqu4QmKXsbMqh16f9hMPrF7nkNCUajoUT7v0TYL+qzwSmXUl1xbRPuVhKlpe
RGLfBTLOnl7vlI70ZFkpifpaU8tWen9smRziPH9GIsFgVYM3bdWM7OqnBInj
i3ceORhH4fWHv8dKmST4NZdKNtL7TeMye19JK11/z/NiL+j9mOJT4vKwi66X
YY6pOm23f54GDygShYHLprknKUwZv6UK/9D1KStVsaL3u5fgddadGSyM89nd
KXQefGgIqymYxcJBg9gAJp0XVwI0c/OlWEi3yiK303myIjd5R64GC0rSdpQm
nTclVSePiWqzED4nPH5NGAWd/tDsMH0WlktW/7eNzqdFS9y6N5mzIBXE8vCn
80y0SHff5BYWIq/NfLDzEIWET4vO+riwMPPfYgM7Og8FxuTuN+xiITiipMiI
zssJg+nR274sCFQuip8MoNDz/FOYUxQL5UluWbZ+FHa3Vl15fYqFiyeKn0nS
ecyaelqumcDC36X3q5q86X5gcf3v3wssODm+ybb2pPPyTVDC/QIWPGdYWn6j
8z+5QTJTiMGCi5yb9g5HOo+/ziw7xGYhJa7gfP1mer5kfrW2dbBw/KFww2q6
v4S59KiUclmYcXQ+W9yewt72ktvu0ywUFcnxDq+j68Pd+vSZJhvf/TbPtjKh
6yNizVZbxkantXikN93vdLTNJ1OM2Din89/jUwZ0fQLVLbwt2VCu8Ai9r0fX
59t4jaQzG/f2bp9TvZh+3r/pzP0n2Vg+8urION1/xfiNyeFxbFg+5W/myND9
rFV8XcJZNmZURCaRUnRePD5TeiudjXzpXLUCun+v2R91rusOG0zp1MeSQhRu
NnnZOjeyoSXtETNznAuvfINXUGuB0AvDK351XJxLCwrdvKQFg2+b82recVF+
4r62u04L7Cd/j6i85UJm5+KsSJMWPP330qq6kos34ophT+1asNp0Q1XTEy40
wgWW64S0IICQXSV6nYtBu4Zb8m9a0GfcUdVzkP4+een5tPctoEzlgvb4c+FT
fzJS7HMLZtk83tPiy0Xf5uVbBVtbIP+EEH/hwUXXtrS/I6MtIDasOWTiyEWL
+7adb5VaYX5RSUGRPt/VHWZLHAlpxYf8qtDYrxzMeaw/NRreiu+ik1o2IxzY
fj8z6B/diukx1qTwEAfvwkxf7UlsRWfbr57DPRzURGX5b7zeiuC/A7cF6fPl
6/jdNep19P0TXzbNus9BSVb3sSa1Nmwcu9F63oODg1rKbYZL23CO8ttatJMD
zReu5hm6bVgx1DdS7czBjZamqe0r26B8O+V8lz0H5+bXRHVsaoNhZcaWhhUc
BF4qjOaGt4F3v/DCJXEOtNMOx0x/agNUZxy5/2wQtxNnntWKbMe6E64OxRMD
kBlIPLHsZDsMWS2Sz78M4BQkjhjFtaM6x+xAOW8AuyYU9lica8fiR23ckq4B
SPosM9ma144tgmZst9oBHMPO3oi6dviKSMc+zBiAw0Sx2XulDii/unJhpd4A
fnjv4vm97MCfQk5IqkM/wmR/y7YQHegUMJ6ZsaEfE9XZFna1HdD1NupIt6Ct
1nlBp4m+vr3Q86ReP35171n5hdOBpJLhZGHxfkzt9o07JtOJhFf7uPV1fRBw
DlZN8e+E/PnqnlVWfRBdn+BUOr8LMsSjJDPFXqyuPCRdq9wFH/mfDC2pXgSZ
72xsU+tCcua/LtnZvWAs190spNsFX2Wn1eT3HlxVYdjtWNMFz7HEXrHGHmj+
VLGa3t+Fk/ZrT22O78H6e0/17cq7sCR1KngRqxvHpQbFet268f5zVvF+606I
VegIsB16YJwnma18mw2LsC3Tb6Z6cCFb2rLwIv1ekJ9y679rvQjeJTI//F8V
PFyMP83ZSD/Hxe6x9i3hlU9J3/SKiT6Yxs95NF70ttKsvkSQk9mPHpuEzdxu
snLRBr8f6esHkHhQxDHnUW+libFJ2hPOAIpw9tgASVV2j6d+uBU/iPVLD27i
un2p5BttjVc05ODLp+AdfeY/KpcM6/FmNHMQudOpLi1wqrJG4ygjOIaLjOhb
Hy5GCBDnmaS3E33u3rEmpDB0thCRciJVo4k+d6d5Os5OlxcikjQ3DG7RomBr
VWn+arEQEX/8iZ/DMjoX/3jZ6K4XIqI00v1tTSnoK0bJxsUIEfuOOB6y3ET3
3Vd2zgv+ChGQ+xipTZ8z3/5aaGHyT5gY20akCdZQiHZ/8OPufyLExJ34g89r
KWS9ON6svFKE+Pvb3ubgB/p+OdGN1+1FCLF88g/5mYLuloSQxsMihOZ33r67
rRS+hHzw4xMixN6MeZaOYxTm3hj5Pd9rDtHIDODlKA3hl2jkuvqSucQjl3nr
zA4PwXRoKyMrTpy4KHmSqgwdwl/ZOeqDV8WJkA9UqnXYEByTS+6tLRUnDCxe
tWyLGkKKhdRb4y5xokTDOygofgh8u57yn6YSRPG3kqxbWUP0e0uZssS4BHEv
bdMX8eohZIWPv7piJkUkbXx2KaNmCC8Con2mNkgRAcKLVi14N4T+GYb1fk5S
hNaxb/Ga9UPo8JiU33tAiijce3XBOtYQJHUWrGblSBEF+pR1BG8I8d+WGXQJ
SRO3Pp3O6ZPhIeH9pOXndmkixeC32415PCxh7Stu4EkTYZdClN0UePiRwNLu
mZQmbN09s0kVHpqLY+8uU5AhRvmWWe81ebhYcWNvnIsMYSo2lVFsyYPHqdxQ
zWYZ4pN9cEpkAA9tp/ieYu2yxLNi7saVgTwIKItsVuPLErkye0S/H+LBLMa9
wHZalghpc0gKPMrDeOe9+Q0L5QiFAJ3Evad4WPzi0aEKXznC6yzntHUmD5mO
+hHrfsgRP9+5RclU8/BIzKWq7T95QnWb9dHqGh5e6FRx1FfKE9Zd+odC3vFw
Tt9BPsZensj8LujNqOfhYfMz/VOH5Qljtbv2F9k8DKn730ol5ImQyB+KMiM8
WLYWxczxnk/wdc+VSSsMQ+ftl7MvyhUIubLwR1VKw1C9+6ViXpMCsWqdZ9Fh
lWGU7N9wI5WrQCTtNM5tUh8Gu0zZuElOkdBKaDuTpjeMPk5W0oNgRcKve8kO
6XXD9DnBPWVYT4noSav8IRU0jOHwU8sXEQuInliH8ovBw7B67pia07KA6A1t
PyEXOgx974LbZl8XEH0uP2crRAzDdu6xb5/VlYl+RX2lhbHDWBMreu7IGWWC
c/O6pV7mMDrHJmf1bVchhkujz9hVDIMTL6SoJLWQ4OeJbvpIDEPNJ9COr0s7
PUvK4Q09Xu2jNYN2tI8+zXJ8PwyPnrDOLXELiVGzkfs7GMO45Hoid87vhcSX
KrdGX84wGjadgH7EImKiaZVirAQfZ4JWOKecUCMEAtk/zaT58Jcau2SSpkbM
FQllfZXlQ4l8M/nnlhqhankv3VORD1sPnj33gxqx4Z6ChJUGH1LXn64ynK9O
ZMT+EBQw58N81pmng8/VCSOjh/xoXz7yfF9cU5bTIFZ/tv9osp+P/knHv1o6
GoS1P+fuSAAfNmcqL+9dq0HsuqGyzz2YDzLObunGwxpErGhK7+ooPnbUGAuo
N2kQjP79rN8X+LA7q/zdImsxEZyhThx7xUd5p8VUzealhNMlL/+ZlXyc/aMn
/Nt/KWGSmSeTWsWHi/B2wjt+KTF1Wd03t5aPYpmUkIZXS4n4bPW57xr5iP40
32vhMk3iap66s9wgH6KLVsxavECLOH7LazqHy4fReKTrRzMtYk9+XsFSHh+J
UhO/HrhqERoF6pPmY/Tz+H1u176sRezNDH3f8pWP+tMqr/8r0yL+B63jYkk=

        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
fzj4GC79VqFcjfg/a8uKpg==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
l17eRGNCON7gK25B91vmWo6qW+j/Adu34ks=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> 
     FormBox["\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
s\\)]\\)-\\!\\(\\*SubscriptBox[\\(p\\), \\(0, s\\)]\\)\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {-12.859647664883504`, 1.4258985419233414`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
0\\)]\\)-\\!\\(\\*SubscriptBox[\\(p\\), \\(0, 0\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
1\\)]\\)-\\!\\(\\*SubscriptBox[\\(p\\), \\(0, 1\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
2\\)]\\)-\\!\\(\\*SubscriptBox[\\(p\\), \\(0, 2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
3\\)]\\)-\\!\\(\\*SubscriptBox[\\(p\\), \\(0, 3\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
4\\)]\\)-\\!\\(\\*SubscriptBox[\\(p\\), \\(0, 4\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
10\\)]\\)-\\!\\(\\*SubscriptBox[\\(p\\), \\(0, 10\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.805037587063797*^9, 3.8054603066252403`*^9, 
  3.8112630896899705`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2Ltd", "[", 
       RowBox[{"e", ",", "0"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2Ltd", "[", 
       RowBox[{"e", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2Ltd", "[", 
       RowBox[{"e", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2Ltd", "[", 
       RowBox[{"e", ",", "3"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2Ltd", "[", 
       RowBox[{"e", ",", "4"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2Ltd", "[", 
       RowBox[{"e", ",", "10"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), \
0\)]\)-\!\(\*SubscriptBox[\(p\), \(0, 0\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), \
1\)]\)-\!\(\*SubscriptBox[\(p\), \(0, 1\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), \
2\)]\)-\!\(\*SubscriptBox[\(p\), \(0, 2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), \
3\)]\)-\!\(\*SubscriptBox[\(p\), \(0, 3\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), \
4\)]\)-\!\(\*SubscriptBox[\(p\), \(0, 4\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 10\)]\)-\!\(\*SubscriptBox[\(p\
\), \(0, 10\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), s\)]\)-\!\(\*SubscriptBox[\(p\), \
\(0, s\)]\)\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8050370552997017`*^9, 3.8050370573772554`*^9}, {
  3.8054598883475375`*^9, 3.8054599406988635`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.000024185766477748702`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(-2.49366499671666`*^-16\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.5939906358846744`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050375918025913`*^9, 3.8054603075981236`*^9, 
  3.8112630907429705`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050375918025913`*^9, 3.8054603075981236`*^9, 
  3.81126309079221*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({4.503669942224799`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.734723475976807`*^-17\\)\[NoBreak] and \
\[NoBreak]\\!\\(3.820404467573641`*^-16\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050375918025913`*^9, 3.8054603075981236`*^9, 
  3.8112630908246794`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({5.325883644531503`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(4.8452214462813`*^-13 + \\(\\(2.185751579730777`*^-16\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.046037959204861`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050375918025913`*^9, 3.8054603075981236`*^9, 
  3.8112630909868293`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050375918025913`*^9, 3.8054603075981236`*^9, 
  3.8112630910273237`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050375918025913`*^9, 3.8054603075981236`*^9, 
  3.8112630912809353`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050375918025913`*^9, 3.8054603075981236`*^9, 
  3.8112630913827667`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050375918025913`*^9, 3.8054603075981236`*^9, 
  3.8112630914231977`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
J05gSg==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVkmk81IsbxZHKMjEGjZElTLZLC6W0eCpLJUokqa5EFLciS0XayBJS1pIl
Wbpxu6JbUbl+j33fJlt0xwhjll9Elkrp7//ifM7nvDjn++ZouPnYe4iJiIjc
WdD/3dqD14F8RzN/2X0Zdj6u5aOFh9wGGOvBN9Jtd5u2GbFcuivuH4YFbNEt
04vT3kesNlXIy2AchHp6RI2Ptguxud24KIFxEjj9/eClfY7AtKoNtxkBQKmZ
L4zSvkqE3Yi5FM24CfI5WUZaOnHEyYBxxi1GEvwIj+Cn6WUSEkl7Hn2eyIXY
HWI2I0HPiJJ2o1271J5BimvPTSefEuJw2Ie+qpgXQM55Uu9IEYRPsb/h/anX
kFuUX6NYXEVM3u2uFxUl4HRq28uInDqivqKWaNtaCerD21wNfjYRXkF7ljmT
1UBtMugPN2gnKiSNfj09Wwc2jVJHG7aziMc51fPKqxoBKYc+CO52EtuX/5vt
UNgMseaF8ayGbsKw7kNprX4bUINzxgmJ90Tndoex/LF2UJs8FO4V10+ckfqD
1bWWBQ/CRJuoImyiqdfpX5m4d+D3bukGvxMcwsHq8ODwcCdcHX+m2dA8SJhk
xThlMbvBkp+5xXDtEMGZT+w8fa0HdI//dU+idpgY2dOWs7yqF7Y2tV8JOsQl
ilIHgjo0+kCTbTOjpcUj8qIW3dIL7gd+UeSvTUsExLT7EYHn2w+gXJMWY8ET
EtIWEfbFdDbs1VdulFYeI0KoI5TBYwPQGjnR7KD7maCU/ybSY8uBEE97JeLg
BLHtwv6fVd850Hk/2eh7ySSRnhubo5U+CCtM/7rhpTVFuDiub5Hc+xE0RPPp
zO5p4mWXR2L5zEdQfXH/Z0nxLGHaXCTGTRmCdTq8v+mPvhErLT2nEy2GQWGc
JiM1P0dsWL8h/gV3GDjB7Dn/a/PEwOTthpzwETDvzcvl5IkgaXwgnGHEBd8H
tsaDnmKoLTQUiL7jAuvSt/qLduJIkWjLe9vFhWZanKOfszh+YfqeCOzlgput
/EZ/N3FEl+e9vP+40MreLB8VII5HWCZ1bTwuLFKe48/fF8e4hatkzC/0zZ7P
aw+J43TkARdT/VE4+LZWJSFkMVYzA1m+N0bhgHrZ/us1SzDszzeHf4SNAnf4
fntC2xLcqS8yEBkxCoUXWm49fb8EK9bECDNjRqGJcrlq+tMSLN/8SLwleRQu
sNv1OMuXYoldi4lewSiUz8wlrvBeigUhq9IGWaMg+uZeisdyCbzT2eVuz+RB
jn1GpXGUJMZevc3s0ObB5KKgr4wkSYzWtRzZr8eDiPSqXZJZkhge8sLTdjUP
Kl5LH11UKomXmYleuzfxwI087ufJk8RTAXY+ZjY8iLO9dXPCWgpBoSlYP4AH
LqaPTp2iS+O4A8aLVfPAweSp1R/tFJz5M/xMSS0PstXY3w04FJyfs951poEH
+4zbZn+MU5CS2/Wjq5UH51LLltfLLkPdKcGp/Pc8MH/sOEexW4auSYpmduM8
8GULXdzeLcP2Tm9BhjIfPGMvJjSOyGCP7toae1U+iDTk0kJmZZAdMv1w6Uo+
1HrY+JtJyiLJvO54fhUf7K40G80YyKJEYDJarOUD04i7dX2gLO5QxBShJR+8
+yparolT8bmjornpeT4s6ljdsfMhFRNkr/EI/4X9jV4vUp5Q0a+Bd9vqAh9C
+z4c/lJMxXXbynodLvNBLztfoa6aikVM93Pnwvng82Hi8XsBFQu/FKXmpPLB
YM+9qZeb5LAg3ubzsko+FNSfLMvrl8Pova+Sk6r5INbI3qnPlUPvxSu3rKjj
A8VnevXrz3KoF/QlXLeZDxyW0G9mMQ2fuD5YYd7NB/fOuzaf19Lw8Rqe1SUB
H74GtL4ai6JhTktYxkeaAAJGJqYid8hj7Lq5Yw8VBeAlU06/tE8eLyT7qRxT
EsCRx8X/XTgqj7t/P5HWpSqAssqR4qxAeRwjzVLrdQVg8edutScF8riJ8j2p
0EwA5W36tWl0BWyx9o0N9hZA46ajsW0/FfBV4ejejWcFEPGaO1lDUcQs2nHp
KR8BMKPZR1tXKKJfn2302UAB5Df/KlLcrIhK3r9FuV4XgMjQ474bFxXR7RY3
zCplgb/apZCcVsTZumOXaZUCcDax/PlLlI5qDlaBldUCUJmiXtWWp6MVe42P
X50A9A//ke3GpGPKlJg7q1kAT00enlfZRcf1GvnWCT0C8JF6ff3BbTr6BU8z
aJ8EsO2Qg+2wmhKSBnGlckpC2Miqqv3owECF0ovPK5SFcNqB6kc9zcAt5iee
nlcVAqun1NU5hIHRzuuzOjSF0MjR69uWx0C9iL7IeEMhFL5pozt9ZaDngLaT
nLkQLGpOHJjLUUZOPDFNPScEE8OyyL9pKsgJtX2T4CuEIxaD2Yp6Kjjo339V
wV8IN5b9UEkHFfzoOLtU6ZIQNAKclRafVcEhxhpl9VAhzPpW/mPboILcR5lm
hilCOHjI7/l4pCoKi69E7ikXglp6sqm1ujqS2dI2TSiEN7tVvedMF3JiKtW2
Sgiv6Lnh7w4u5MCXqXb1QnBbY4vfotVxzPTTX04sIXzdNWGp800dP1cca/fg
CiH0W3L1k3MrcaZjCyNUhoTGZM2oV+4aKHK2Z9ZUjoR0mXtF6wI1UErCv3tC
ngT4dx82RmigmllB4gkGCRHdO0udCjTQskBJZgeTBPuNJWtGJjUwKXRaTGQz
Ca3BZ27QojUxUzV+sGQrCcEVhNrdDE18UmqAPkCCdz4vfW2xJpaNuV8ZsFjg
sZ0y+3s1cfgIa7Z8Pwm9hMmTIT0tNDZ+Rl7xIOGkvp2b7Dst3Npq3bTh9MLe
zWb5UZ4WWnlx8z95kxAzpFs+Oq+FRx6qnvrdl4Tfg6See/zGxFDp2MGtl0m4
fHyls2sEE1lDp7vn7pLATKH1lVisQt8kTQwqIyGtX+7STa422ie7eS0iSNh+
M/NtvIgObkjJpt2uIGEf2Pt3KOvg93uaHlm1JOjzi70E+3XQIlYs07CdhF8P
qB06r3TwfyPml3A=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV1Ak01csfAPAfKUJZkuxbCIVsJZWvyhIh2aLQlew7KfuaFFLWFLKnPEme
7N0ZUXiRJUtRtrju9qRC6z//++acOXM+53vO9/udOTMjez7Q2p2dIAgKa/63
mrlThzDNTp/4b8TPti/W2p+fFtUGgsARX73SycI8oxl/ixqyfOv3Za8acgs5
1u+yoiXLg8aOq4isdkCoskjUlmX+ioNefWRiGy17XdqR5eV37hpj5CHms0RX
RReW9d6rrU6TT7n1NrvmuQIRX1PfjhbIeoNadVmiF1jx4i07vZjknYfvVXUW
egBhYB+48OMzmbeaq3hF2psVVzE9o7FGXhEOzVMo9wUCL1kFTfwkf0j6cMNe
MYDlyt5dq+tkt+/lzzttg4CYOROLMTsaV3PUd8oLZtX7IkFGGxEu6NS5IXoR
iJK3IqpevEh7OPyJwtkwVv4vPgNc/Oghl5oqufASEMvPdn/+IYCywvLlP0lH
sPoJfRGoIYw21ViUpLhGsvITk32XRVDkHLuETHkUEHUS5tkTYsjtpP+2U4qx
rPyjr5xWpdHbZLmbNM84lpcE6uxlkeKU78YO23gg8nc+pWA5dFdINsExLwGI
cButr0gBJSWkhaeKXmHVY0Smee1BZAmPRvtWlh0Ik/371ND3JoMVubPJQHQ1
u/Ju3ov8llYD2wqvAnEhr1D/pwayPUvyZEpfB0Iit2BRYx/KWNOrbMYs848N
5J7aj3oyt3+84poKREWA9blwXXS45x8XyfI0ILRtkw0n9ZCijo69pWIG67wk
0xzXAJEG+XLEulmuPcQbUmWACnzpQxTPm0Akfj9idPoI4hoauI9sbwHx2qEs
t+MoiuZMlnPIywRiq6rDNDZCFy5+Er0umgNEjpC5jI850tqQFVkfxDI3bmw5
b4HYs7QnJ7tZtqb6JpyzRMWPIwrVLuUCcd33d7+mFZqgb5AeGc4Dgs2rY/2U
NTrpKiIvnX4HCMbsvp4VeyS13Hrl+EeWdwhHpGWdRsxY54VgvbtAfPp2yUPT
AaUWlt3vorK8CoNu4Y6oa3yPso9RIRBH+FViJJ2QnuURtad/7kH8DvIhMQoJ
cX34mDFlVwzxznHO7UauaNz36ifOR8VAmCu1+Nx3Ra1d7g6PVEuAOEfVY/qc
Rw5z1aLEe5Y3C8okERdQlqROYaVuGcQPZ/tucvFEXDmmpcufK4D4YZiRNxeA
funO/ioVq4T4zxXuOmcD0dKHcHubYyzH+tPII4Hoza4HPI05lUDo6282dQ9C
99o2XYrafx/wubZ3haRgpP2x02xTTBUQ013WZv6hiKSpvyLOVQ3x4ZoL41OX
kc34qGX/3v+sHfpOORwZR/s/jHWsBoN7aNQqLBztflnoMltdDcQ3fpXSLRFo
zfFXz32Lv8BgNCW951gkSk9oLtLIrgHilOb+fS+jUdOgpomJ1GMgKV83GhdI
QBk05vE9xo9BJi5xfvxwAvJgrzITCHgMJV94AgR8EpCwtrjl5LPHQIT2mql3
JqC2VwnVTWp1EE+NDxYOT0Ti6j5PTryuAxKD9HcOMwlNrOqh0C31EP8qr8GN
SEHG7CIGHrL1QKqab7mqlYLqt65iB516ICir63MeKSh11+Pnh51Z/s59xuR1
CtJz3PmS81E9lBCO+aj4GrrTztNfYP43GFRdmQyySEUOSe8nOtMaIN7roAzz
zQ3EP6O4x7O0AUi3Z+U0tmWg3kPBMdxNrLjCwo8W6wykt7ZR5tRcA+C74vtu
D2cgcW919yndpyBz89u5+NGbaMoy8dP3hacwOBBWxbVyC10QU+JQM2iCIHaD
ckWZbBT4JFQ1f6UFrJTSSyWnb6OlQ7NverlaIZ59Y3ARRz7y67GM/CXRCstJ
xtYHVfKR17Ryt4tRK+v+S9oMheUj0pYZkkIeK27ofMNj6x1k5W2eU7+/DW6F
tc3vN7qL9soq/OqLbIcgF770q72F6MutsR42NgRe59/P1QqXona/JzAvjOBW
wNXzUuqlKOV4euPLPQhEDIBabFKKJIijFWkOCEqmZnjfhZcio8BHcdvrENRN
nGTufF+K+hSPFuSoY6AW8edI3i9DMhtFrR9MYSD5I/tHJhWop+MlGjj0HKhT
WKK6owp5R5hucWR2gYxmS36q/2PUsVlzvca/G6LFax4cHvgb3S/v+iOm8A/k
X39p3THajAyEn5XZ1PZBSW1CR4MIGal2v29+qTIA8de05ZiLHWjEwGbp4dIg
RMbmJ3jZvUB+3L7Do3uHoSanVJM+0YNevT39bGvGG5jwy//QytOPbIwdZufn
R8C3LYyPrWcQ7StJO10iPwa/LomjS0Jv0Myf7BGvuHHQ2Pb+TWHfKFowHSgX
7nwLqVU6S7sz36K6O9MRQ7ITEBAzFTM6Nokqr224rhw5CYYdnibvzkyjVbcz
dI+292BzPPds4uVZxGN41frJjil4NiMYeDPvI4rmX+CddZoGk69/fdN/voB4
ybuJcYsZcHdLTz8hTEWHL538X+fPGVBZFr377wc6KqxIL99ZOAvHS3Ob7rX9
i1zstPs3n5gD+SrBnP23l9HTUfds8toc0LhP39CN/oIO9NWxU/I+wq59D50G
L60gGSOP1WzDeYgWzZ/ynVtDOto6mQ2UebgQ9SqxMfQHmv5yo7c8eQEE5FPO
RJ/6jZhap5JFNSlgfruZ15O6jhQZqnS2NxTwkt0+40Jlw7xcA5VtoxTYq63N
uPaZDX+VD3INe0sBvd0uDi0/2TB2qX9L/UAB2sXfIapb2PGZ4X3dA1QKWNiH
nnfTZMcZLVBR9IcCRXEn+Xlj2fFqyimXAyqLsJed9frFNuAu+bDhoIRFKI29
2fjAmwMnVbU6/E5aBPnX31zooRz4qAoxnXJ1Ebia1E21Yjlwh3oa417aIpx4
v5ttMosDk/VKOfpzF6G2mDSS2M6Bm6z69ylXL4I4p+2wnsBGXB2tUDA7vAgN
EQkFV/BGfHNk1M1angqfBVPsfHU5cXrsDfkhRSoUNhx+m2DIiVOVjBZOKlOh
aD04qtSKEydHN3hYqFHBnPv2id9enDhKPtv7uC4VPnaPqcve5cSeF60C9c2p
EHhwUUbjDycGoVeRKhepoL0o2Pa0nwt/ssGZ7F1UcFb+9HMxnRuvVSX7Nb2k
wmyB0uPpQm7855eZiV8vFf4xqXyyUMONeStGf4++pkIYBxtTop8bK63QPR++
owIfm4uJ3lYeTMrZrm/1iQqpJ03Tj2Tz4MERH3qRGA3+tzy0zP+QF48r7X1h
LUmDb2QOzh+tvHgqerWYU4YGf41fZvvSx4uZ8vF2wQo0iK6sXBf+zIu5wnKx
4V4aRA2MPlHX24KPbMd5DCMa2EWQ/tQNbMH1dtuPHQimwVrvKKOCiw9n8cVR
USgN1BYcf8SJ8+GQXuoN40s0eONITfVT48Mah9vf2kTRQIXzfH6kLR+uk3cL
CEimQbJG7A+/Uj5c+7XuTvkdGiylXJEjSfPj6kzz5S3PaSCkFz1O7+THqSca
c3O6aHDgS8SW66/5sc9GmYPi3TSQL/j9QOMdP1aO+Jqs1EeDyVr3E2VL/PgB
6a74sTEazDslT7OLCeD76lTjcDprPzZmta9DBHB5f1LRnCAdpipEDrGrCuJ0
jV9OxdvpkHarX2arniC+lBsi4SRChyN156qUTATxcWfXglFJOjRfe/n9uqsg
XmLq3+lRokO4h4YlcVsQ6/L+zKnVp0NvxVz4EMc23G8WlB7pQwfD0LJGMnMb
bqxdPLHfnw54rql48Nc2XCJ4jmclkA4eKhHXVriFcMiERap/GB36LraMhCgL
YRGf3ddI8XTWn+zXZ+4phM9fpyQZ59HhwVHegiyKEP7W7RQl+JwOdU+GFB1X
tmMpG+Ow5110sJTS1Lu7URgbT6kHhnTTobVijLksLIzzVtjdhvvowNib8mr6
gDDWln1oljVOh6DAus7ueGEcErkqKvgvHVIJpdh5wR2YuSejWUCEAdES0e+u
mIpgoebL9R1iDCi2TQrucxbBB4+51gRLMqBh/pmxeogITnXULhmSY0Dqj5hI
kwIRrHx1IiVTlQHNW1umu5dEsMe04mmBYwxoEtBWOFAgimcy0Sp/AAO8R57S
4njE8UyiRWtWEAN4omhn12XF8WzoZKxQKAMqOdsVinTF8ZzdN06RcAbE6BpW
a3uI44+i6mLSiQww9Ff637vn4phSek9fNY8BjhPvl7USJTDjSUyKKZkBsHsX
8V1MCjPLeMxfYQaMrNKjkA7L2Xf4LToZQJJUePfIiuWwp3esehhwwMQikkiR
wksH/v3r9DAD4t1UT19dlcLLHU6D7hQGXHxjRzo3IY3Xhg6KJm5lgrmLrjR1
TgYT/uPfDggwQcu2oCxgRQZzc4WOfd7GBL+W7Zu2bZLFUvrV2a6iTBjEAzcb
lWWxUbXI1iPyTNB5rTgcFCKLcxJX2Qk9JpDMjE3XNsvhe5KZs02HmEBxvtId
KymHHzTvwYHABJeGACkVDTncvuQWM23IBHaV0ma6gxyePzP8jXySCU/ilG5K
VsthLa3HzBh3JlxLrIMim5340GuzVzpeTGgXszWJ896Jjb0pD//1YcJDyUz9
1Lid+EyxpKdzEBP2cgjVSdTsxIk86bOHopjQoDkwDZzyePij19ivW0xQElHO
o7yQx0E5cjiinQl8Z6wKTL0UsXXuee8NiJX/hemJc4mKWCevTPBGB6u/lN8X
qgoV8c/bcu4lL5mg14LXB4cUcXKBHHf3IBPs74953NHfhV0zdvj6TzJh/S7/
0K7GXfj/cPoXUQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV13c81d8fB/APlRTKDikjOyQrSb2lSKJhl9KVyAohMsouWVlJksiIJhIK
n/MxQtnbV8W11w0VUUq/8/vrPp6P1/t9zrnnnnPv54pdcDO2YyYI4jkTQfz/
1cBusp2aMjuQe2dvyqmV6oqJl+YXBgVVgSCClo6OSlfys3XHvhY8jJ3R/3b5
UuVb8oaLj9RxbPpfZYvYSsW9vDkPBU2xr53sWH5SSfBMJf4TOf1/92geqqxs
Z1SG2EhZY1Pcn81bKk/ZfiizSbbBJoz8hT5XarapFCQIXsTWmSlZnqjcsT/9
SU2aPbYyY0z5RyX7U9ZHCyKO2AEKnIf+Vi7weyZLZjlj13d1OK8jv4R+iTGX
cv3/eEXF5ptI2+Ws6hpTd2z57vpRXrJX8fSBs8lX/r/+5fNCwqSh3aZ3C70e
2PbcDmHiJPWgRi1G0Ov//bseL0uTqh3XCiWtrmKfK3gdrUjmsyoqkGne2DF3
+pRVyO0wkmc+4ANEkOI+n+49ZMLVFIk5EV/sprv/dPaTLM+NMm7Z+AFBpdi/
aDhI+g0zC4tm+WMv/Wtw1iVnBcrulY0GYMeNjicfJW1PXOY5JXUDjy9n8Mz8
ONkXLn5n6lIgENoifJKfT5FSA87rqkyDsGWKa0ZNSZqv3qGYRWzK3tTK0JJM
5RULPp0cjPuN6s4JnSW7Xq2QkntCgMhwtdLZSSM3Hev5860Xm07RHcIukPrj
BZrktVA8Xte+emE7MjQ46lqkYBgQtIPSucuXSFLYvsT8HXaGi6WHsDO5XKq9
IG4Vjus3eFVEu5LKJluV51awqZuxwtJXSJfZRbfytJu4X8eHruxJ5t5ue3Fr
/y0838heGZerJF3i2YzJAHbGyJawbh/S1Ip2iSFyG/e/lOA5dJ2M/amZU0Zh
08/Z0KSCyIZ4vpEwm0hcX/iqvCGYZFaYFz3FHAXE/JUkzshQcn/DR+ttWdgn
30t8cQ4nr9nmpE0digYi7pdXntstsmg1sP/NKDbRn8R87zYppaZmflwqFgh3
FNJmHkvS2jYnCdVjW7q90feNIx84T7ePX7oDRJvvs/2f40nW9tZcZBqH5y94
OTKaROZsr3wvmYPtrqNzPjqZ1HF5Ohq1iE1NXQwzTCED1oeLWybH4/XYf4oX
SiMFzTwOkuPYGTIFDnLpZMnj8zSJPQl4f9w22u7MIOf3a6bP92IvV4fFhz0m
Y6KkK81lEoHQ94xMbcgi5f7j/VxxDbuMw/SXcA550WtO8LZgEhB9yc4jy09I
lTUJfkXu2O5ZNy5l5ZPMCaqfPtVjlzm/rLN9Rj565Zum6H0XiIaztA2yr0jX
A8J/LZqxWcO4S+8VkFrN5LlgiWQgJtfoWT4pJPun14h0dWC7//D1/fqazPPN
Dfwrew+vD92uk3hD+rAepUsFYwtY3hZ2KiF5pWIzfXel4H7u2FjRt+QJGwEJ
kej7uH5AKU4fkdvn34Xpj2BXxBRsvkGRjBvnxq5opgKh8UnuAa2KjEx7nFs7
iZ0iAwztGtJyp+76WXgAhLzU+p1QS0q/m7i05R529n4O0SPvydpeeVkn3TS8
39EV0lfryUT71tuJadgSTxrfPmggLyxema74gR2UOko0fyD/cZc+2/z4IT4P
IjFvTjaRmscPKr5ZTQciL6CP7XsbyfplJHbA7BEQxScbu1+3k73ON+fWv8A2
zS9lC+gg39XaWb5QyABC+HTqMdEuUpy9lFXnNLaoUUr6ny7ytgnr254w7LD1
j+YGu0nL4aeCxGdsh73bxCt6SST750PS+kz8/vrKTrzpI6WuGPnJqmBn3Mzh
KfmPXPw3128ciZ1GZ1pp+UQmbFNLy9F4DETBCGm8m07+vnjTUPMidq7iSfcW
OmnzvPdPyx1sxYS8325DpNI+v3PL49hn9ig9pYbJZku0/djdLCAWnNhbU8dI
1QzO1kEKO5Jn5tm5cTJtwibQi4E97pOVJTlBOnmvpT88lA3EcN65A+8nSdak
o5nz37DHC9c80WWQKxpDK5lCOUBE/BOa3PGVnP1yzdzkEHbLTNv+9bNkp3Qe
W0kSts6Pxatf5sj0chZv/z25QDyPICXGvpHxtPQ2eRp2mojLK8fvZNg69Z0D
Edh/lFT4vn0nHU/Y0bX7sVO5Pz1gXSBVR2oMWK4/wf0vTEmrn6R0hFVOaQ42
uzm7wfJPUkjhxz+HFuxN2+xYUpbIf97ibxpF8oDgPyi1f2iZ/LgxWCS+Gjuu
SefzgxWSpnxgYSvrUyAqa9YufiGQSW/38WYl7Efukk76TEgv4HL+jdPY4V37
uoqZ0M66NOuhp9jXT6BHiczo5+mVhlyjZ0BYvHauclyLplYTdlh6Yz830oka
XYs+Z8nd2PAI2+j5vL/NOlT19bSKyzz2L02/GRsWFB1c9nB34nMgnNI+lV1n
RYFSJ5eHy7Fz6xpcN25AHo0Txkmj2JLjrYH3NyALvi2sS2ovgEisZmohNyLx
/KseFX3YLpn0PikOVNqmfOTI9lcQNNSUaLWXC8VOMfTl9V7h+zqgQ0vgQvbM
Twy4XLHXRlhXMLgQv+rW458qsW2y0yNyuFF5Y/DTUsUCIHLOxXRI86Ktu5wK
j7VgT9jOH/bYgm7uO6J8YBh7RPm8/fAW9P2IxGuln9h7RXQFTAXQR9pAMd/2
QrzfHCZaWoLIL8G4bPAyNuten1mRrah/URN5chQBAWBxSkME6TELaNuLYXep
qx+sEUFFmxYpS7UiCFI/GfhPWhRFSr+q3n8O59HWYn6lokjz9I669S9wrssk
82BIDN2vYGt+YPgaguoiz5lflEBrP0waxdKww4is3W8lkHv3+5Ygr9dATGk2
8m6WRPqzgW12aTjP7zJcqZREyyILnbsY2G9MjofLSCPL0M/9NVHFEGTldsZb
WQ5x0qXkL2UWA+FocPROphz6oHXl+sZS7Ok9J1i5dyLNn+tETw3jepO4fVJL
O9FWx112Axpv8Hn5FWTboYAGjofMLY+9gaDvjxLJCSWU/KxJO23lDWivl9z4
V243OsG6JQG4SiCooNVrjdtuRFU9U72pVQLao8Hmrr92o0zVbl+exBIgqqbn
J7aooItCMmsVtUsh6HXPu6YANSTs42HWblYKhGGl9pFmNdTdWZHr5YzN9ls+
a7s60os5dbQ8GZt3+uO6WnUkTfjH6n/F/eXyXtmCGmh6rFnANrUM3+dgffRN
E7kVeiqkLLwFqnPN3soCbTSrNdT5gfUdaH/10/05qo1cGo77rQhjpxAP8gUP
IodB2XprXexomW0hYQcRjYNOk0x+B0EWXiGbaTropKNhUtGectDu/jKiu+sw
all4qzl6rByoaj+44XwYGQZJD/HRyoHw1BDYn3cY6d9jVvSNKMefT8WFUzt0
kfb7snr4D9s4xGFaRA8piUmuNPlVAGG3JjpORR+9fJ6QuRpbAZS5wuida/pI
XoPQV8rCTkvBT2v6SObEp6TExgoIor0cW3vsKBK9Hq94RrgStO/ZHOh2NkBc
//21maisBMpRfNL6oyH6HtfTwMSEgPqqJRxOnEIVLoUwyo+AHvLOqkHpFLql
H11SJ48gw0dTzcPmFBImdLKjLBHQ9or9Xak5hXTdXgTyFSAIOvlmYinGGDVJ
6TxI2kUBtWRXzq1uigqTXvWEa1L4PMXXrL1sipKZt3H76OJ8HVuhfbYpshlY
ijhthfNohYcBvGbo590X3ttvYTdr+DH9NkOi6wSN8wZwfRct62e/BVrneTPm
/hS2QevBXYKWaJr+oyFygQLtvGy/IQtL9KaiBS5vrALtLKM9b3oskYFXmIKy
ehUEydmY7+w/jbxG5lgrYrCL9lkMLluhhqo61KpVDURoevt3QxrKbfozGnOk
GkRjfl+J9aSh8F7ljYbG1UC1vctwTaUhna/ppg2XsKmAub+TNFQh4DNFJVSD
tlL4EZvbNqjATZqnaLIaaONvd4f2XkAp2yLsk5Jq8H4tlAQ9s0PeMmSU8aMa
oIu115/4ZIfMVBYKOJ/WQAboLl1ms0fcR2kr0QjbV5Lrvos9ivbSiAufxvWZ
6j2vlS+hoMbJt97atUAd0/c52uKAHH2Pcpxm1ALBOcfmquuCnm7lOmf9E+ev
TSIH/V0Qo7LvuS3xHv8+R5U/KnJBrswOhq682HabHTjELiOvqJtRoVrv8f3c
Y5TL5IoCH9ZseBmNc8v+Ma4ON3S3aj/LGoU6cC9oSv/ddwX12K4zZ91TB22f
JlYdf11BAizNORwHcf6HJXudkAdKNTirK2BWB9qBo+errTxQRqdfmML1OqDL
evKaD3mgZ2OlzJbNdUDLNbq4cdETVW1Q/vf8cj2IblQ/+hG8kYypUmnktXrQ
Zi++fsLRG8WlK7o5hOL86eepTYneiKayc3DHfex6ed39E95o9awESq2tB/rG
Ni7rBB+kWcAfGLG1AYLKaC/pP66hYvOVVdsP2Nw71l4d80fCmb9KDnY1gLb8
1Y8v+ANQ6MySq8hgA9DA74u0fgAyDloY6F9oAOJ1Yif9WQCaz/9KnhL9ALTF
r84u3teRwt/BG+DzATLmnDZsFwhEuVm1q0KSH6Eg2tq8/kgwcg83HYJdHyGo
TV/t/YVgtO/SaM3FvR9B22x7y/D1YNQmt/b2S6OPkGEblHC9OBj9KjzEo+ON
+5327VTdEYIMqWppx/qP4B54ZaqcJRT9+EydLHVshCA72qHp8TBEkidVPns2
guijSH4ulnAUkUHnY7rRCHFMJvQzkuFI+CLxySChEdxT91dbXAxHejNgN/Cu
EeabHJ/9GglHqb9I33XsTTBPhtxbnLqJtPkrH5u8bIKCt+LHorluo7V3+dx0
y5ogY5MbV4LqbdTA47pvT3UTvs9pZRUWt9EJLpEuoZ4mcPcy4AlOv42s2YPX
Df9tAnrrr8EGhUjkz6zr4G7UDJxVm+RcTKJQyWyTQgyjGe9X9HGyPAb5XZb8
feNnMyhp58kljcSgA4zrde5EC7RNeR9NYItF76cUz5vytgA9TYtcfzYWdY3G
xW3VwjbaHde/Gou+95v+yI9qgTi0tFNYKg4p1H8uq5Nrhbiz+nZGofGIf9b5
a5xaKxAe1sY1D+IRwbciZqXdCgWm3zaaFMejrguCUXNmraD/Z70sNRaPAlbN
zgkEt4Io53qJzqMJqEmtlcmptxVkuF1uMfgTkVoHLYdFpw3K9ngpe7xPQl3a
JrP5s21w7QvTe/ZrKej3o5GHRT/awH2w+q773RQk9s/TqHy5DYjD1tvnilKQ
a2XS8ybmdiCadqdqzaag9Zo9TnP87aB0cTPPVvv7SFPl9IQqYH8r7Vo4k4oy
JM/T0Z12COrR1Uk8nYZcNjp3dCt1gLu0tp60RQbKreQvMVDvgKDzv/RWnTLQ
oHv1fbSvA2gFcncmbmQg415Bm3y9DujLGZL4lpuBNLIb5gLO4np20VdDSxlo
7QEpDomIDtDQuJOq8zATpV0ZOuIx2AGipbfyLH4+Ro19FpWbYjvB3YqRe300
B4X0T/A5JXbCvMpsVfufHKTx2cf1fUonnJSX9dTky0XZg/dEArI6IcLR6cNR
vVwUMN4bPFXWCfqb2NNt8nORwoKFXu1IJ7C23EJBnk/Qnc2Wrb57u8ASf9V2
bclHJnqWQ6OjXVCQ0NqVmfUcvePZ3Toy1QV0v8jz/ug5Eh/aUDk82wVtWx0f
OX56jr77l6fQl7tgUvSBUxjPCxRXuP3kZ/ZuKJBftS0Oe4GahMfITtVuoB72
3l/v/BId/nElrToM+7xO1+iOAqSeEWWRIdEDGrZb00TEi1BBVaAvm1wPxEmW
FO5VLUI7RzwfeO/qgYhzank2ekVIVOrsoKFmD4i+/mD+yakIsT2Xv/TrRA88
17RK9C4uQvTSZm9j/x5g7bU9Z2LwGkW1bk5e29ED8mFfA74EFSP6amKXQ2Av
GNaGmPwSKkXsjLYon7BeYN+e8NtsVynS+I/j0M3bvcCboH+DOlSK4l7fKsxK
7IVoRvoe5FKKtB38Ywee9AIjbb/6RVSKMtsv6Ju24dxrwx3jS2XoQvbuChDr
g7Nnr+V8r3qLxo62ZvHX9MEkx6/x/7IqUMH9Qd92sX7w25y9Wj5YhXIi1tyW
9fsEAmJGzlFEHVq0PTNtX/4ZUg7skzoW9BGxHb5pXLhlADaKHrm7fUsbCuAc
Yx86OwjzEmPPmXd2InZyJ9FrRAd1/5Rkz6wetN/7xN+a33RQNv4rtPS7H6Vl
R2ftSBsC2tfgScvcQWRtptq84dgwfM9Q+y1NDqM33XaJ5M9hOJDYO1a8eRzt
bSpgHk8eAY+tiu82ZE4hUV37xcTDo9AvWsifIDSL1FTV4ovHR2FUWrZeyO8b
Gvwe8yErfAyUclRHtfYtIIbKqXBB5XEouDwgZ1q+hD7kjko9VB2HktNmd6I+
LKFcwWsNonvGQVwqma+pdwnR/qWzyWiNQ0gjZ67DwhLq/MiIV9cbh4Vx3lec
isvonU1EusmZcUix/gY7svCf/DuoNCZkHG6Ws7BFJf1CUjMK00yd4/DY1jje
KHkFsbO25pR3j4PEwYD31/JW0A8Jd5urfXi+xooThe9WEGVd1Df5ZRyUaKOp
BoMr6EyHen3r5Dh8vHXqhojsHxT7FrIfro5DQ42hvjX6gxZvnbLeKzcB8uag
kPDzL6qVuNrhHjwBr7JyviQeJajQJ+8s/4ROwN/jYf6dJgSlI0cM3ro5AQaZ
71OFrAmqalfUTHrUBGTiHHkQFKmZubb57gQw7StNvZhGUKUnm9Vln07AsJO0
wI5vBPU0QPLBUMcE8C2s3srPYKLudHXbGktMwqgMS0Sd4Boq+kaMRLvUJPBH
nQ+ZllxDRcrojp2QnYTs2v3/bVFeQ4UHFNsbKU5CgmJRbazBGspfItFRX2MS
lExrX876r6EueZ10O2A4CSV+6sOB9DUU8Db6yXlNQkdzTKhK4VpqzoSKZ66d
BLl2qxovTxbq55Nwl9K6STjDlLolKpSFWl0xOOLyYRIC9vKtvkpkodizu/90
t0yCKSHSJFnMQsksTF/K/28Szop/9a9ZZKFoSXwHTs7h9UjKcvb5r6faupym
HwpNQYNIrvpCIivVK6P03njbFJAXtAzX5LJSAwGLj9aLTkHswNitHWWsFEMi
yOyK5BT0v3rafO8zK8V69S51WGkKht1DxYylNlAH+ajkGd0pmAw1mRKv3EAV
mfEd2nsFj7dhHd/48kYqYXPgJPKcAiX+dxxf2dgojw+TMXreU2B/y7FqnQgb
tXt/RZ+J/xSwmmaXuuiyUQUStq6u4VPATBF+PIls1MsfBfez7k8B/U1q8X+7
2amn8YbzHNVTMP+Tg/fvdQ4q8ljJ3aTaKThjaibikshBOa0T3be1fgouljbI
zudxULK+P8JlmqZAJ9K3cE8XB5VHS916qGcK3LdVNNXv3ETl7prUuzY9BeYn
lBdYBjdRWc2hD4e5p6H5kcOlKzs5qejdK2cf8U3DxeEVqTQNTsr7rofwWYFp
0LRnyunW5aT0z9k86N42DX7HKM2rNE5qlnHgfoPMNNCe+bg4JnNSGuy/k14e
mIYVq4Dofeu4qGYD92g/p2n4XdDLB3NcVMnLiWN7LuN6O57DnqtcVAb3ebYF
t2mwbP0U9ZaDm/LoN4q8fHUaDpm4jATIc1MCTjsjaEHT8PjpFrFhJ27qwu3x
UL3kaVBWPqJ2aIabWqo/689dPQ0DqydsjFd4qO0melera6ehUrKAr4ydl9Ib
2OXmUT8NOX/ZAlW281LJC8y2HU3ToJZBZ3M5yEupiuUbJPROg/ifNbTJCF7K
w29RkPvrNKj2Xy3dLcxHMeRjy7gEZqBFXIJV04yf4i3zKaoSmgHTSt/KPEd+
at8hm+dXts3g56umKuUb/FTkadWMdvEZ+Nx7J+L+E35K9mb/rXiFGfjzTHWk
dIWfsh+UsuA6NAMCT3bsdsjfQtHj0SKn6wwkFLO5awgLUvQQo3cJ7jNAOVMK
A8qC1JDnpxu8njOQXGp8/PFRQWrYbGm9wLUZyI2LyLzpI0iNCO4SEgnB9kvg
rusSpMYz0w8oJM/AWrMgSfO7QtRM4fVbR0k8/43H89FKwhTjMZthIzUDSuUX
evyPYSfe5zSqmQFF2dmseHvsq2/un2yYgQtovYbKQ2Fqdu/XZxYdM6A9JQ0W
7Nuo+aqzbXbjM9AwanTz8vdt1M/2fYIhmxhw8/Xibiu6CEVc7l3ay8UA21Wu
0g9MotRGVs+ebzwMuJNo/SaUR5TafuBpoo0gAxhNkV7Ge0Qp3acCmw5KMMAk
X2CbbZAolRSyyExoMkDgZp/CXQExKn1b/FCpFgO8i3L3qMiLUXll8pQbMKD4
L2PLAohRFbO21wcP4/HqHlQOXhKjRs90LJEnGBC/req2w1sxSkXlFeO6HQME
ax/6J9qKU1otBo1qDgw4V7SnL9JXnNJzHM//6sSALWsSRZ7dEafOPNp26Zw7
A7RmeMUdKsSpELboIS1/BvA8a9xN37KD6hhx6FmJY0BGu633rt4dlHuSOOVb
gddnpHv5i58kZXz3guMaxAB6Xu82lruSlFryY+6YKgY8sjmiaPNKkvp9T9wu
o44B/goKKQWjklT4A/GN9W0M+CVRtr32lBSV+ljclHeMAUPJ0RIH1aWpgKwL
fx9OMED2KQx0mUhT57Mf50pPMyDmv82x2VekKYlc8V+acwzYlycf/vuFNGWY
kDkyjv0vlbNdukSa+h/KMkKY
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV13c8V98fB/CPkagUQmSGkF1JQg6SFSVRlAoh2YTQINkkMhKyV6KQhD73
nmsUZe8ZH3t9im+20O/8/vJ4Pl7v9/ucez93OWLlYmRDSyKRlOhIpP//1bOZ
aSdmTVTtfIVwZydLlen3V61GuOWBDg9rCffXWBXOvd1RH7k1Qb6cbHm8s6+K
zBn2nDfcxuCuXGGazkaUilLbyeKX3NbguuzbvpniYBUiufbUc24PYOP3w3M6
8ZXKs6cR3uHcgYCU+s+EReyZCs5rW361Cvmv8A0ptpcq65/VloVuBAFS+i27
+yfiVRx/r7h8SQkGJLX1MYH8GLLxDYu7VIEwQCL5fy4ZNSWLnjp19aJoFCAR
cVNnFfxULNoOxB2u/79De/kjI8jJDnPtU3dfAJL8Q2uyWgnZ4dlYiBl9NJrX
EEExiiQztrfmQmNkigDN6b/x5Bx+7OvRHGRSL5tlUiBZw7FgImLl//mz0kmL
DPJI5Su6P+djAMl/yWrVNJ78aHeQkGkCcjEFWOp+IXObuKvjU8hETv5enRiV
8szbFiKnXwKSYJavSWgW+cqivl94CLL/20j9ogLy4lml1MVe5PRjEkIgn2zt
scAdxh2H9scXItLwmXyS7qVvqSuy/7j83aNfyLQv5QcH65GJah7LKJzcJtir
vEsgHvWXEzbHGshpH3xSZLyQBX99usj8nazSjN98KpKAfKcl914LeWCOTqCr
A5lk9t5qvpOc75Prt33sFZpfSiFo+8gPGHUpok+RSZof16R+krVezasZ9iEv
6mg7TVPI7KJRGT6yiYAUvej04NA4ebxMjjYrGFnQ3MJbfIpceq7TquknMqXG
NPb8LNm/w7N2Rf412u+cBtPyPPmSJZeIQCRy+lMxurkFMv9iVaDOODLlK3PX
/T9k6pObk25KSWj97ISm2hXyF2aSVnIMMuEbRtu9Tg5Pycytm0EWFFK4XfGX
bCp5fvdvkIzO12YnUPxHFquavnvoFXKxHEFupsFWdcIb1H4jy/Vp+s/QYXW9
Usfsz6eg+TkPDqozYLG2rWGxKcgElijUzoRZrbjNkZeQ28KZL07uw+QC2S9M
6b1B6zmMRquxYP/YPr87kIlMasibNGHDWjLM9p3ZQKaUb6y0smMpcluOVoap
aD+Ds2f3HsIcYGpzRB6yv7jZ50RuTOmiusynHWTSbJIVxosx/hyPGjZJQ/MH
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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> 
     FormBox["\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
s\\)]\\)-\\!\\(\\*SubscriptBox[\\(p\\), \\(0, s\\)]\\)\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {-11.855772527005227`, 8.186951741944077*^-17}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
0\\)]\\)-\\!\\(\\*SubscriptBox[\\(p\\), \\(0, 0\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
1\\)]\\)-\\!\\(\\*SubscriptBox[\\(p\\), \\(0, 1\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
2\\)]\\)-\\!\\(\\*SubscriptBox[\\(p\\), \\(0, 2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
3\\)]\\)-\\!\\(\\*SubscriptBox[\\(p\\), \\(0, 3\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
4\\)]\\)-\\!\\(\\*SubscriptBox[\\(p\\), \\(0, 4\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
10\\)]\\)-\\!\\(\\*SubscriptBox[\\(p\\), \\(0, 10\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.805038177057421*^9, 3.8054608643270254`*^9, 
  3.8112634632067575`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["W/ the factor", "Subsubsection"]], "Subsection",
 CellChangeTimes->{{3.805025299257105*^9, 3.805025301332178*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2NPLtd", "[", 
       RowBox[{"e", ",", "0"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2NPLtd", "[", 
       RowBox[{"e", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2NPLtd", "[", 
       RowBox[{"e", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2NPLtd", "[", 
       RowBox[{"e", ",", "3"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2NPLtd", "[", 
       RowBox[{"e", ",", "4"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2NPLtd", "[", 
       RowBox[{"e", ",", "10"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<(\!\(\*SubscriptBox[\(p\), \(\(+2\), \
0\)]\)-\!\(\*SubscriptBox[\(p\), \(0, 0\)]\))(1-\!\(\*SuperscriptBox[\(e\), \
\(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<(\!\(\*SubscriptBox[\(p\), \(\(+2\), 1\)]\)-\!\(\*SubscriptBox[\(p\
\), \(0, 1\)]\))(1-\!\(\*SuperscriptBox[\(e\), \
\(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<(\!\(\*SubscriptBox[\(p\), \(\(+2\), 2\)]\)-\!\(\*SubscriptBox[\(p\
\), \(0, 2\)]\))(1-\!\(\*SuperscriptBox[\(e\), \
\(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<(\!\(\*SubscriptBox[\(p\), \(\(+2\), 3\)]\)-\!\(\*SubscriptBox[\(p\
\), \(0, 3\)]\))(1-\!\(\*SuperscriptBox[\(e\), \
\(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<(\!\(\*SubscriptBox[\(p\), \(\(+2\), 4\)]\)-\!\(\*SubscriptBox[\(p\
\), \(0, 4\)]\))(1-\!\(\*SuperscriptBox[\(e\), \
\(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<(\!\(\*SubscriptBox[\(p\), \(\(+2\), \
10\)]\)-\!\(\*SubscriptBox[\(p\), \(0, 10\)]\))(1-\!\(\*SuperscriptBox[\(e\), \
\(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<(\!\(\*SubscriptBox[\(p\), \(\(+2\), \
s\)]\)-\!\(\*SubscriptBox[\(p\), \(0, s\)]\))(1-\!\(\*SuperscriptBox[\(e\), \
\(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.805025352384062*^9, 3.80502535912181*^9}, {
  3.8050254022506227`*^9, 3.8050254807137656`*^9}, {3.805460177177692*^9, 
  3.805460239443971*^9}, {3.805460277901495*^9, 3.805460300678523*^9}, {
  3.805460368400174*^9, 3.805460423945162*^9}, {3.80546046709612*^9, 
  3.8054604719844723`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.000024185766477748702`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(-2.49366499671666`*^-16\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.5939906358846744`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.80502549095426*^9, 3.805460865334343*^9, 
  3.811263464095975*^9, 3.8142752827338142`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.80502549095426*^9, 3.805460865334343*^9, 
  3.811263464095975*^9, 3.8142752827787743`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({4.503669942224799`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.734723475976807`*^-17\\)\[NoBreak] and \
\[NoBreak]\\!\\(3.820404467573641`*^-16\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.80502549095426*^9, 3.805460865334343*^9, 
  3.811263464095975*^9, 3.814275282818739*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({5.325883644531503`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(4.8452214462813`*^-13 + \\(\\(2.185751579730777`*^-16\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.046037959204861`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.80502549095426*^9, 3.805460865334343*^9, 
  3.811263464095975*^9, 3.814275282956607*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.80502549095426*^9, 3.805460865334343*^9, 
  3.811263464095975*^9, 3.814275282995571*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.80502549095426*^9, 3.805460865334343*^9, 
  3.811263464095975*^9, 3.814275283215371*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.80502549095426*^9, 3.805460865334343*^9, 
  3.811263464095975*^9, 3.81427528331028*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.80502549095426*^9, 3.805460865334343*^9, 
  3.811263464095975*^9, 3.814275283347247*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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

        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
yet8yuuj2P9y3xDE
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
JLp5/u9fAqp7u/iU/o5g/wMUXCOe
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> 
     FormBox["\"(\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
s\\)]\\)-\\!\\(\\*SubscriptBox[\\(p\\), \\(0, \
s\\)]\\))(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       TraditionalForm], 
     PlotRange -> {{0, 1}, {-1.0176076215946466`, 0.9999999999999978}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"(\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
0\\)]\\)-\\!\\(\\*SubscriptBox[\\(p\\), \\(0, \
0\\)]\\))(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"(\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
1\\)]\\)-\\!\\(\\*SubscriptBox[\\(p\\), \\(0, \
1\\)]\\))(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"(\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
2\\)]\\)-\\!\\(\\*SubscriptBox[\\(p\\), \\(0, \
2\\)]\\))(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"(\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
3\\)]\\)-\\!\\(\\*SubscriptBox[\\(p\\), \\(0, \
3\\)]\\))(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"(\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
4\\)]\\)-\\!\\(\\*SubscriptBox[\\(p\\), \\(0, \
4\\)]\\))(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"(\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
10\\)]\\)-\\!\\(\\*SubscriptBox[\\(p\\), \\(0, \
10\\)]\\))(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8050259964663343`*^9, 3.8054613015485134`*^9, 
  3.8112637736692305`*^9, 3.8142755512707944`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"pPlus2", "[", 
      RowBox[{"e", ",", "0"}], "]"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
      RowBox[{"p0", "[", 
       RowBox[{"e", ",", "0"}], "]"}]}]}], ")"}], "*", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"e", "^", "2"}]}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.805027032101775*^9, 3.8050270456692543`*^9}, {
  3.8050273662600846`*^9, 3.8050274202417727`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", "\[Pi]"}], ",", 
   RowBox[{"e", "<", "1"}]}], "]"}]], "Output",
 CellChangeTimes->{3.80502736043194*^9, 3.805027484394595*^9, 
  3.811263824389903*^9}]
}, Open  ]],

Cell["\<\
So yes, they do just equal -2Pi, which of course they needed to in order to \
cancel out p_0s.\
\>", "Text",
 CellChangeTimes->{{3.8050279459021215`*^9, 3.8050279675478277`*^9}, {
  3.8050366157657347`*^9, 3.805036621467852*^9}, {3.8050388180739207`*^9, 
  3.805038818522628*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"pPlus2", "[", 
      RowBox[{"e", ",", "1"}], "]"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
      RowBox[{"p0", "[", 
       RowBox[{"e", ",", "1"}], "]"}]}]}], ")"}], "*", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"e", "^", "2"}]}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.805038827858985*^9, 3.805038830830711*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Refine", "::", "fas"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: one or more assumptions evaluated to False. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/fas\\\", \
ButtonNote -> \\\"Refine::fas\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8112651908009353`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Refine", "::", "fas"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: one or more assumptions evaluated to False. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/fas\\\", \
ButtonNote -> \\\"Refine::fas\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8112651908608785`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Refine", "::", "fas"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: one or more assumptions evaluated to False. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/fas\\\", \
ButtonNote -> \\\"Refine::fas\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.811265190924819*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Refine :: \
fas\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8112651909617844`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Integrate", "::", "idiv"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral of \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(e\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((\\(\\(-1\\)\\) + \\(\\(e\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^2\\)\[NoBreak] does not converge on \[NoBreak]\
\\!\\({0, \\(\\(2\\\\ \[Pi]\\)\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Integrate/idiv\\\", ButtonNote -> \
\\\"Integrate::idiv\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8112651914313517`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"pPlus2", "[", 
   RowBox[{"e", ",", "0"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8051125024552774`*^9, 3.805112506291727*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{"0", ",", 
   RowBox[{"e", "<", "1"}]}], "]"}]], "Output",
 CellChangeTimes->{3.805112531696164*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"pPlus2Ltd", "[", 
   RowBox[{"e", ",", "0"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.805112444963586*^9, 3.8051124481326475`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", "\[Pi]"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["e", "2"]}], ")"}], 
      RowBox[{"3", "/", "2"}]]]}], ",", 
   RowBox[{"e", "<", "1"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.805112438876229*^9, 3.805112454428809*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"pPlus2Ltd", "[", 
       RowBox[{"e", ",", "1"}], "]"}], ")"}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"e", "^", "2"}]}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"3", "/", "2"}], ")"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"e", ",", "0", ",", "5"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8050407917103357`*^9, 3.805040801633654*^9}, {
  3.805112289684921*^9, 3.8051123044102664`*^9}, {3.805112661030239*^9, 
  3.805112661732588*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Refine", "::", "fas"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: one or more assumptions evaluated to False. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/fas\\\", \
ButtonNote -> \\\"Refine::fas\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.805114739580423*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Refine", "::", "fas"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: one or more assumptions evaluated to False. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/fas\\\", \
ButtonNote -> \\\"Refine::fas\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8051147395834217`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Refine", "::", "fas"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: one or more assumptions evaluated to False. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/fas\\\", \
ButtonNote -> \\\"Refine::fas\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8051147395854206`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Refine :: \
fas\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8051147397182965`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Integrate", "::", "idiv"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral of \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(e\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((\\(\\(-1\\)\\) + \\(\\(e\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] does not converge on \[NoBreak]\
\\!\\({0, \\(\\(2\\\\ \[Pi]\\)\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Integrate/idiv\\\", ButtonNote -> \
\\\"Integrate::idiv\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8051147482943535`*^9}]
}, Open  ]],

Cell["What about the negatives? Probably.", "Text",
 CellChangeTimes->{3.8050388157548733`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2NPLtd", "[", 
       RowBox[{"e", ",", "0"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2NPLtd", "[", 
       RowBox[{"e", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2NPLtd", "[", 
       RowBox[{"e", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2NPLtd", "[", 
       RowBox[{"e", ",", "3"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2NPLtd", "[", 
       RowBox[{"e", ",", "4"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2NPLtd", "[", 
       RowBox[{"e", ",", "10"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<(\!\(\*SubscriptBox[\(p\), \(\(-2\), \
0\)]\)-\!\(\*SubscriptBox[\(p\), \(0, 0\)]\))(1-\!\(\*SuperscriptBox[\(e\), \
\(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<(\!\(\*SubscriptBox[\(p\), \(\(-2\), 1\)]\)-\!\(\*SubscriptBox[\(p\
\), \(0, 1\)]\))(1-\!\(\*SuperscriptBox[\(e\), \
\(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<(\!\(\*SubscriptBox[\(p\), \(\(-2\), 2\)]\)-\!\(\*SubscriptBox[\(p\
\), \(0, 2\)]\))(1-\!\(\*SuperscriptBox[\(e\), \
\(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<(\!\(\*SubscriptBox[\(p\), \(\(-2\), 3\)]\)-\!\(\*SubscriptBox[\(p\
\), \(0, 3\)]\))(1-\!\(\*SuperscriptBox[\(e\), \
\(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<(\!\(\*SubscriptBox[\(p\), \(\(-2\), 4\)]\)-\!\(\*SubscriptBox[\(p\
\), \(0, 4\)]\))(1-\!\(\*SuperscriptBox[\(e\), \
\(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<(\!\(\*SubscriptBox[\(p\), \(\(-2\), \
10\)]\)-\!\(\*SubscriptBox[\(p\), \(0, 10\)]\))(1-\!\(\*SuperscriptBox[\(e\), \
\(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<(\!\(\*SubscriptBox[\(p\), \(\(-2\), \
s\)]\)-\!\(\*SubscriptBox[\(p\), \(0, s\)]\))(1-\!\(\*SuperscriptBox[\(e\), \
\(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8050366533290844`*^9, 3.8050366784273643`*^9}, {
  3.8054605796019983`*^9, 3.805460618334186*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.000024185766477748702`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(-2.49366499671666`*^-16\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.5939906358846744`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050381784905453`*^9, 3.805461304642646*^9, 
  3.8142757244814367`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050381784905453`*^9, 3.805461304642646*^9, 
  3.81427572453239*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({4.503669942224799`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.734723475976807`*^-17\\)\[NoBreak] and \
\[NoBreak]\\!\\(3.820404467573641`*^-16\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050381784905453`*^9, 3.805461304642646*^9, 
  3.8142757245713577`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({5.325883644531503`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(4.8452214462813`*^-13 + \\(\\(2.185751579730777`*^-16\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.046037959204861`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050381784905453`*^9, 3.805461304642646*^9, 
  3.814275724718218*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050381784905453`*^9, 3.805461304642646*^9, 
  3.81427572475519*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050381784905453`*^9, 3.805461304642646*^9, 
  3.814275725037922*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050381784905453`*^9, 3.805461304642646*^9, 
  3.8142757251348324`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8050381784905453`*^9, 3.805461304642646*^9, 
  3.8142757251718006`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
D/4fzPhWeQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV1nc01w8XB3BRGUWFrMwyKyPlVxS3UCGbSEZESiiUlIpsMkJWIiuUyIgI
fa69ZUdE9orvJ7IiPD1/3fM673PPPe//rsDV27rXqKmoqFi3UFH9f6pdm2wr
m7qosLq56e7X8Lh04r3B1R+cx4BFVtp+Vbv3M9uOrpAPnMpg/t8vI69zDMQn
ws3ORVgTSlJf3/A/KExIyLKmxnPqw6R5aOfOs3IEFcvU800+I/hEG6h0IV2V
aJv57GkhbAbPuirYWQ4aEDqW9UUWURbwZMxthfmFBSHXejQnnNMKArxDGUuV
bxIH5F+lV8ZZw1L4oeIbH5yInRl0CQt8NhDDH1O+K/0BscB2J0ooxRZUS9KC
TZg9iH6v/mAD4VugJ5usMibmS1iupFRU6jtApNlaX6d4ENEtYaRgEuUIIyxU
K5SYMEL9GlPxQrcT3Fn08/v2OpIoe1kpE8x5F2Qbd2t5KccSx9rv5woZO0Pj
kb23qj0SiLd0EuJE3D2YGI51OfUhmeCFkTcGAy5wwZSwPLmRSoQ7xwiSfA8g
aeXqdGPaW2J7pkain4UrXPE1uNWbm0W4DlNz86c8hI9JOclizLkEhaMoumj0
EbDe5jYJ8/hAWGrZs+gIu0FjQsGTWLGPRI/P/mdT191BkrNPq2TnJ0J4wHZb
uf4T6B5lCrARLyXMH5xTCl58Ar1F44b7QpCIZRXwMIrygMn4ZZOUmHKiM3uN
EDruCVuCT7TnBFUSTBe+/p3r9gTmMWKL4+tqwssj8P5TTm+wdc/RXlRqIAhu
648Gxd5wZYeOsuSXJmKl8PTCfmMfKGFKiKX1aCHsKIu3S+J8wctF/DbmtRNp
Aa1ZfvJ+ILk6U1yv3kkMCr77qTfgB5OSdUMx612EvrH59Rm+ALhuM6i2lvqN
CFmSSy0qC4DbDCZq9a/6iLqwvSPeFk9h68iNhLacfkK+rsGMJyUQzhOh2l57
hoj7lqlxU0pBUHDFeuU/xWEib8O9t2A0CLi8lu0rnowQwjIyBprCIaBM+ajz
UnScMG/dFcFVGwIMQ4vUvuETxEvb6bbx68/grAIjndeOKYKurSUN9UMhYSHM
jXJohkjl/VwtlBoKxpPXDqx2zBKKdhmjgYuhMOhW46kbRBKPaH32X4oKg4NT
9oNh0XME50WnM8R4GBxlpxriDp4nPiZfMRc8Hg5NuictbAN/E7/k5V796g6H
DYG3S2TyImF1l+QM4IwAH1Pr5uEzq8RRmnDXPIcIOKT5s0w6fo2gDj/W11cb
AT/yNR4qb10nErIfxEnci4S3/uEnnJc2iVsK3OuGzZEgFmnN8beMCk81E6Ye
glFAu0/Znjp4C/ZO0/B1tkdBAZ9o0JkTNPjmQZr7ulg0BO+RUM1k34oudKqD
wh7RQK83W4XrW5FVOCTpgWQMCB541KE8sB21LDgE+YJeAMdOKybP3wzI+6vY
W2XkBeTvrwyYZdiJM26mY45ysfCrd9a0XowRn8Ylp1VNxoLW63d1Mm67sKr7
sNjNs3GgePx0oYYiMz63bgl4HhcHXRM3UGCWGa8uOk6X/o6D1szncXviWHCT
ufDdruR44GmLenVv+16U0zwjUbDxCuSUfnLmMXEgXf9IyMDFBFgO2iVS3seB
3ba+JG1WAmg+Cw/QyuLE4qprl7LEE2H8Gxc1t9k+vDScwUn1PRFIvWyPlmVe
RLG/9RG0SWDBuWXz2DQfCjtquIodTYKbSZvhhAM/Lm6SvbpPk4D2SKLvndsC
GM4jE5d6Ihm+scyIKwQewFUrX3U5q2S4uNf8wFsOQbTI7P775VkypEQNb358
I4hSJ11NV8aTYXIlQ7KzVQibLyHvhcgUyJy/+ar8jCjSRagm/Zp7DeFqLkut
78Rx7cTQWhJXKvAcvO/03UgCKf33DfSUUiHzB0X0KYMkdoi82fExIhXaGzYP
/pKVwlcl2+89PJ4GWkXrdJ4fjuCxkUq17Y/T4fwjl7vVU8dQxN84tTA1HXpd
jifRG8ogl/jvzRtf0iEP7JdrqmVw897+gka+N+DtGc9dmP4fNjB48IVVvIEJ
gxShD49PoLm0wsI+ugw4e7PbUuXuKdTr7tJslsoAgltLW231FJ57ZP/WzSgD
+C6xn571kMdDNXFmQxkZcMQ1g4M/SgGXjNbq0jTeQSSzWyTYnMYgj6L4I88z
YWrCjir9iyK6C2uvDJdkgl/acrcynxI6NU7oRoz+y0NOUdc6KKHhXna6ZZks
cPQXg8dsyrj/rbNTaU8WXAtQGOuwO4uFrdLnz/Nmg8RGb6v8ORUMmZpROXwu
GzybaH63p6igNXW62p5b2fChd93RgFoV2Y7t0+z7nA1FeYLC4hWqWNLokVEo
kQOje7IJWY0LuE/yZu6FLzmgZ6ywrT1ME31PnpdWGM4BqXsMdt0bmjh/XvCD
1FIOvL9qkthvp4UN5gP5e3lzgZ8+w3tFSBtdw3WLftjngkVL87rYDh3sXZTD
O4x5UBJ339mHoovnqDlOWwvkAVkabaAnrod5TItll2TyIKJSpybDTg+fimRX
yJvmwas34i9WZvRQzuhADW1WHrRylK3zLejji9IdzS/VP4AHY/duHh5DvOT1
vbcyMB/EmZa21fYb4+5B4cPXk/Jhotykt0bGBOtPOT5mKMyHtR6Z8cchJii3
tI1fZzgfOlq3ebAqmuI+G8lrAycK4PDGzZrlXDMc0PQkV8YKYF58RPhlrzla
cYlulThdCKxbJlPOilght4vTxbaLhWBz+PotmytW2NVRmnbXthAM9LgOL0Rb
4blgHdWSqEJ4p8E1CQzXUITqYYjKbCHMC1BJFf++htNjzRyWsUVAe/3Icf/e
63g79454zMInGGF0Dl75Y4uUU0Md9XTFULRj/811OTu0q9N0XeMuBhljvuhr
j+zwxg+xWrOzxZC36+CmOZU9mjMOmgtFFYNojXPrDsZbqG2jHpF3vATW5Kbq
C7kdUEpAaK3JtRS6eQx7JRyc8H1meNJGSClcXhP4fjDaCQ+foFKRSikFEUid
NSGcUFSrL+J5Yykk+/9usGS8g/yPwyQuc38G4cQ5Oar3d3DPt3WLic+f4ape
gVz4n7s4H/q1bssWBGUZVf8dJS5YapcLo2wIdCYDfyZnXNBPJehjzWGE0M8e
ywx895GbSvF14CUEyWl5JR7v+3j2dpb73hyEpvFTre46D7BJWPFlhGQZPMkx
lLv6xxX5t3HqvhkoA9fppf5qNzfcdsc3+MVUGSjIX3Tx++SG04O/654ulIEA
tfB0+IIbFpR+AXuGcnhv3kPtb+uOane9xaX/KweXVe8aF4kneHeEpCsNLge+
PC2BGWEPrCuvwZZTFeB0NbE3+pgXpjX9HQ0+XwGOtmDNa+CFPt3SDOq6FVDs
5UfV6OKFirOv9OuuV0ALhT8rqsQLSzlcpsrCK2CcPubPH2VvzLktwpI3WQFu
z/3GqK74YAyPv3VERCVkpHltfZ7jhzYPVBmNZqrg0wtt16bmIMzYt8fUbKkK
2gy4aR8sBeHM555MS6pq4DpBn6HGF4y3qG+o32KtBmv3nbamjsF4N9A30OtU
Ncys7bZWZA9B9/hK+vdB1ZDcmhjOdvMZRpbLb6cRr4G+fY4ZgmxhWE4vvZlp
XwvqHvKi08wRKKovVfj0fi18bcnWk5OIwNBXErdveNXCqI2xerJqBJofPfTj
wItamHM4X/PpSQRumAhibFUt6M5TVdD+ikC5HDZ3/311wNAv9Ee4IxLzDdY2
LOvrIONecFLGu2hMS6na4BJqgFJ04H2U/hIdfPSHQLIBTHo6TlXWvMST10cr
rWQbwN+evoF//CW2Htwa8F6jAcJTAlX4hOLwT64Si+K9BvDcGu968HUcqpdV
iNjUNkC9o9EXt7R4/P29TLvQphGURs/YnS9NwNNsn5P13jfBiV8GS7VsyShe
+72o5mALtG7qVcz+TcPO03qUt5RWCKv51lwlnIV2DLbtXVLtMPgw7dLl/lxs
7DH8zBTSAS1buWkbRgtQ79ylodHRTtiVXl/bqFeM/yUGGiYKfgUPo6e7IkcJ
HNx43nnDvRvMrI7Py4hW4JhqSwpbZQ8YcP65mT9RhTkvfjxoE+iFK04sj314
6jDVnyZAzLUP+qxWGTLdGnHR8vK0dcl3yNkuJRzR/QV3KPvq5rIPALAvfJq/
2IaPdo/tHDL5ATeSnGP+ynTgTuIQVbfGILiUpbg28XWh/D2t9crVQXA484XX
9lw3xr0OSjkQNwSZyr0Jm4bf0OzisWb6C8NgPn9DWO11HxZ0XXtOLA2DXrfx
tzNz/SjblEM9HjUCi9Tj0XNMg8h/1nrxufIoqEhoDbDAEMockwnLHx+F6EN2
58OMh/HHfHB9is8YeDt3Sbo6juDMUR0fTulx0J8zbT0WN4rCP8Wnt3SMQ2pq
WX7i+zGsEnRud/CYAIWNrfuj2sbxWWeXpa7gJBwvj2G8920CSb2yMOqqSSii
YWTX6JjEvIt7lWQdp8DzrcD+oq9TmNLsFT/MPA09uiqJrqXTuFxr8pC5YhpO
JovM2aX9xMEwXNx96yecU4tKvf1wBpfaTnJ6Ms2A9wpr8R7pWXSI2F/2oHQG
FE9P7LIbm0X25v27R81mISqQvdvUlYJ6XZl/uTdmYVTlxVnRVQq6pduttlBR
ID7iS4LYX8q/f/DwiicNBXL6h8LFNij4lyfz9yQdBdjZtisKUZOYZv1uOp+F
Ahanq4t2MJC4uvy2R12MAk8n3d5EcJKYzJWe/0ifAm6J/drPj5PYNGOdJ2lI
gU49p0lrWRKXCeGcYSMKdHeG0sueJFHdMu2dyhUKbFFkGe9RIHHpXWoy681/
91I0l7efI1FN/nVopjsF2Cp4Z/bpkzh/JcnuewYF0m5s8greJnExepuMRRYF
Pi2YRL5zIHGlxWZ9LJsC+HI+54gTiZsgHULmU0ArL75T1pnEnfyV2dRIgZMR
rIWyD0kUGhydF+2gQKkTl9CyL4mXzEUfOK/92x8yTrSIJ9E4JujM6joFOthC
J0pekWjW+ovenYoE6itieayJJF47/SnWfxsJ8zeJxvJkEp341Upf7iLBtvLg
OP0bEoMGbTfLD5AgI8Wqop1HIppn+zCpk5BAt2c9vZrE4ha7CwOaJERm1BnN
1ZD4UeHgnvc6JEhXXfc7UUdiJndqnIYhCRYT8UplDSTG9sR+CLpKQnm7Rkl+
C4nO2r5DDA9I2OnbQx7+RqIDKqX3PiShM7JsRruXRDuJLfYZbiQs2liYOfWR
eHXnoxVVbxLeiok8yeonUbvOcVfAMxKODn5ooRkm8dBpU3naNBJUpLcSItMk
Cmdz0XS/IcGeXdmd9yeJ+3l76tLekcDzHz0N8wyJHH919c/lklDk68BEzpK4
vUjF1qeUhD0BxjzucyRSi2w/chFJ0Iv/PGg0T+J6ZOWSYAUJT4QEUOo3iQt3
FDyraknY2qZ8uX2BxCHJYy9oOkgIlC2/NLRM4vdXc2YdXSQEe3aov1ghsYcx
WzClh4TL1psi6n9I/PJTLEdxgITzi0yvk1ZJbLg84cw8RMJccdsnpTUSq+tf
nxweIaFrcznuxz+XpvPVekyRUCpZcJRmncQitv4gnRkSmnQWfgb88wefWF0B
kgROyld7ug0S3y8YcszNkUCEWk4+/ucMy70DZQskrFmFXpj659T29pTQZRIM
H4ULqG6SmHgm1MZ8lQT/Mu+TL/85LkdDUmqdBI5dAfV9/xzNt2Nxc/NfH0eL
bSc2f+D/APV4EUE=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
u7k=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
l6U4
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> 
     FormBox["\"(\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
s\\)]\\)-\\!\\(\\*SubscriptBox[\\(p\\), \\(0, \
s\\)]\\))(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       TraditionalForm], 
     PlotRange -> {{0, 1}, {-1.0000000001085334`, 8.186656025875297*^-17}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"(\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
0\\)]\\)-\\!\\(\\*SubscriptBox[\\(p\\), \\(0, \
0\\)]\\))(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"(\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
1\\)]\\)-\\!\\(\\*SubscriptBox[\\(p\\), \\(0, \
1\\)]\\))(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"(\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
2\\)]\\)-\\!\\(\\*SubscriptBox[\\(p\\), \\(0, \
2\\)]\\))(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"(\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
3\\)]\\)-\\!\\(\\*SubscriptBox[\\(p\\), \\(0, \
3\\)]\\))(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"(\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
4\\)]\\)-\\!\\(\\*SubscriptBox[\\(p\\), \\(0, \
4\\)]\\))(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"(\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
10\\)]\\)-\\!\\(\\*SubscriptBox[\\(p\\), \\(0, \
10\\)]\\))(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8050385520974846`*^9, 3.8054616533595324`*^9, 
  3.814275933411826*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"pMinus2", "[", 
      RowBox[{"e", ",", "0"}], "]"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"const1", "*", "const2"}], ")"}]}], ")"}], "*", 
      RowBox[{"p0", "[", 
       RowBox[{"e", ",", "0"}], "]"}]}]}], ")"}], "*", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"e", "^", "2"}]}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{"3", "/", "2"}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8050387331345353`*^9, 3.8050387337569695`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", "\[Pi]"}], ",", 
   RowBox[{"e", "<", "1"}]}], "]"}]], "Output",
 CellChangeTimes->{3.805038781691003*^9}]
}, Open  ]],

Cell["Yeet.", "Text",
 CellChangeTimes->{{3.805038787014943*^9, 3.805038788444131*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Are the last two integrals ever not not partly real?", "Subsection",
 CellChangeTimes->{{3.806324121400833*^9, 3.806324155049063*^9}, {
  3.806324850259924*^9, 3.806324863928026*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{"x", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "4"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.80632461702213*^9, 3.80632465858255*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6F2DGDwwb65sbuiS7LFHsZPKXkv2Sk5
Bc7nmOK58MPHJXD+9gtG7u5y6+H8iOY7tw53b4Hz8zcW6874shPO/zTh2glG
xv1w/omDx/aftzkE52dWevJGvjkC5x/kNPq/Jvc4nL9s8ZF/Uqqn4HwHsb2L
gtedgfN1j9/ZcUzrPJx/xSH43cp3F+D8HK7sS1cNLsH5p2+E7+XruwznB7tF
PHzy5Aqcb7agO3yByjU4/8G/yVcy6q/D+U89zy8WO3wDzt8w837lRcVbcP7S
DuZOzarbcP7X5KhXabvvwPncLm1BG8Xvwfk1Ak95Hsbch/N59mkzXPd9AOfb
lvn/PfwLwZ+zpGex8pyHcH5cqMlZTu9HcP7Wq6mT931D8C3PbGB6Nu0xnK/g
mvZ1sssTON/UxHTilmcI/v1PvScXtz6F898YB7ZKGj2D89Ve675ivIzgH1Ep
vVTQ+BzO779yNTlI5QWc/z74wESmIwj+plBRZ8vCl3D+4rPNcx8JvYLzvx+P
qRY6hOA/mLj/q0Deazj/20VrySa+N3B+wRSlA5V7EHzxs0oCT+LeIuL36po/
Mv8Q/E/xC3PurHoH5+9PWN/K5/Meztd2iLVlX4bgT5fn/vr/P4IPAG/FGY8=

     "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6F2DBDg0NzYXdEl2WIP46eUvJfslJwC
53NM8Vz44eMSOH/7BSN3d7n1cH5E851bh7u3wPn5G4t1Z3zZCed/mnDtBCPj
fjj/xMFj+8/bHILzMys9eSPfHIHzD3Ia/V+TexzOX7b4yD8p1VNwvoPY3kXB
687A+brH7+w4pnUezr/iEPxu5bsLcH4OV/alqwaX4PzTN8L38vVdhvOD3SIe
PnlyBc43W9AdvkDlGpz/4N/kKxn11+H8p57nF4sdvgHnb5h5v/Ki4i04f2kH
c6dm1W04/2ty1Ku03XfgfG6XtqCN4vfg/BqBpzwPY+7D+Tz7tBmu+z6A823L
/P8e/oXgz1nSs1h5zkM4Py7U5Cyn9yM4f+vV1Mn7viH4lmc2MD2b9hjOV3BN
+zrZ5Qmcb2piOnHLMwT//qfek4tbn8L5b4wDWyWNnsH5aq91XzFeRvCPqJRe
Kmh8Duf3X7maHKTyAs5/H3xgItMRBH9TqKizZeFLOH/x2ea5j4Rewfnfj8dU
Cx1C8B9M3P9VIO81nP/torVkE98bOL9gitKByj0IvvhZJYEncW8R8Xt1zR+Z
fwj+p/iFOXdWvYPz9yesb+XzeQ/nazvE2rIvQ/Cny3N//f8fwQcAqsfo9A==

     "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6F2DGDA4dDc2F3RJdliD+OnlLyX7JSc
AudzTPFc+OHjEjh/+wUjd3e59XB+RPOdW4e7t8D5+RuLdWd82Qnnf5pw7QQj
4344/8TBY/vP2xyC8zMrPXkj3xyB8w9yGv1fk3sczl+2+Mg/KdVTcL6D2N5F
wevOwPm6x+/sOKZ1Hs6/4hD8buW7C3B+Dlf2pasGl+D80zfC9/L1XYbzg90i
Hj55cgXON1vQHb5A5Rqc/+Df5CsZ9dfh/Kee5xeLHb4B52+Yeb/youItOH9p
B3OnZtVtOP9rctSrtN134Hxul7agjeL34Pwagac8D2Puw/k8+7QZrvs+gPNt
y/z/Hv6F4M9Z0rNYec5DOD8u1OQsp/cjOH/r1dTJ+74h+JZnNjA9m/YYzldw
Tfs62eUJnG9qYjpxyzME//6n3pOLW5/C+W+MA1sljZ7B+WqvdV8xXkbwj6iU
XipofA7n91+5mhyk8gLOfx98YCLTEQR/U6ios2XhSzh/8dnmuY+EXsH534/H
VAsdQvAfTNz/VSDvNZz/7aK1ZBPfGzi/YIrSgco9CL74WSWBJ3FvEfF7dc0f
mX8I/qf4hTl3Vr2D8/cnrG/l83kP52s7xNqyL0Pwp8tzf/3/H8EHAEU06pQ=

     "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6F2DGAg4NDc2F3RJdliD+OnlLyX7JSc
AudzTPFc+OHjEjh/+wUjd3e59XB+RPOdW4e7t8D5+RuLdWd82Qnnf5pw7QQj
4344/8TBY/vP2xyC8zMrPXkj3xyB8w9yGv1fk3sczl+2+Mg/KdVTcL6D2N5F
wevOwPm6x+/sOKZ1Hs6/4hD8buW7C3B+Dlf2pasGl+D80zfC9/L1XYbzg90i
Hj55cgXON1vQHb5A5Rqc/+Df5CsZ9dfh/Kee5xeLHb4B52+Yeb/youItOH9p
B3OnZtVtOP9rctSrtN134Hxul7agjeL34Pwagac8D2Puw/k8+7QZrvs+gPNt
y/z/Hv6F4M9Z0rNYec5DOD8u1OQsp/cjOH/r1dTJ+74h+JZnNjA9m/YYzldw
Tfs62eUJnG9qYjpxyzME//6n3pOLW5/C+W+MA1sljZ7B+WqvdV8xXkbwj6iU
XipofA7n91+5mhyk8gLOfx98YCLTEQR/U6ios2XhSzh/8dnmuY+EXsH534/H
VAsdQvAfTNz/VSDvNZz/7aK1ZBPfGzi/YIrSgco9CL74WSWBJ3FvEfF7dc0f
mX8I/qf4hTl3Vr2D8/cnrG/l83kP52s7xNqyL0Pwp8tzf/3/H8EHAN+S7DQ=

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {1., 4.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.806324660291873*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"NpTwoC", "[", 
       RowBox[{"e", ",", "n"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8063241719125085`*^9, 3.8063241762765694`*^9}, {
  3.806324221826468*^9, 3.8063242944203167`*^9}, {3.8063244638611927`*^9, 
  3.806324467882474*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]], LineBox[CompressedData["
1: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
CCij/wN1BSOE
     "]], LineBox[CompressedData["
1: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
1cb/As0tqJ4=
     "]], LineBox[CompressedData["
1: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
KoNPSnSmR7EtQHz2OmfYdln8P0C5tTg=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {-10.030266105733304`, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8063242706529655`*^9, 3.8063245685350657`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"NpTwoD", "[", 
       RowBox[{"e", ",", "n"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.8063244813510914`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({4.700019483074162`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(3.122502256758253`*^-17 + \\(\\(3.4365999629359933`*^-13\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(8.651414122278267`*^-16\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8063246784334354`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]], LineBox[CompressedData["
1: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

     "]], LineBox[CompressedData["
1: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
Eyo2
     "]], LineBox[CompressedData["
1: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
+PH/A/QdjpY=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {-10.47448875189707, 7.085366198873957*^-25}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.806324793511828*^9}]
}, Open  ]],

Cell["\<\
So, yeah, I guess they\[CloseCurlyQuote]re not not partly real most of the \
time\
\>", "Text",
 CellChangeTimes->{{3.8063248054070525`*^9, 3.8063248115329127`*^9}, {
  3.8063248717070584`*^9, 3.8063248774375567`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Shape of m=+2 feat. Ed Sheeran", "Subsection"]], \
"Section",
 CellChangeTimes->{{3.8042512100145044`*^9, 3.80425122042684*^9}, {
  3.8045105059687233`*^9, 3.8045105220822697`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(2, 1\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(2, 2\)]\)\>\"", ",", 
      RowBox[{"Re", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".1"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".1"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".5"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".5"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}]}], "}"}], "]"}]}], "}"}], 
    "]"}], ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.805458864923042*^9, 3.8054589307997527`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\\!\\(\\*SubscriptBox[\\(p\\), \\(2, 1\\)]\\)\"\>", 
     RowBox[{"-", "0.3137673893133078`"}], 
     RowBox[{"-", "1.5247413386423725`"}], 
     RowBox[{"-", "2.6595700487981055`"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(p\\), \\(2, 2\\)]\\)\"\>", 
     "6.1266154191760025`", "2.6630130613042873`", 
     RowBox[{"-", "3.6177875183708226`"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.8054589416116943`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2", "[", 
       RowBox[{"e", ",", "0"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2", "[", 
       RowBox[{"e", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2", "[", 
       RowBox[{"e", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2", "[", 
       RowBox[{"e", ",", "3"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2", "[", 
       RowBox[{"e", ",", "4"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2", "[", 
       RowBox[{"e", ",", "10"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 0\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 1\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 3\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 4\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 10\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Divergence Not Removed\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8045100356035676`*^9, 3.8045101033535337`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.000024185766477748702`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(-2.49366499671666`*^-16\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.5939906358846744`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045100653221345`*^9, 3.8045101059880857`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045100653221345`*^9, 3.80451010605203*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({4.503669942224799`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.734723475976807`*^-17\\)\[NoBreak] and \
\[NoBreak]\\!\\(3.820404467573641`*^-16\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045100653221345`*^9, 3.804510106112974*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318519448951320385675257047976413268819406710008479421958327293`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.7695567233744214`*^-13 + \\(\\(4.163336342344337`*^-17\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.367876784470429`*^-12\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045100653221345`*^9, 3.8045101063587437`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045100653221345`*^9, 3.804510106421692*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045100653221345`*^9, 3.804510106795339*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045100653221345`*^9, 3.804510106928217*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045100653221345`*^9, 3.8045101069891586`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwl0mk4lVsbB3BDhkTJZu9nhwyhHGPiKMm9NKlkno8SlSSUITI1UOoYMuXI
mCmKCpnn/YhjKDLueDOPIe0nXuQkvM+53g/rWtfvy3/d67r/UhdvmDpysLGx
FZHn3/uM40wXPmuhQ1E6br4mRUdf8i0vjtDVwfI9tvCTNHUbM7KYfhwkr6Q2
/0O6su6O6y05Q0ji6e77QVr5kHB2Kt0cCqrKpJZJs1Fmn2xK2IBAtH72Aumu
+dpgBzk7UEiNvviNtMml1gqHeAdAv0JsZkhrdR4ojKVfBqM2hbBx0nuOPHvR
kHIFKPuDlwZI8+fxpi1JOAPNLDShl/QS1SteNssFnl/Q9WkjPXR/6LGl3HVo
/zPvcQPpS6tZ7xrM3eEC19/DlaT7lG10zsV7wC/BGOcC0nhyg8Zj+k0IGtBR
TCCt3u37VtbWG7zlpS6Hk87lVVaqS/GBAJky5m3Ssd4JMoSEH5jd/MfRnjT3
a4P0Rw7+cPbOywfGpP3HOcQkswKgLG3bEPz7vpEbxUTuDqQ2E1pipPtDpKNm
ne7C1VwPtJW03LALV735PThuk3t3WZKOkoSlgmzig0Bhu/arD6TvB4X7htEf
gNqJ9bLrpOvErpRZVj0AJ9bhMAvSq+VoSdo2BErL1Z8eJu3KWr5RnfIQkLKV
HRdpc1t7p3mJUFA08syIkqCjyBWt7Ao8FDYC4o66k26JEZl44BAGgmd9xI1J
H2l5byeeFQ6bCwH3BEjLaWhYGspFwpxMztqd3XRk37kjbldzJKzRB6/ZkE52
meuadooCzyv9lAOkebs6chjm0bC3ai9lUpyOAnlCpK3jY2BST7tZm/TlmwQ9
lB4Hnb4y3K2idHSAM9a/yD0OpM+HMmNJc8SqDww0x4FVDW+NLem0Ar8UZZ+/
QFrx/Me5XXT0eY5Torc7HnR5wng36HRk5IDJSEQkwr5Fz95VGh3t/l714NRE
IvBXn6KWkJ6/c37KQysJdq+b37hOOiwlM6dxJglSuzGnUSodNfYpyl87kQJN
AQ/dKkXI/hnqKpduPANvSWYfUMj/DE1EDlukARePQOS8ENkfl4cEz5s0yFlN
tU0gXdXoaP1GKR1SHvVqf9tJR9bjeXS2wXSQj+ynRQiSfRHXSMk+mAmyyV5q
zwTIvLjTGd8XnsPNW1sFhHnoaO3g2FrGrmyg336p+IqbjlhDvpZmx7JBlbsu
SJd0z96X28risqFf0KrNhYuOnlVz+wRo5sBL6fCJMk6yrxMNZ7hvv4A5p3Ni
e9nI/ajpLIny5kFdUtGHG6sYMutjGrar5kHGX4/Tvv3A0MlAt9w7NnlwiUs7
9xpphaYUu7G8PPBQkbS7uIKhFZu1lhyDV6Cm6WB4aglDEUEVqfufvAaT0iJ9
FoGh8k41Pb3dBTDnt96VOY2hyNn5U4onCyCox9Cbj/QVjhdndl4vANP0KkuP
KQxR1UUNB2oLIIL2vUd7EkPVH4LyypULYY12qOL9GIZEVa691f9YCF6nHim8
G8TQ52UthpdAEYgryvRLdJPzcpCZUkVgbCt98kYXhoq2L+PWGkUA/eWLtZ0Y
Cttb8O7I+SIwCq3ksenAkJbNniaeN0Ww5hwp9bANQ4k129qTzxbDyQNHsZom
DFnfH/zcEF4CXaLjqk+rMCQ4KqfolFECI2etrtdWYqhV2+M2X3kJZI6OtIxX
kHkrXJIm4yXQEH2M+Vs5Oa+ziuPwwVIoprGfLSzG0LBhMLE6VQqdT1rLol9j
6PKufVuUUTn05Qflv0jF0I23XkoJS5WQv1ibqXIbQyztsZ5W3irIPM2WrxKI
IdcWQ/81sSqI5hRdVg7A0NUR+Wa7E1XwNXTxdwU/DNkLjNrLxleBrsF/Qnd5
Y8jY+WxckWY1fMsQ9Ox1xZCqlOxam38NKLT5+JXaYmgx+lMLOzsDNFPkhpU0
MdRS38To0H4H+7/Y5T4doiFnv9MCNvONEMs0vD5zi4bqt6ptvnZrhpxMH99F
fhrKyWrc2CX7HgT52kwXwqkIUWszzfLb4BefLq8/DxUpNQ9WNP3WAQpxbsdD
/UVQLzJj5bI64fHBmnhPpjBy5XPpZqp2Q7DAaJiWqjD60G9Vuz2yB3Kem6rp
eFCQ2UnrscnJXtC6dUafJ08I/Z4ebpUu8wmydszsEZreiUY3nvRevdsHVWW+
Jc3cO9HU6Y4sakM/jDz7/XOCoiAqTBzx65L6DLyaEfeYLttR9p+cofL+A6Av
mRBzx4sfLV/6Y+5K9SB8zf7a8iWcD207/tD0LW0Ybu7hOnbTmRcFCk7xj50b
gXai54eJLTfir1Ng6zMYBfVVc17L01vQER+j9Yafo7DBIZFnu8aOUp5HZO1J
GQNVo2oftqhNsLNQb9+qPw7/5D3bSHvzE0qZjk/qVsaBI+rDJ8/WZTjUVsgx
HT8BrbV+8foyCyB54sryk+OTkFmqdzqPbwY01DViSqYngWl839f49SCMLD5u
zQqZgjV22XnJD+9g/oBJCF1tGgQmp+teRTQz5L4qzbH3TIOO0HCFOmOE0Sjj
3e0e9AWKm9MLvn2cY0T1Mi+ZyszAsLiY3svIRQZhhsdwNM5A/YVX4QM5PxhF
FiLHDnnMwpvZcnrYoXVGVvv91HGhOdjMp265qs2O/2g+FyD0bg4SpxOrnUW3
4KMxjGXB61+hqfLX0bFlbnyl6zA9ePs8eM89davJ3Yq7x0njfjXzsMb3UVrh
JT9Oa5cWnLT7BvnqekajYTtwM+brX2Ib3+Cw8rod0t2JL17IcB3MY0HVfTdb
P3YKvvyUS8PhDQvuMQWtPXkp+GqH8/pUAQvOZwRG3dhBwTdBLZIoYcGAnvac
jzgF55dsKOBgsKA+Loi9+hAFlx2dXNzXw4LLth/s9npRcGv7fX7eayzIT6kU
FJ2j4LYJEbo/11lgZGiny1ig4Had37feZSOAMqJndO0fCu6IKpP+5CLguLR2
IJNXGPeUPFOTvIMAJwPJNM59wnjEqMtm/R4CknHbfcNOwjjDviBk+1kChJqK
NRpYwnhVh6v+sCEBGQ9dPRNXhfEynd925psQ4OEVMXeXQwR/LZadYmBFQIjX
gOldqgie1J9UHHGRAKJd+JEFiODexg/H+PwIcNT2aR+JE8HdGcdefA4gYLqk
V3MtTQR3VWZ3y7tDgG+17bzqKxH8In/g6ukHBFgIJo+x6kVw4xaPHaFRBBjO
rsX2fBfBFdD5Izw5BFRaK2xxs6DicgW7OPteErBlXi/s74tUXHp3f0vOKwLG
NQONTdypOPbL1PzkWwK0/mvUJBBBxbkrTrmE1BBQ7y4+cauJinPs5d5vwSBA
nNrR18Sk4ut/NazIvCPgc53Be6cpKr7kpRPc2ExAX/boz3IuGj6mop7I2UPA
1810eVd9Gj74bMGuh0lA+7zDgz12NLxfoEAmq5+AIf2jqv4eNPzjV/nCo8ME
cEcYsYyTaPj7P754C40RMBodvrJZQMP/bn1+eHyCgKNFj5UKm2h4zQuJ5qBZ
ch8RTJ76HzS8gjoUYTJPgH9u8M5kIQwvDkkylSIIsDr/QuSWCobnL1lhCwsE
OChs0xo2xPC8SyLD+BIBjF8pR7M8MDy7uzsr+gcBwbWEiXwihqfrRjvb/ySg
IvZTnWwLhqcUGqiorhNg0tgak8BFx03e/t/rCXpf+qmq6H+tWDGm
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
lduGH0eEVND/AanTmCM=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVl3c81d8fx0UKKULfENmbS0UK9/P+JFvDLGTvJCJZJZkJyc7eO7L3uvbO
HiFZcS9CGSXrd3//fD6P5+Ocx3mf93m9xzkcpvYaFqQkJCRzxM///yoW+EEc
QRv5SIqjIUmoq/vvzGhIKZMcrAR+cEjEddRhbjJkJjJpwTmJZ+FZpbV1JPSE
iGM2XSBn97W3l+yqG1yr9zbhNQT0NVKmqllZp27WVWUSbQJWw6Ui2vi6OqmB
a0XhTObgSE/FQyi1kuHCJmW3JFhCqmDmbsOtljrqPIrkbbbHwJLVjPtw1F63
/d/zaJ70J/CBh7TT4FpU3Tefb+8f8NqBNNK/VhnTUGf2N725ResZPJp76hT3
IVJmHKOL6Ec7wN7h8LMc6sa6OxbnarbHHYHN+l1tQ2NlHS6+ReI9kxM8kMKF
tslkyIgPuRbzPHoBkt5HUVodTnW5FBiRhgRnEMtLtBpaGJe5DAs5D2ZcYCih
tvxIekIm/EUM9wabG8hOOUn5rxFkTuXfTXlr4g5H2BW2RcyWjPs8KQt7+kv4
y3awuB9Fgl1nrPpYtfgKyjnzXepMTmHN7j+lV+d9DdneSy13HGixE36cHwhW
nlC423XVneYilnfmCXmT1hvo/rL/J3WAFWvspnD7/c4bWDL4FUvOzIONY+Dw
0o32gqld3o5bT4SxI4X7DTyS3uAfL2uiOngVe0517ODXuDdcmb9UzNR4A6u0
VCTV4OoD7o6qa1yAYn28glwDmXzhErVmcflPOWwDi2XFgxpfuJmXfNTVqoL9
W4lucz7yg6e+svHDe2rYq5qXrm7s+4G/2Dk3bnttrO36jn1tgj9kLKxXu47o
YbPeDRS8xb4Fv2SKJM1yY+ws96dVzZm3sGmt2OydZ45lxvkJsHsGQPqJ/hJJ
y8dYrUfGVmts7yD4ac2zUIw9NmRXKrMK9w7wYqkOY2TPsZ1hFxZ8TQLB5Nmi
4AClC5ZUZJNdnTQIyEp1N+9OvMRiO7sNWdODoG1jFGtZ8gbrapaZQLgdDP3L
jRG9J3yxJUeek+WLwaA0yfLn69e32LVYPUZvv/fQ+ht2pu4HY3klJB7c4w2B
ruZ26oXmUKzxAE0kc0cIbNjdZfvXGoGNf7IyuGT1Ad6s/DGau/kR+8Rn/q3u
yVBYEGBKcrwZj6UY7M9q1AqFbl54ldybjM28XN/GkxkKd0PpVWd80rCytnmL
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
bJvkrWngdiERE3KcALLjrFiL4G/wQ7k//b+WCWD11fuRzTUL3EF8H8I6JyDo
3KlzUjKzYN7r6U79ZQJStbW4V7RmYf6emDrp1wli3m97ZvjPwoxm2NHP9Qk4
p5bd6Ls6CxMGmrptzF+BXNB+mrJ2Drodxs85OX6Fnz22E1MOC0BZKvpv3eUr
NNgklBiELIDS9tsfjz2+gvizvCqSTwvQ4XyjzijgK1QY9xfnLS5A68vYx6pJ
X2Gf9al0mO4i1Ps9auXs/goGGv5jjco/oCj2u9sgxyRwvxJxNZBbBlsBlsmr
fJPQM07enmS+DPzVOlKRwpNwmjxAlsxvGZInBv89kJwEiwltkevtyxBysfXl
9J1JQCnRCAUVPDyNyvFYdpkEH/9nv/h0CSAY5uB12Edcn2C4kBy+Ckvsn+cM
hyfhvP4LD9fKVUgrWrmFm5iEh3viri7Tq8A8YEbqszAJ/dpXd/G8a0BJ88CH
Ym8SnPZL5xLq1wAfLOVHzz0FQ/V084a/f0JmANk7AfcpePJYVedYZhPoFgNe
YzynYFtW86232ia8gXNO13ynoPblVu9F803Q22U0woZMwZfRe22uQZtAY46R
UE+bgiu8T4IuTG2CG+jOuXZPwXB107MWj19wd/fzzU7mafj5LuHJjcHfsGOm
t2JZOw39eXMrDSU74Ey/Tz+Bm4YD2oZhnr4d2G2Oxyq3T4Pkc/G/GctE5vgW
KjQ4TXx3hPKssezC3+9GkptL0yCMaNgmB+zCv0cWvm503yBjtdAmw/wPkGg9
uxz8+BuQtD074SG6B2fk/DWKL87AcJp8/B7dIcg02p9vZ5mBvcfv/iVdOQQ7
Kd2BSY4ZCH7AdEJf7RCGxITvnRQmjn9O4WUNOYQ41iHlh+gMmDmrtNRRHQH/
H9Zbh9bE9cA1z5XiGOTyykWVa2ZAq0L98bkgEvQV7Q/qOf3vgPdXWVuoJ0Wp
G4RIxu/Owp0Gav+VtNMo1vn+Ycu/WQip3bv9bPIsmpARnM6VMAdpj1yszsnS
oYba4n2UqvNAy+/C9VLjP7R81CKiYXceTBsxCy41zOjN3iLSpegFoL/lo8jA
w4ayy1vuRMgtgorF1o+LFzhRCXGJsLKlRTjju5Ek6cqNfv/9vivd7wfE2zBe
/NTOi65dU/djuroEoQEndnq5BNCurEXeRPElqO2WD7kqLIBmMbl2sksuwYr+
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
4Mr4sqi1dtdBKbF2pEyZH/c/x90hAA==
        "]], 
       LineBox[{{0.9996567653556984, -12.14395775594916}, {0.9996567653557238,
         16.08924718378056}}]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Divergence Not Removed\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {-12.14395775594916, 16.08924718378056}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), 0\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), 1\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), 2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), 3\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), 4\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), 10\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.804510066001502*^9, 3.804510545294339*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"pPlus2", "[", 
    RowBox[{"e", ",", "1"}], "]"}], ",", 
   RowBox[{"e", "\[Rule]", "1"}], ",", 
   RowBox[{"Direction", "\[Rule]", "\"\<FromBelow\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.804518915038018*^9, 3.804518969420539*^9}, {
   3.8045189999402113`*^9, 3.8045190098330264`*^9}, {3.8045191084085293`*^9, 
   3.804519110972151*^9}, 3.8045213191649885`*^9, {3.804591333495635*^9, 
   3.8045913344800406`*^9}, {3.804591381929338*^9, 3.8045913843784075`*^9}, {
   3.8049512316514273`*^9, 3.804951234431384*^9}, 3.804951319239684*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Refine", "::", "fas"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: one or more assumptions evaluated to False. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/fas\\\", \
ButtonNote -> \\\"Refine::fas\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.804518943451646*^9, 3.8045189702058105`*^9}, 
   3.804519011654339*^9, 3.8045191114317245`*^9, 3.804525277930222*^9, 
   3.8045953344096327`*^9, 3.8046031823013773`*^9, 3.8049527141131077`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Refine", "::", "fas"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: one or more assumptions evaluated to False. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/fas\\\", \
ButtonNote -> \\\"Refine::fas\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.804518943451646*^9, 3.8045189702058105`*^9}, 
   3.804519011654339*^9, 3.8045191114317245`*^9, 3.804525277930222*^9, 
   3.8045953344096327`*^9, 3.8046031823013773`*^9, 3.804952714186039*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Refine", "::", "fas"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: one or more assumptions evaluated to False. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/fas\\\", \
ButtonNote -> \\\"Refine::fas\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.804518943451646*^9, 3.8045189702058105`*^9}, 
   3.804519011654339*^9, 3.8045191114317245`*^9, 3.804525277930222*^9, 
   3.8045953344096327`*^9, 3.8046031823013773`*^9, 3.8049527142639685`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Refine :: \
fas\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.804518943451646*^9, 3.8045189702058105`*^9}, 
   3.804519011654339*^9, 3.8045191114317245`*^9, 3.804525277930222*^9, 
   3.8045953344096327`*^9, 3.8046031823013773`*^9, 3.8049527143129253`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Integrate", "::", "idiv"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral of \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(e\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((\\(\\(-1\\)\\) + \\(\\(e\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^2\\)\[NoBreak] does not converge on \[NoBreak]\
\\!\\({0, \\(\\(2\\\\ \[Pi]\\)\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Integrate/idiv\\\", ButtonNote -> \
\\\"Integrate::idiv\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.804518943451646*^9, 3.8045189702058105`*^9}, 
   3.804519011654339*^9, 3.8045191114317245`*^9, 3.804525277930222*^9, 
   3.8045953344096327`*^9, 3.8046031823013773`*^9, 3.8049527149175563`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Integrate", "::", "idiv"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral of \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(e\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((\\(\\(-1\\)\\) + \\(\\(e\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] does not converge on \[NoBreak]\
\\!\\({0, \\(\\(2\\\\ \[Pi]\\)\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Integrate/idiv\\\", ButtonNote -> \
\\\"Integrate::idiv\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.804518943451646*^9, 3.8045189702058105`*^9}, 
   3.804519011654339*^9, 3.8045191114317245`*^9, 3.804525277930222*^9, 
   3.8045953344096327`*^9, 3.8046031823013773`*^9, 3.804954603087755*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.8045189446075716`*^9, 3.80451897068037*^9}, 
   3.804519099395895*^9, 3.804520963824106*^9, 3.8045386693517113`*^9, 
   3.804598288232232*^9, 3.804623348103205*^9, 3.804980827800487*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(2, 1\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(2, 2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(2, 3\)]\)\>\"", ",", 
      RowBox[{"Re", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".99"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".99"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".99"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".999"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".999"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".999"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9999"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9999"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9999"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".99999"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".99999"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".99999"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".999999"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".999999"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".999999"}], "}"}], ",", 
           RowBox[{"NpPlus2", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}]}], "}"}], "]"}]}], "}"}], 
    "]"}], ",", "7"}], "]"}]], "Input",
 CellChangeTimes->{{3.8048666498250537`*^9, 3.804866655502659*^9}, {
  3.8048666901606593`*^9, 3.8048667304500246`*^9}, {3.8048667740261574`*^9, 
  3.8048667785429173`*^9}, {3.804867046611473*^9, 3.804867065395094*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.019241423161113744`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(3.6906124272875`*^10 + \\(\\(4.68328609241232`*^7\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(2.2177103155216227`*^13\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804866741341329*^9, 3.8048667857275577`*^9, 
  3.804867067930422*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.019241423161113744`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.84529940014375`*^10 + \\(\\(2.341689776577314`*^7\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.1088559869769982`*^13\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804866741341329*^9, 3.8048667857275577`*^9, 
  3.804867068051319*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.019241423161113744`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(3.6906124273`*^10 + \\(\\(9.366572214403899`*^7\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(2.217710315521614`*^13\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804866741341329*^9, 3.8048667857275577`*^9, 
  3.8048670682741284`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804866741341329*^9, 3.8048667857275577`*^9, 
  3.8048670683330803`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\\!\\(\\*SubscriptBox[\\(p\\), \\(2, 1\\)]\\)\"\>", 
     RowBox[{"-", "2.6595700487981055`"}], 
     RowBox[{"-", "3.116824529718508`"}], 
     RowBox[{"-", "3.2857348803967557`"}], 
     RowBox[{"-", "3.3448305086308046`"}], 
     RowBox[{"-", "3.3630212347847075`"}], "1.3884009747282822`*^15"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(p\\), \\(2, 2\\)]\\)\"\>", 
     RowBox[{"-", "3.6177875183708226`"}], 
     RowBox[{"-", "5.621276507077562`"}], 
     RowBox[{"-", "6.153195600849409`"}], 
     RowBox[{"-", "6.322470066890371`"}], 
     RowBox[{"-", "6.375538721612853`"}], "1.3884009757739368`*^15"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(p\\), \\(2, 3\\)]\\)\"\>", 
     RowBox[{"-", "3.7809364193040014`"}], 
     RowBox[{"-", "7.903843622915214`"}], 
     RowBox[{"-", "8.906196626795282`"}], 
     RowBox[{"-", "9.2127146490241`"}], 
     RowBox[{"-", "9.309314632766881`"}], "1.388400976819587`*^15"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.804866742136607*^9, 3.804866786466484*^9, 
  3.8048670692972593`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(2, 1\)]\)/Pi\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(2, 2\)]\)/2Pi\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(2, 3\)]\)/3Pi\>\"", ",", 
      RowBox[{"Re", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"e", "=", ".9999"}], "}"}], ",", 
            RowBox[{"NpPlus2", "[", 
             RowBox[{"e", ",", "1"}], "]"}]}], "]"}], "/", "Pi"}], ",", 
         RowBox[{
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"e", "=", ".9999"}], "}"}], ",", 
            RowBox[{"NpPlus2", "[", 
             RowBox[{"e", ",", "2"}], "]"}]}], "]"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", "Pi"}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"e", "=", ".9999"}], "}"}], ",", 
            RowBox[{"NpPlus2", "[", 
             RowBox[{"e", ",", "3"}], "]"}]}], "]"}], "/", 
          RowBox[{"(", 
           RowBox[{"3", "*", "Pi"}], ")"}]}]}], "}"}], "]"}]}], "}"}], "]"}], 
   ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.804866824916457*^9, 3.8048669366087914`*^9}, {
  3.8048672981965246`*^9, 3.8048673030612073`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\\!\\(\\*SubscriptBox[\\(p\\), \\(2, 1\\)]\\)/Pi\"\>", 
     RowBox[{"-", "1.0646926185063421`"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(p\\), \\(2, 2\\)]\\)/2Pi\"\>", 
     RowBox[{"-", "1.0062523636961487`"}]},
    {"\<\"\\!\\(\\*SubscriptBox[\\(p\\), \\(2, 3\\)]\\)/3Pi\"\>", 
     RowBox[{"-", "0.9774993837915342`"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.804866889840887*^9, 3.80486693813233*^9, 
  3.8048673043257113`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2", "[", 
       RowBox[{"e", ",", "0"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpPlus2", "[", 
        RowBox[{"e", ",", "1"}], "]"}], "/", "Pi"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpPlus2", "[", 
        RowBox[{"e", ",", "2"}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "Pi"}], ")"}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpPlus2", "[", 
        RowBox[{"e", ",", "3"}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"3", "*", "Pi"}], ")"}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpPlus2", "[", 
        RowBox[{"e", ",", "4"}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"4", "*", "Pi"}], ")"}]}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"NpPlus2", "[", 
        RowBox[{"e", ",", "10"}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"10", "*", "Pi"}], ")"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 0\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 1\)]\)/\[CapitalPi]\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 2\)]\)/2\[CapitalPi]\>\"", 
      ",", "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 3\)]\)/3\[CapitalPi]\>\"",
       ",", "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), \
4\)]\)/4\[CapitalPi]\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 10\)]\)/10\[CapitalPi]\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<This s*Pi Thing, Though\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.80494846102381*^9, 3.804948508392808*^9}, {
  3.804949654580203*^9, 3.8049497232350903`*^9}, {3.8050280570662527`*^9, 
  3.80502808734648*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.000024185766477748702`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(-2.49366499671666`*^-16\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.5939906358846744`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.804948524587081*^9, {3.804949711406044*^9, 3.804949730801689*^9}, 
   3.805028090397651*^9, 3.805036234288172*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.804948524587081*^9, {3.804949711406044*^9, 3.804949730801689*^9}, 
   3.805028090397651*^9, 3.8050362343580875`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({4.503669942224799`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.734723475976807`*^-17\\)\[NoBreak] and \
\[NoBreak]\\!\\(3.820404467573641`*^-16\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.804948524587081*^9, {3.804949711406044*^9, 3.804949730801689*^9}, 
   3.805028090397651*^9, 3.8050362344729986`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318519448951320385675257047976413268819406710008479421958327293`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.7695567233744214`*^-13 + \\(\\(4.163336342344337`*^-17\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.367876784470429`*^-12\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.804948524587081*^9, {3.804949711406044*^9, 3.804949730801689*^9}, 
   3.805028090397651*^9, 3.805036234651759*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.804948524587081*^9, {3.804949711406044*^9, 3.804949730801689*^9}, 
   3.805028090397651*^9, 3.805036234764633*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.804948524587081*^9, {3.804949711406044*^9, 3.804949730801689*^9}, 
   3.805028090397651*^9, 3.8050362350733557`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.804948524587081*^9, {3.804949711406044*^9, 3.804949730801689*^9}, 
   3.805028090397651*^9, 3.8050362351663027`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.804948524587081*^9, {3.804949711406044*^9, 3.804949730801689*^9}, 
   3.805028090397651*^9, 3.8050362352252693`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
J6nlcA==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
MFtn1IjD3fGupkfIvsLb1Z4345Dovoj0AlkzMeD6QisOZXdoaVnI/arFva6d
OJSUaDvkIr8qHd5TR8NBxJI5lIfsarrplRoLh+ypBqf/vIbsIRJNoO/b50N+
DjLFLcOdN4jW+yyL8hI5ScBsMOfjsCf+ODsV2TpScf3rSRwMQstIicjiy49F
L53DIe9t/K1b/633RRLh9QcH569f1UP/W69O276vogz44mye7oW8+6NElrY4
A+aNaNPHkWetDi6Kl2ZAsdNpDTPkyp4YT4EsA/XF2h06yP4+9SQbRQZoLbSo
yiMPxhndlFVnwPZp79ts9PtkKV3uC9rMAEvZWtF65FOFFeYUHQZoeug7ZSBT
v2qLPd3JAPmOFc8ckZOcvM7OmzCA7KsXvQ3ZeiT7s5MZAxiGU+ZLkT8vU7mt
fIQB7+Y7Tpag9+tGqtNApD0D/HKKCiORTTSfHOg9geYbyKRZIVdZrFya5cmA
AaNTHwn0fmffEb27OYwBhppxtdNof8jw7kToRDLA1dDx4DvkKJAO+jeGAWeV
yyfD/ts/MwpuxvEM2Lgkr2AW7b/lnjrbbV8x4CKZmdaD9udVrELz2Gv0fdjb
aCYhD6/ZqepUyAAT2m2KGTKpfZ/EmSoGlK3n3M9C+zsUTvReaWHAG4W7wVb/
ovchlUW51saAOSW/hQnUL+xnPL7d6GKAdO6xrEfIOkW+b+NYDCjf/9WahvoL
sSbmfsYEmu/LW1nzrTywmine2byGCWbj5yxI2qj/2OrrtqowgaoRVWWJrFH0
Tr1DnQkdSlp72lE/FPEkLWfqMEErobeYgvrl23Z6n2AvE1yuBwy1aPBArWhR
0uqLTNg7erPZEfXf+KX3biv5M2FzTP2ihvWo/3ksv6YWzIQPWSYum5Epa9ac
14pkAsu0yH0C9e/YO7omkMwEXu7WWh/U76c9Tg6ffc+E3e+p6eJreBAi+0uW
VseEgsT9e83ReTHT8MzY4jMTuJrZ+REKyGo9D7TamSA92vVtGJ0vs2w3g/F+
JswkRdjnovNo3ulMTKhMD0Q9jHKpluRBmIRY8fDqHtg64m5PluDBr5ocqtPa
Hkj70LW8fxmqV3FQ00SjB8bdVnUtE+fBAvVCu4hJDwzd+pqwE51/Qvb+ynFe
PUA6xm7QWkB5QHTlwQXfHsjVPTOn8psA4YqyAN+gHvh0at/kyl8EiMhMkmwi
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
gMwpHWph8THvsv/bLe202ZDqb/gfWbYb/Q==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwl1nk4Fl8bB3A7UbZWa3YiaygqN5GS7BLKVoQsKUshopBS9pBkXwpFIUsy
RKWFENmZmeexCyFr8p7f9f71XJ/rnJln5sx9vvcRvnDF1ImOhobGhZaG5r/f
U07j7fUTZzQS5eS4Np/3HRl7aXFhmEcZBlRPXB3pTNXYxdYVXcajA0TuP9Mr
nTUa1XXB7tclDCHRqUDnu1yrhpzajrynPOZQ9OWDlUJnnwbN9omEzb1WIP10
ga7mD1WjffrdbQcJW2BgFOdKkZvRMLn4ucohyQGs9TsvWd5f1FBvO1Aaz+MI
YiNRB2g71zREj6YXNKZdgnUx/lciazSwtZAlY3GvKwiW6RJxfxhgcZd3kniO
G8juVAsxOL8FBu8MPrSQ8ISNVZoOczl2uLiS877R3Au6Ky+E/ajggm45K43z
SVfhu51jtvD9HVD/pFHlIY8PnNxkXSv8wQvKHTdeiZ/zhRXnA5IjJwXhOYuc
bF2aH6wq0e4lVoUg3jdFbHavP9irJlso/hEDpmKDzLsOAaCyWWvJzScJASQd
v1BOIGSO5wY2ntsHF408tptIBENbuU96oqwc9ISLxEw434JC6+PjVnYKIDHk
xthgHgKnioYbjSsUIXWHcKhVUijovLI4731PGe6ERt24zxMGhsekToZ3qEMd
/6U3FjVhUOosd/hkxBFYqdRcFDkXDh3yX129TmiA+8yfK2/TIiDFYiJveUUT
zM/ZO0/vvQey/3iVvi/oQPSSel5V/T24vWx1TIteF5rjdlLCHO4DXmWf58hz
Ao42f7EVyIkCy9dbntdZ6YGEioqFoUQ0BCnyGdRIG4J9G0ci76doGF59m/Xq
ihE8cZtsH3WOgcUBk3PFNsbA0v49HzOPhYhwlyzrMhO4yRwuYpkUB0PvvJrb
IszB0WeW5x5PIvCe0bdlabWGA/TxAa+9EkFieeOYTtU5oItX7u//lAgNarKV
bvnnIaPEP03O7xE4pFyIvxltC32T9Hs7O5JAWm3gYpuuAxg57BHb++AxbHYf
FaHkOIHgXE3YScpjWA81+2hy6BJMB9uMXFVPBZMgw+jy1ktwPy07v2k8FcjI
qO0WtC7Q1L1/3+XjafA77UMmY/BlUDfUkqv4lw6VT4R+r3VeAZZBSvTQmQz4
F72UYKiD6sgtYpb5RQaoj2jU7cnwgpomJ8sXspkgJbCxnHz2KliShTw0A5nA
RMjQanZeg3gBlbS8Q9lwuSKlXfyvL7Ak6mXN/c6FZr3y9GrGIFg/RKxn8ebB
7BYJ5yC/IJgZvGFhpp0HhfbVXHvGg+CH5DO2N4l5UB6th7W3BEP6Wya/wIP5
8JuZfV+hSQgoUxpPMQUVwKVwqu6xw7fBXkljkY+lEG4VHWgKso0As+4uwxaF
QtAY1Y9Sy40A3Zsez4OtCuGqsrOL3WQEyHxMsyUKC0Ha20954vpdWLJab843
KAJ18+y6heRIeBBa9VQxoRj6Qu+W907dh8o2pRMnBEvAfNTiQDQZA9ET0yf3
65bA1ItndhM8sXCJruAUl2cJOB3T7353LBZ2KfMZ9r8rgfHV25obibHw9mto
YaVcKXAyrB3uOhwHfPKXX+m3loI784MPlPh46Pujjnlvew3dd0XJk5cegeWd
gb7GqHLIjPJnjsh8Apy4xH7nrHIYcDyTsNr7BD4fuRrEWlkOkhF7RvO2p4H6
EqOQCVkOR9RMy57dTQM+V3mnoUMVMOu7teTMtacwZHh7dmWkAgZloni1TTPA
kVeKQU6zEvo8v/ttTc+CK6+8ZVMWq0FSZbMyoC8PZo4QPz6z1EDPL6+Rt+t5
4N5sGLDOXwN9XoUeOwTywWV43yfb4zXwp+TldTb7fLDfhtuLJ9VARlBRO+dY
Phi7nk58ffAt6FHDH3qvFoCCsPj6t4Ba+NPh9P2KfCHMx/5spqXFQPx8cdzU
0EtobviIfT/yHvKL9asndlWAq7/eNqvpJlhpM+zLtXoLDVuUNos9PoFCUR9H
A14P+TlN/3jFvwCpuS5hkd4EmrveZZu9/AYrAiGMbKbNIPtpoOqj9Hcwm9NW
HOP9Bp2aZjPPZ9qgyz91lVumDdxZ3Tq6FDogtmF4xFy2A772nH3HHv0Dln+N
uWnbdIKZriVBpXZCv0uxFUPwT1DNjDqbKfYTsrdx2g579gD+L6HT5VY3SK/X
sfL59cGI3vecXY090BBTv+SiNQClj4f924X7YPX949lWjiHIi6S/ty+gH9Q8
TJy8C4fhz0XryUtvB2BCLMCKJxgHv+3r23vqB6CJ49t0fQgOS++fHNX7OACx
h5cLL91BFh6MlWkfgJNnFHOLI3FYGbY7ODc6AM7H8r1EEnBYO+cU5s89CB9f
luWVF+BAY+4l+MB1EHyY3kt7fMchhJ7r5IbnIKg6HDjb044Dbdmrq54+g0Bu
eRSn1YkDHfdCk/GtQVgNTtnP3osDfZuv285Hg7B4tIKMIXFgOh1YlV4/CFT6
+EjlPziw6USYvto9BB0BoTF/9xBwBLvC9ZF/CNILLTfp+AjwVLdq6xMegrC+
8FxmAQI6FPYbMuwfAscFjgdswgSkCnTondUcguUZmdoNKQKklgW0NlyGQG3M
iD7qEAE6hRXyejVDwHpP6rSOBQF+4hkzNtgQlOdOs3FaEvAsM/LFtaYhMNdp
nOy1IoAt+ZxMWusQhJdN0rnYoP+7Qys5Sw6BtuG/ex6OBNjbGAg+YhsGnqUC
a4FrBNzkHNlKnB8G1ZGUU2wPCJDue6054DAMhj5PW+MeEtCbE+LTfWkYuFWL
r+yKIUD1IP9Ai9cwvI9zYeKNJ2DOxqyoJmwYbn0d82FNIeBiUYNeYvEw8OOj
X2JyCDilmx5x4u8w1IRxsElVE/CXWdUmiwaHdeMXG141BHRO8y8L0uNgc6Nw
tfItAbffTErzsuCgLGLFpllHwJBeRDwnNw4ne1+EHWokIMXrncOGOA65CWsn
v3wjYGudDE23AQ73Qz7Pug8R8Ou0UPl9Yxws6XafejBMQGv/DhcNM/QdOQI0
nuMExKxufM+zxGGO8f58P0kAt0pbhs9FHAyzhbzFxgjYU+wD3P44pLwJUtSa
JWBV3XXhQyAO7oaNnWpzBPR9tinwR3U6We3ApPCbgCdjuhwEqkt33kaunQsE
CIryDJdEo7o8O1jesESAWOq7YINcHLYNBkblbhDAuO+1Ei2qyzCnyXe+/wgY
rcwfLX+Ow25RNW+dTQIKumIM+UtwaI/LvthHQ4I01wXBqWocSnHKiXF6Etgy
LTrSa3HY3xIblMdAwrScfoQphsPt6kAFe0YSXpxWnqluwuFOGbC1MpGgEMlU
F4nq/nT235CoLSRw7V6/eqQDB9kdOx4qs5IwnzcrPofqXoy+l7Mfuayx5+HZ
PhwEHZ/dFNpKgupmoY3ECA4bGns6HrCTcNTPaKNxDb1/PW3/JDcJS5fHA/U2
cFiULU64sJ2EUrvQtdZNHHpO6bL3IIvolS33MhBw6zXPidodJLDw756fZScg
SWut0nUXCe85S718uQhgeTXo9R05kFFvdm07AfPVFmNKu0mYmQmYZuQh4Msb
nHUBubNhaJRPlICRyGMCljwkRL+57pQlToCDM1ZWhHyiiJMqgfaRcm84/QZy
TeIxQlGWAOxZy7cUXhJ87vXbVcqjunihcZyCLBvsM3REiYBdj3p8ZPhIyHTO
7z9xkICVby7L5cjW58G6RQ3VSbSx3hLydpOeHtMjBFzj1jFW4SchQp31p40W
Aa7vDgQWI2vK55hTtAmg7BVNpyKvih754aJLQPU7Bh9eARLct3m2eesTkPv0
ruotZAk6ZqNVAwL8JwREXiIPL2W0BBsTcCAstq4POWXq0GkGMwIS71izMQqS
YIq3f7l3hgDbg8vMsshbuy7rcaAcyNlHlpkif/hM35xoTcANwWR2P+RDZSof
MuwIlA9GrRXI8wWt2uIXCAgW1lfqQC5Kc35fiHIh34pOexrZMY5GS8GZgBNd
vzfp95IgGPEYq3AlwLIyyYUHuSdASeOwOwHZNp439yPHXflaW+9JQLn9kvpR
5FOOjod1rxIwkVCco4/MYLVR/dWbgARGjjdnkesMkg6Z+KF9tvnkqgPy9WPy
lT9vEDDM0NHlgqxwsFnlfCBaz5/ypAfypIxDORFEwF1P5SQv5FyhNSXnEAKO
0dv9/s82OxNeTd9G+5RRfsETeRfrfoVr4SjXRMWeXEZu+9f0cvkuAXt16sYv
It9fsJENuk/A+6igfmtk7fGlIjqUc7gVec0I+e9AjHQkyrkCPY+XWshv2qWe
b0M5x62U8VAR2etjg2RCIspF8VWOvcj73lrn70kmoMX7rzIrMlmyIJb+mACf
fOm/82g903If5IimoZwIY3TqRbbTPnBkOJ2A6Hv312uQRcjeztQsAh7ezm5+
jDwSEuJhkUtAW/GLr77Iz/ZKMnEXEFCVspXBCNmtriW95TkBO6SFroojy9n4
HLxXTABHih73KqqX8tQGF5rX6PkjHWeSka+rudDWlqP64+OVuois3sOeer2S
gOJijwQZ5Pqd57/O1BJQeCfgbxmq1zvldI6FGAFv/ddWvJF1zZ7/dXpPwGBL
npgi8rfYJdnBTwTIxHAw56D9ECP/9GPKFwK4jJJrzyKbtmrbmbcQEMk9mL4F
uYctLvZrBwHT04fGHNF+o0bILFQPoj4TYu+3uoeEAvGOKF+Uy7NpDKHJyJeb
bogpUggo+v2kTAl5jvbjmWfjBNQrHo+2R/t/46Z9VRLK2QSzdZbUnej5+ZhN
TFHOcguXHhNGDqt5MbFtFe3/t9kZeShvWFfWeMNRzp6i/1Wfh/Jol/ejIG+U
g0+j+mLvcJHQy3VklzzKuYqtmp0LnOh7lZIvJ1HOZYRoqzogi8zI4w7oPi4f
+swOcKD1dv1yzPi/url+bqQcXfeb+Wo/mwgJ5mTdNnbk8vzdPp/ESCiWVDV2
ZEPrTXXM05Am4Ua5sDALylddu01mWRVU54dPUfYzk2B7Rrlliz7Kvcxf7pMo
7+35DDKrDEigGzPD9yA7EE7ezsYkMF+SDPmvPzh6JPN8OENCkwGbdgLqJ67h
a04h9iRYFT/8xL6G6q6i/t+SLwm+Ah+sg+bReSGwtz3vBqrrYhfLYNSvrmvN
55oHolxV9gm4ifpZQIuo/usQtG7GLfu8ZlBOj0Qke0Sh59hBSKpMEnB/p4EC
NROtwz9PFRWCgAf9TvQJOSTgY17Agr7bw6zgn1r5JDzP2nepB/XfWNnSmxlF
JIx3DzF7DRDw6Pj2z9ZvUF/S0o252U1Apm+vQ/tXlINlcbqsqE4qupwS6pZI
0Mpmkf1Tga6nFVWEVfS+z9zvhaO6vSyLt2LrJORc2W+xvQz113Br1gYaCmjI
ngfJUgIilI1CG1kpwKXZpatQSIBFwqErzYIUSP3UOvjxKQHLxmz6HboUMGtJ
+kl/B52HbjaPm+pRgHbQJlkrFO2DZ+ERP/QpECAy9u7mLXQ+oqF532mM5r/+
pz6Fcqi5ZPFQtzUFzruHTz/zQecP9iGJAU8KONJPj+U7EaD2rZRuNIkCjIHj
4kXHCeDPDqxJe0yBa45VLc6oD9Dc0L1mlkYBxaAGa2HUJ5pFB4j6LAoc/cop
GoX6iEUgc8OTYgo8Sim7oHYA9RVp21sm7ylwZW+DEY0Qer5Itr+1vyigKWx5
W2UZh1jbn2XecxR4LTAoEb2Ig7dylpv0AgXuagzlUX7joI6r9ievoPcJ3KUU
Po3D54MXaq7RU6FnsS4gm8BhdLTqhhQPFUTc5O4d/4qD0PFLfxJ0qBDa6xwr
k4bDQEjXdf4TVGDifLtk+hidg2p11nL1qKDvyJd8PQkHLmXRzQpDKrS0SoZX
xaLzsijO0mNJhU/fgzl5wnEYobHm5/egwtav8RXmHjgU1hpo5z6igup9ps7y
wzioKKvElY9SwSaS1Zo/cxgUkncZKkxQ4WTs12Wpx8MgvbbMWjxFBSHrLTIK
8cMgVF8TljNHBWO3SWM5dM5kPa15I36NCs9cp+InnIcBv6hv58U+AlnE8ptz
csNwP8FBdr/qCPwZUuzcXzkEw/MPP+eEj0DP57oOv6pBmD5gEs6jNAqWT1hv
e+j0g8SU7CTtj1HYsXr5hN3THmgS8+3wCh2DrWcGF3gtuyCms+uiqdg4KGQb
/Tg83Q6zZvVxdE3jMLf3U7qX7zd4fWanttrVCSh9I7K1r6wRclruPCW5JyEz
Jzkk7nUFLH86H8j9fhJoio8ajq96AR6H/eH0nIL6Swf4M7LKsaX2wzy32ach
6+N19znOD5hXoki9f+00ZOo6JV5704btbhHhpNr+gtKlZgGmnz8xs67iv/z/
fkGWR/2i2OFBbN4uy32gcAY4g0utlR1J7E8yo4rDixkIiXrZK+pNYivfXTdG
SmYg80YqH99tEtsEpejZcuQZBV3hTBLbKtRYQofNgBCdHzV6gMTEceq81I8Z
sD9WGM50loJZ2kv5+66j+d+kTuiYUbFzKQ+01jZmgIbW6JTTRSpm2za35RbN
LDSES+rFe1MxJ83q1EjGWRBictvkTKRi14RO1T7hmIUsPyeGgi4q9gB322wQ
nYX69glxl3MjGGZfEs5+ehZodvbtOeI9itV8d9cfMpyF0AWXu4F3R7E3GtJc
L03Q/CCOkJ9PRrFi/rw0g7Po/3bv3CSaRrHUntSyBxdmQatbKtVpzxjmaxxB
sPqj+wmVuy5+GMO8MO2CvsBZ0Jw5I201MIa5y9F6FAaj+R7zcpPzY9iFrTdX
9MLQ/HfhuslC45hx81WOezHISTorRsHjmIymzVHmfOTd5T+Vj09gEiW89N3P
0P1+t62ft5vARAR7mvOL0HjQzkP9/hPYnr+m5rqvZiFk7lz1dMkExlR10i28
FjkpUoZWeBKjk2RSPIOh+aZ7bvpqTGIbjxqXxN4j64eke5+fxBa9NW43fZoF
WvET5qqpkxghr/yY/gcaj4+S0hWcwgbSf9v+6EKWK9ripzWF9WwrEcvpQS4+
rfjaaQprndpXemwIXU+nG9T6agr7Yj3my02gcV3amH+9U9iHz7mHSQoan3q3
MUw/jdUW7P0UOoHGK6dFB2ymsapdgw9MppHrrqk2RU9jZeGppsKzaD63pyVn
4zT2cvHsnt+/kVUrS5+tT2OFF3cO1S+i+TMdW+bVfmF5HR05scto3FKt93jI
LyxTK9bVfg2N68jfUP/xC0srNZBX2EBmeaFRrDGDlb76v+2eOuhMCP2F/wEl
ckTE
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"This s*Pi Thing, Though\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {-1.0571574273799342`, 1.7580349608559442`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), 0\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
1\\)]\\)/\[CapitalPi]\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
2\\)]\\)/2\[CapitalPi]\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
3\\)]\\)/3\[CapitalPi]\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
4\\)]\\)/4\[CapitalPi]\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
10\\)]\\)/10\[CapitalPi]\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8050367674264603`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"e", "=", "1"}], "}"}], ",", 
   RowBox[{"NpPlus2", "[", 
    RowBox[{"e", ",", "2"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.804511601923304*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318530717957354878316699074673427449610937361525670786805558565`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(9.080334667093475`*^46 - \\(\\(40.912255050643104`\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(6.721426510726194`*^45\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804511602989315*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804511603076232*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318530717957354878316699074673427449610937361525670786805558565`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(4.304855103136426`*^109 - \\(\\(3.70411269175969`*^62\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(8.184449145379744`*^108\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045116031441708`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumri"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \
\[NoBreak]\\!\\(\\(\[ExponentialE]\\^\\(2\\\\ \[ImaginaryI]\\\\ \\(\\((u - \
\\(\\(Sin[u]\\)\\))\\)\\)\\)\\\\ \\(\\(Cos[\\(\\(2\\\\ \
u\\)\\)]\\)\\)\\)\\/\\((1 - \\(\\(Cos[u]\\)\\))\\)\\^4\\)\[NoBreak] has \
evaluated to Overflow, Indeterminate, or Infinity for all sampling points in \
the region with boundaries \[NoBreak]\\!\\({\\({0.`, \
1.3518575992650391`*^-14}\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NIntegrate\\\", ButtonNote -> \
\\\"NIntegrate::inumri\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804511603268057*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045116033649673`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318530717957354878316699074673427449610937361525670786805558565`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\(\\(-2.4615141850671613`*^94\\)\\) + \
\\(\\(2.421422577891593`*^47\\\\ \[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(3.404728094520719`*^93\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045116034388967`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045116034738655`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804511603549799*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045116036207266`*^9}],

Cell[BoxData[
 RowBox[{"9.080334667093475`*^46", "-", 
  RowBox[{"40.912255050643104`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.8045116036247225`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"e", "=", "1"}], "}"}], ",", 
   RowBox[{"NpPlus2NP", "[", 
    RowBox[{"e", ",", "2"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.8045115797159176`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318530717957354878316699074673427449610937361525670786805558565`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(9.080334667093475`*^46 - \\(\\(40.912255050643104`\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(6.721426510726194`*^45\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045115801065555`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804511580191474*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318530717957354878316699074673427449610937361525670786805558565`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(4.304855103136426`*^109 - \\(\\(3.70411269175969`*^62\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(8.184449145379744`*^108\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804511580267404*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumri"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \
\[NoBreak]\\!\\(\\(\[ExponentialE]\\^\\(2\\\\ \[ImaginaryI]\\\\ \\(\\((u - \
\\(\\(Sin[u]\\)\\))\\)\\)\\)\\\\ \\(\\(Cos[\\(\\(2\\\\ \
u\\)\\)]\\)\\)\\)\\/\\((1 - \\(\\(Cos[u]\\)\\))\\)\\^4\\)\[NoBreak] has \
evaluated to Overflow, Indeterminate, or Infinity for all sampling points in \
the region with boundaries \[NoBreak]\\!\\({\\({0.`, \
1.3518575992650391`*^-14}\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NIntegrate\\\", ButtonNote -> \
\\\"NIntegrate::inumri\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045115803992815`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045115805071836`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318530717957354878316699074673427449610937361525670786805558565`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\(\\(-2.4615141850671613`*^94\\)\\) + \
\\(\\(2.421422577891593`*^47\\\\ \[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(3.404728094520719`*^93\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045115805821133`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804511580619079*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045115806910114`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045115807319727`*^9}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.8045115807359686`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2NP", "[", 
       RowBox[{"e", ",", "0"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2NP", "[", 
       RowBox[{"e", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2NP", "[", 
       RowBox[{"e", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2NP", "[", 
       RowBox[{"e", ",", "3"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2NP", "[", 
       RowBox[{"e", ",", "4"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2NP", "[", 
       RowBox[{"e", ",", "10"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), \
0\)]\)(1-\!\(\*SuperscriptBox[\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \
\(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 1\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 2\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 3\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 4\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), \
10\)]\)(1-\!\(\*SuperscriptBox[\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \
\(3/2\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Divergence Removed?\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8044481983378005`*^9, 3.804448248120593*^9}, {
  3.804509700697852*^9, 3.8045097963639774`*^9}, {3.804509844945094*^9, 
  3.804509862729232*^9}, {3.8045099076948223`*^9, 3.804509915787315*^9}, {
  3.804510009776622*^9, 3.804510026222278*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.000024185766477748702`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(-2.49366499671666`*^-16\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.5939906358846744`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804448256142144*^9, 3.804510547533259*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804448256142144*^9, 3.804510547623185*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], ":", 
  " ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({4.503669942224799`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.734723475976807`*^-17\\)\[NoBreak] and \
\[NoBreak]\\!\\(3.820404467573641`*^-16\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804448256142144*^9, 3.8045105477080984`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], ":", 
  " ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318519448951320385675257047976413268819406710008479421958327293`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.7695567233744214`*^-13 + \\(\\(4.163336342344337`*^-17\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.367876784470429`*^-12\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804448256142144*^9, 3.8045105480278015`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804448256142144*^9, 3.8045105481127224`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804448256142144*^9, 3.8045105486452265`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804448256142144*^9, 3.8045105488290577`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804448256142144*^9, 3.804510548921973*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
kiumFxfZEOP70yhTmv/4/wAjpZPA
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
vLxP7TKVxJjFs4YmJxlQ5R2xuqc0w+B/I+PIaw==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
BvIaN5ltPt+hjOb48N3vb6CRrOoc+n4SDrYVcUwmjIFh2gYv2V8jIHXMaf7h
0XFY4s9DJ3R7QE1VLbZ0chyqhJddZiZaYHj2fmtmyASMyQ6rJNwoAKaKcQh1
3yRgrRMiA8nFqDV7XD5VdRIU04Qxdv4SlE31aZHaPwlXEl7cHvUvQXb/nvIp
aE7Ce68yyc9nX6PuD8xYdZ1JOKNH3+UoXoYq7cOemlhPgvJQrMelqAoU/gCV
3w+ahDlN88qs/QjJTysR7N2TMJCMM3oG3yN+3o6sKtok/OilpT8SbEK/ZK/Z
e/VNwpPx8Is7jjahWtuSPvrXSViUbaD05Dch6y715g76JFB0iqvVvJtR9Ft4
nro6CcdU9pZt4m5F8/eMbQ/umIJD/DnGBznb0ODzWeqvXVOgPjAvWLa3DdXX
PaS9VJ6CzyO0h2vs2lD0Mk1fSm0KfnV9GtxR3YYUrlpr8GBTUFfJdcLHox2d
MXeg0MymQIInW0Cu9xNqlPXquhY4Bc+XDYRsaz+juzmVln/vTkFXpKtkcvdn
9N8OtuF7oVPw8pB+YcPkZ1SnHDn9NHIKONOnzIb5O9G7Qxlc7Y+m4AiXa9kB
y05UbtSurpg/BX9kF297TneifH+5J6NdU0CVfvJ5LVc3cv7nIu1GmwKuIGie
F+5GCkFFOQu9UyBIuavRIdeNsu9plAp8nQJ2HbFUvePdKDPOuF1ragoazpfq
OIR3o5TcW/+SlqfAcfttQ/F1X9CDLzSH07J00Bkl3hesfEFRt+/LdsrToWxw
TxY7Pw1FKBybMFSkw2Whorr/RGkoxL/UyWA3HazPSZY+UKehm7IPnXUP0EHI
tzfS9AoNXbxudFVbnw4xr7p8I3AaAuGPfjuu02FIvfhlXlYP0nwXpJHnTYdH
2hm674t70KFLh/5u96UDq3ezekdND1Krzrsld5sOGr9/8BbQetDOC2F3pMLo
8Fd7MvsxVy/aUnosVCSFDicWfeLEzvUilkltLEcjHVayNE99X9OHfueEuJY3
0cFp5NJ8/sY+tLqsd9y1lbzP6/7bRLwP8T+n/aV9ogOt+BH/pb19SGGOuJjX
T4fNn+rKE637kF38Zm0jFh128ghFb83rQxfpOIV7lg6XbATSY0v60BXN9F9v
5+hwvVVc4WdVH/If35G3bYkO61Ykn3l86kOJqpjwHy4G6IhNXA+Y7UOfv7gQ
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
ToMOs0SZtdj/ACNnVR4=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
e59UrlniVA4uiasND/DZ8HOhlLdatAQ66T6cNNkJ0D08mCymkwos1a1NtvIT
YBz54NqR8ofQHzabsURxArjrBuQa9JOBpxxuf27DBMymMPeyLRJgaWBSnenW
CRCXDZd3XHwFjFbXJXPNJmCaRrplaHsDvbJfbaJ3bgIid6pX07Seo3srr7JR
wAT0d+qjOIM8dP4D+7Z50ATYncq5ZWeaj7R2V3cdCsUOKO1beagAFSu7nTkT
NQG1s2WXHmoXo8LvxSlZKRMwWse0n9csRfkJVl9XNExAi+2larsPVSh2X3lS
YuMEZHVbCfw2rEY+IooGa5onoK8u3U2ptBqphXyPUm2bAK20KEvhtBr03OXR
GhPmBGxzLpkS8kYoZwvb/CJnAl5vnHThX6hHWe3X0obJHNBW8th5tLkRxWn9
ccpYzYFUIxnN0oVGFJR0Xs5JmgNHgh1EmnSb0F7nk6kMeQ58WmJlLprVhKZ4
hiktqhyw6k4/onbpPdopNpdYaMiB7blp2TmyLajd0j/ukg8HwinF8teUW1F5
4fi+HX4cWIuQTJFtK8oknxCdOcuBuIevXRPCW9H5HutYv0AOiM6WdF7sbUXS
Pho3XcI50HF/ppt6uw25xoxdM0/mgGnByPeSkXb0s9kplNzAgf46+85YzU6k
cMg8sKGRA7L7Zt0KoROZ9285e76ZAwEie70KD3ai5BkhN2obB7xW8ZtMAjuR
zro8y3ssDuxmbZx8V9mJzl+alSFPcsDAS2hQFijokciAZAOfA4EjH36K2FBQ
fXzLivPTHNDhWN9vP05BErmpgtSfHKiJeuA0fZmCimhGEwlCXOgWWep3r5KC
eJvuVJCkuSBlJeW+WZOKVlUEv6qX5cKQZNrLYX0qMjA5WXBOnguUva/SA/ZS
UewRnUyKEhc661iRGm5UpBbdcyNBkwu11pI535Op6NSAigPJhAsu+y+qs39S
0R0fiYP1Zlx4bP7B3WsRDZXN/rY8t5cLQnenQpvEaUhYrN2QYs2F1m1hB6Q2
0FDWzgCVBEcuvK0SF5E8QEODCWhW4gwXjmzjnA7LwI60rrznzwVUF+Cj+ZyG
hgJ6r6wK4EJxbLBkXTENDdv/XCJ9kQs/3ocGxtbT0BeZLbJrI7lwsTLi6+sh
GhpZXtOfeZ0Lq55de3t+AvuPZZbSDS6MhCfaSH7D/nxqk0ocFwiGyezvfzQ0
9iTdUDOZC19i8/Od5eho7N6mRUUPuRCVmHRCYz32tcrmralcyH7bsaRXjY7G
PZgHdDK5YBzuaz64nY7YauJuBvlcmDXdtuKaDbbs4401BVw47C4z6WJPRxOi
6jzDIi6E7N/PUTxGR5xJs0DjUi58rG2y3XOKjrgll29Y1OL76dqXNofSEe+p
qFVrHReO5Z4elg/Hvp8iYf2OCwkDzUn869iBZSkHWrhQMP5nVu8OHU3pTb5w
oHJB8rTJ3tMZ2Oqh/t10LuRdlSnzy8Jes0z3GIsLsn8p6ba5dMSfV6493seF
MA81qcZCOvpa79TpMYbnNz7fZ1aN/YqTOM7mwnVVFscJ0dG3rItHvLk4Xsft
XxxuoKPpqMRh369cMFBzcJluxg5Syp2a5oIIsdIt8SO2Z/Fp/1kuyB1h6Mi0
09F3i7aZgDkucCbyXVspdDSjf/Tt7F8umNcHtP+iYWuwLwf/44JJcI3yMia2
XJDxb0EeDBWJ+/9lYa8QXhIqzIP/hhfKqd3YCwmtfxfzoPXSdsG4Xjqa5a+N
v7KMB9lDZw6rfqajH4Mv7QTEeGARdL42tx+bYiATKc4DZSRntHyQjgT8WD/1
SDzwac9f6jNER8uXBjC/SfLAdtEjTu4wHa3KEi/Lk+LBdbVt3959oSMFw/z7
J2V4sFyQpVI7Qkeq3WbnZeR4cNVoISl5lI60LwwdoCjw4HejnoX1GB3tWnl5
S8w6HqTEae8bxjbLlxY3UuaBVWdejv04He03K+X9UuHBGe2QU7nYjoM2rcVq
PLj19l4SC9s1lJvntYkHzjwBGMP2lbpxU3ELD/K+jvnRsINKlDy7tHgQ+Sxc
MwM73KrWLF6HB7ufKMVYYMeOH1HeuwOP/6R+HBX/PzFyVkhAnwe/ju831sdO
l08YerOLBzTZhfJwPP7nFZvqzgIPoncK/cjG83t1qCV9ozEPPmRsEs3H86+e
crs8YIp9xUvoNo7P+5h/xx7s4YH01crx/Th+ncqp+jaWOH4fiWb+AB31oO0y
S6x5kKy27eVZHP+Ro9SftTY8UFj9JftTH87HWT9mkC0PbvdV1Yjh9fsVv6xs
sz3+f7mxoDpeX7Fm4nz6UR4o3fu2W4hBR1KufQcOO/PAzD/nQA2VjhTng7eI
u/Cg0XR9g0MnHW3bVsS77MED71PFs+qtOP6fLFt1vXhQ9FmR6tZCR+beY3mT
PjxIo8kYhzXR0dEMeU9nf5w/f26RrXB+u+u/NVsdwINMwV13FuH8P8OwU24P
5IGe5zDtUQUdRYrGDe0K5QFL8cWMVwkdxeVsrJu5zIN/J/u5GS/pKNnoXXpB
OA/sN6uPlufRUX7w3DG5aB4Mn3D+L+oJHVG/eDH/xPNAqzCG9OwuHfVdES57
fZ8Hi4+tKe6LxfVFJvP+6WQetNNM3s9G0dGcDetAbyoPxvR0kj/gerCu2qy1
MocHKneHL/z2oCP/RKW6kGq8nq06Ejd16Mg2ydV7EcLrUcOvMN5MR7rJT8m3
63mg7xTbOLwRf++Bkkfmexy/aLYBTZaOolKVljd38sAhY4duMK5/j54q2a0a
5YHsm61fWe9oKCzLdT5tnAfa1iGX+FU0dOLZ05yNHB545L44MPmahpRzlH7r
83mg0eKn8DiLhorylNJP/uZBTo3jTHMEDTUWK7ELV0yCYK5o9Ck9GsopcU3Y
KTEJ852/d3G20FDMq6f6DeRJkHm/0thehYb2lyrdZvw3CS3CY5eGyDTU/UZJ
+++6SWg8mBtL51DRVK1SmMX2SdC+wUzRwf3nv3YliZHjk5BhvHjD8V4K2jlL
/+5ychIunDNL0OygIEf5G6zPbpMgrTYWOd6A+6cfN53lNQnOY89N1+RTkIJ4
qWbr+UnY4n3a73owBanYmO17FT0JG8xg1VlxCtKleEaHF07CnS1HvPRxPz/E
KPgrt4CfP22+/IZnG7qS6zvXITAFLn3JnmzjNvQ8ZNOvyEVTYJn5ft8GhTb0
V77gO3vpFDjNfaRp01tRzqkXnFLJKVD/s2FztmErmvuZ12WlNgXzJmmmGis+
oqeyuaVhdlMQIFh3feFeM5o+8cS3L38Kusz3b1l7uAHNPhDRPflyCtgt9xi/
NBvQrw7v+dGiKej5ZFTfLNKA/oH2HX7pFDCq/y3eU1aPxBTfFQmhKTg2lcFk
StajDYMj06q0KRB+/TtlewZCji6qIYF/piA8UtN8PKYSHXsYZzQ3PwU/pN4E
5+6sRMc7vy67KsCHa0IbH/mPv0UexNtHN0X4MD10y0jJ7C06r2hZnbqSD8rG
qoPrBStQ3ODpf/Xr+fDhTlbL67AyhFyKosSt+FD7L6E89VYxquzw3de/nw8G
a5xcBHWLUbmhOqnwIB+KHm6nHK4pQgVy2Y+tHfigdNxm5KVHIXrU9eh1nCsf
FITzXYpqXqDAA9FDy0P4cE8tPkc9Pgf5I5PcnlD8/LfopG1T2ch3s6Bf/hU+
GMqOLFO1zkauYmG/LK7zYeCkkuH0imfoQMu5lTF3+SDnJXLrW+oTpEE4716S
w4d/qb/KAr6kIJUi2UWs53yoMH/x50jTQ6Sk0NWS84IP68K8xuzzHyDpv7Z2
5iV8SBGYc5u/nIQWV+w9HVXNhx1OzDBXmwQktHGxlj3iw/ikibm5dTyaT3r3
Q7mBD29dpVi30++gmQDDyMZmPiwJnlNPrItFQ1t0UhbR8Py5zfFBwddQX/q3
4zQGHu8/mW8VKAJ1rShSzurC8znuUZ8rGY4+cdWKjfv5wLvR91mrIQR9PDoe
SB7ig0VNktn6iiDU9OGZwfAXPojvbotzbA1A1blrmyMm+KDynLWmNssXVUh9
jjvI44Pu/qa2sERP9Drqke06Ph8cFJdXBdNdUeGMg/S3b3yQX9lvXMlyQvlu
q/vrZvhwSavmlc9HO5RNpWbF/+SDdw6KMDbYhzKN4r1d5vjQdfhlb+vUbvS4
2HrL1nk+QLN+aInfBvRgrejsv398qMx95PtQaRnxP8UZN38=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
RIR74e9fFshKF1x8Kr4Z+x/kIoQH
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
Rf8HJ0dc1g==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Divergence Removed?\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {-0.9909172326134527, 6.283185307179577}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
0\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
1\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
2\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
3\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
4\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
10\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8044490178821125`*^9, 3.804511130512868*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2NP", "[", 
       RowBox[{"e", ",", "0"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2NP", "[", 
       RowBox[{"e", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2NP", "[", 
       RowBox[{"e", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2NP", "[", 
       RowBox[{"e", ",", "3"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2NP", "[", 
       RowBox[{"e", ",", "4"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2NP", "[", 
       RowBox[{"e", ",", "10"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), \
0\)]\)(1-\!\(\*SuperscriptBox[\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \
\(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 1\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 2\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 3\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), 4\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(+2\), \
10\)]\)(1-\!\(\*SuperscriptBox[\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \
\(3/2\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Divergence Removed? but this time better constants?\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8142760702536974`*^9, 3.8142760774346304`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.000024185766477748702`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(-2.49366499671666`*^-16\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.5939906358846744`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8142760795337253`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8142760795836782`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({4.503669942224799`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.734723475976807`*^-17\\)\[NoBreak] and \
\[NoBreak]\\!\\(3.820404467573641`*^-16\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.81427607962364*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318519448951320385675257047976413268819406710008479421958327293`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.7695567233744214`*^-13 + \\(\\(4.163336342344337`*^-17\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.367876784470429`*^-12\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.814276079810466*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8142760798484535`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.81427608017313*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8142760802760425`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8142760803279905`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
Exc80AdiGZl5ZzNcJQ3JeiXpjb4/8ze0HG6GWbu5jt4kbyQheinddrb54P34
83MW432U7zykfHejGfbv/Zok/LqPSv/8DnjMfXAlYj6r8e0+qO7w2X95d1vg
qXuDk0mNHxI2lioLvd8Cvv9cKxd0/VFkioTLrSctkLvXbZw254+spU9P8ye0
gIC1cfZAUADavyZQk9jYAvii8fztL4FIPp/NP4SzFYRc5TrytINQ+g7LuZtC
rcC7m/AQywhCh9WYf1480wqRGZ0lgztBaGSU0eqfeivEaE8TlD8GI2/yw+Dl
3gon6sajs7ieoWLT3X27tlbgiMuOMj4dirjebpcqD7SCw5mIWY5XoejJtz/O
PNOtkGUmd7t5KxQZBvyeGvvdCoz8TdL/voahtfc/qg142yDxg7MDj284Ev87
7QfebVCuJPnw99NIlJXRuH9c8CsskAotNz2JQa7BxrMg+RVmzvReiGmIQQoO
hAb7C18hd+hm6hWKWNQjSvH8k85XePPz5JXHT2PRdsFFZhWvr8DnGyik/ioO
adfWn7rd8hVks3yrrWvi0fpErX7Z7XY4u9OVM/LwDaqu1pee8GiHxkjPo2Sd
b1BI2gwrqV87OIKC8g3uFMRlTzKuGdUO2u5NtyRrU5D6N7gxVdEO5rqCzsyU
aShxu/rBIboOkG1tlP9i+RYpsaF0o08dUL7Wq35aMRNRxLK6qJV3wKl9zoy/
jpmoldlZ4Vx9B5yfWTvKnpiJ9I7yDBwf6gChCw+Shbcz0XW6wENzfzvAtuQ8
5H95h3zJ1G656nQCeVVFyDm1bFS62iEe/r0TUoGQsRaYi8RbJsqbRbshXPGe
S0hZPmJbvfMjUrYbLp7/tBwylI9IWHdPXlXqBj6ppqspG/lowJYj7KdJNxRF
yvCnSRegh/smluyB3VB5nrQC8gtQh2w3qeNwN6wz17L3vS9Esn3W7yhVemCX
YTfAMaEY5d7IqblzqQeCDN2iWsqK0Yntn6M92j3w7dC1k1ZDxYia158hyawH
XvX/J0jKXIIm7r7xlrzbA3cudT1SDStBQYfHNMzjeyCxq4w0yqsUDSgZrb5f
7QGF13KBFRLlaCd1/k3heg+8rc7VWlQvRyf/eehUbvVAyPhXw/Lr5cgZxeR1
kPXC8vov9bHwckQlP+T4k60X/K6VXBRZLkcSCTePb3H2QrjU5Inwf+XIeGuz
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
8aubRqGrG5dN/f1Lg2/G1u8eCz7D/wCHmC7+
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV2Gk8VG8bB3C0EEqJGJQISdmKCuXSQsqSfYlkCSnJkhLiT9aSnSLZ9/WM
UCg3UbQoSyLZw8wc05yylBKe88yb8/m+uc819++6rzlzJByvmThzsLGxObKz
sf3/esaZ3t3MMNecX/3/hwBapYXjKEUF5OGP6v+9jacv9gnlJAz2zPb/I13f
FOR+U8YQzGeZU4ukFdQECh5TzODzH9qFOdJsWxlJq+LWEHB5UptJupv5ItRB
xg508IkH30gbO7155pDqAGInJ82/kFbvOoAlUi7CW1dGcCfpXUczi1ozXGDR
bU6wmTRvKVfWvLgbHA5bI0wlPb/NJ1U67wosC4hGZJMevjN830LGA3KyNOxj
STst5r1sNfMEk/cuhf6k+xWsNW1TveDIpUwrZ9LNj1pV71OuQ+SgOvtB0io9
flRpG19IWpP/W5R0CZeCfFPGDaAckzzHRjrR96EUIX4L6lQuObWtELC+3CA7
0sEfbl9U5c4n7T/BIbYzLwDUMyS3h5J2Ont1q7FMEOSUu0WqkR4Il4xjuAYD
j8zbEX7SMiNX1rWY/QcE3TIXXyYgXUAixDo1BPZJcnukkL4Tcs/vLiUMHpmr
CQ/8I6BJzKXOoiEMvHh8uvNJLz7Vmpe0CYeym0u/rpF2Zy1ca8yIAItpnkh2
0mY29q5M8Wi4adzYuGWJgNhf6gXPmqPhzvc//d1/CehIEPwW5nAXjk1S7eNJ
H+14a7c97x7I/Ch4ykVaRlXVwlAmFroWDAOnFwmw7+JLFmmPhetfOJfTSD+6
gndPu8ZB6OxVXI80V/fHQmQWD2IedjxlvwkI5AyXtEpNgGb1HBeLXwRcvE5Q
oinJUHizPNphjoADaxL9qz2Tgbny6vDcLAEciSpfv7YnQzbms+kO6ayqWxkK
N1Ig/Xuj/OOfBAzia8Q/9aTCrNP5o40EAWcdhKXEY9LgQPbN8swZAnb8aAjT
/ZYGBxNob/lJM4POT3mpp8N2kbbN4TgBdzNyC9vo6dC0usp/kUFAW/++PZe1
M2AuUm2Oh0b2n+ExhdqVTNCx3ai8ZoL8PsPfYkfMs0BNtb/TepzsnysRBGdF
FhztEk6qHCOgoc3ZqkI+G2zXGjwwGSXAaqKUwjaUDQ+Co6LChsh+2a6aUXA4
F548viwe/5lcL/l0zo+f+VBjoFSt84aApcPjSzkiBXDD62O1VwcBrGE/C9MT
BZD0rkjkUTsBvbuLeeqSC4CRY7aT8YqAzMb1NwIOFYINNrjO+yXZr99az6y/
XQQPCub1DjWS+ezXnBflKgWxAuEL8WUEmPb3GXYqlYK6U6VnVCkBOoFXS4Ks
SyFU9gwzqISAva8z7MZLSwE7/1vCtYiAX9ZLHYUGZfCinxEtlUdATMizx8pJ
5eDGqnM0TSfgadf+U6d2VMFWnz9zIZFkPzGYuvt0qsD8tFexQQQBLhxFZ7Z4
VEGt5u8vQuHkvFARNfz6ogokVR7XFIUS0PgupPSpAgbri1z0am8TIKp4mar3
AYNyBq9wlA+Z74I68tlYDe9Gq5d57ch6OYS1XCSqYQflYUyxLQHVmxaarVRJ
y+llHLch89xd9fLo+WoYHX6k6W1F5me96zVnRTUUuNxIRCYEpD3n6Xyk/wSO
UBaT+E+R+dwZGmy9VwNRy8HMdAUCNo/J7HPNqYGOSnrY5D4C3hzxus39tAaq
BG9d2LeXXO/Xup3GEzWg8+bd17rdZL1uis4jh2uBFmb3q24nASOGocTiVC2o
unMMO/GT/S0iu1ZB6ykUy6l3eM2z4BrVR/7hfD38WLfH0+0JC1hHxnvfcDVA
d+fLNjcqC9w7DP2XxBqgecgz+1IVCy6N7mm3026AocT27w5lLLDfOGYvndoA
p2weTB3PY4GRm35y9aFGcG2Z9WlKZIGShPTSe//ncCTg7MXHniyYjf/cwc6O
wP722Nt1sizoaHmNPh55CXuinpoa3PwObrdOb7RmtgErws52EWNCy4b9q+VX
2yEzTaKNmJiBwry2FRHpt5CzZPzz73cctLa9yDWtfA9msnqBgb8YIN8+9Oy1
3EdQo2SEF8/R4ZOWKauE1QUWnvteOL+lgTv3lZ4+pR6w6ttvaVg0De8GLF9s
iu2Fy3+u1/TYTYGpjtX45OQn+M3akGq7ZRIOZt+zzJb6DGI0tp6wngkYW0n6
dCm4H6QVv8Qae4/D1OmPedtaB2DwmfJYgfQYYGmjt7olBgFGA6x9bwxDQdSa
6D3+X4HbcC6voGoQFpzO4S6NQyBioNsWtn0AeE5GmFCFRkCiIraE3a4PAjdP
8Y7bjkJwmsaJ1sEe4G3ay9ZvMAaMDwMW9de74OiNs8utf8egtrtwKHHiHWTk
x+TtyhgHRXmz9NdO7WBnrtK5QW8C2NsDDPe2voTaPuekpl8ToHzTpclh5Tmo
vcc4plO/gcNAWFRbci3s1HZZSDo5Cc/WHu5n2pWDqopqQs30JLjVLabdfZIF
o7P33+SFTwGHmibHBec7wDxgHE7ZPw2y1/rSDS9HoDeFkzKPVaZhp9OFmxf+
RqBCil/HzkPTELVUZyh0NxLZr2byyB6Zhk8fqt8EFEeh3rfMhIM60+ChSv+1
bfwuanCIyjQ9Nw1pm7ijY4/Foeg49PR+6DTobOXmzB9NQjIz8jh77zT4Uad5
d3x+hHi5PhY09k2DiUvmGTbhDDQn5engOzANtpEBkhXWGajZrnqAPjwNdGJ/
ostQBjrXc7D9I30aLtjEbLIafYxi6yH/8co02CddDt3/NQstRBrbqcnRYLOb
1FvLvhw0lD9LmdtHg7+1Hq7EbA562ZLUV65Ig2RPIwn3zbkodqlPf6cqDXjU
hKYF9HKR7LVzGpxaNLjbcjNpF8pFthZOwn3mNKgUN49Ryc1DbVK+PZ4hNJja
5X9rh1kBulPUYPXvDg2y7AsXH7kXoONybKORETRodD35nT28ALUo3pvJvEeD
IWNe1cjaAtSknrO2M4UGM9vkDtwULERPjToP7imlQUnvmzRmVyEqDZR+NN5D
g726OZ3yB4uR2+pliat9NNi9X9GjXq8YyYZiRYv9NKj+U3Bb3qEYFUZq1PAN
0+BkbBzjw71ilJdo3HmURgPMd+Pir9FilFF8ezVtiQavD+lvHbpTguI+9TmZ
SNEhekVZ8199KYoJui/VLUOHC3zVvGrvS9FdWe2ps3voUHiZT/PCSCkKD6xx
MVCggyBX3jtXjjIUIJXkpnuYDh+U+nPdTpch1+tG1zT16bB0Z9Mnpd4yBALv
/OWu06FBqPpEV185OtIUqlFygw4yM8of1afKkfol9X+7b9Fhcda5P3a+HKk+
L7ktHUSH61uOOM7xV6C9F6P+2xlFh3cG7f9VGlYgoRrtiG0ZdOjVDaJ/b6lA
hGlzAkcbHfhvegemP6hEv4rC3Z++pkPZ6j+fUwWVaGXpzCn3N+T9A9glBqsr
EW9+37++D3S4V4HysM5KJDuPu5Z8oYPBO5tISY4qZJ8sqGlE0GH7l5xaUZcq
5EofFF43Swc/l+kN0t5VyONI9lz9PB1m6fcPCQRVocBJuZJdf+mAv/oim59S
hR6qaAn8XssAt+sJJXdbq1DXp8v4YxEGDB3qVVHfiKF+WaVXJtsZcCZzzUkP
fgyNBC5kce5kwOeP/8xShDDElPrP3EuaAULaqyHPJTDE5ZvSfFKJAcYLP5Su
qWLomGBz6ow2AzRlU/a7nsOQrlu4V7YuAxQmTDe/t8OQ0Ysz+uZ6DOhy3Msl
5YQhO+c+dmTEAL77ZfoVVzDkX4u7J9owoHC9jaV0IIaqzQVPqHkx4Hhm88/y
dAwl8gXTkQ8DInzMTDgzMeT9hn5f5wYDOPiexFrkYEj56PMB0wAGXC95n91b
hCFMysnDI5wBybI0M90aDMWPvN+6EMmAzUMqTaefYsjz4cH6gLsMeLUhmk+r
AUOKvNxro+MYsGiQ7MnTjKHKOSwtL40BjviC1fZ3GIqtEAG5DAaEZkkpvu7E
kIdr2CSWyYA9Gkf/OnVhSP6rpWJTHgOW5Lp8g/owVP5ypW2gggF+2rHKiqMY
Kk3Q/7HxJQOMRFuPhPzA0F29upTkNgYITJgq+M9i6PK6nRqi7QwY505VujSP
oT235sJl3zNg7+Fgj12LGCq2Txc98ZkBGYtP1gitYihKZG3LmwGynvh7lc/Y
qOjSp6suRl8ZcC982e8sBxXt1j1GPT/GAK2H1tdt11FRoSJdxw9ngJ6fvMY8
NxVFMIyZK0wGUD+sCgMvFbnkNSaEEwwIlOaUCd5IRdJCcUOJ8wwo8njaN8JH
RWu7F0MovxkQ23wpcGUzFU3eddyd/Ye83+cL57byU1H+iqp3xQqZp+rZNjEB
Kgp7liWkwo5DlXPazS2CVHTRe8OLhjU4vH9ifGqJtNT0EGcHFw5reUoqKoXI
9bN1Kgx5cBBmD9L1EybXt8ZM+jbicHzq2N5DFCrK67zzeIIfB75lie5kESqK
UV6yzRLEwX7llLOWKBXdSPEWsxXGge29wdVR0hf+ML4Ki+JAKfwz4yVGRbrn
HR71bceB653g5G/S+1sGziXuxEE71NPKazsViUobiZzdhUP19iG9EdJro9u/
8MjgUL+o0KK5g4pYTM20DlkcTvufaEwk3W9UZxW+F4c7YotHBkk318gLH1fA
4Zqr4mlBcSoqFS7oX1HCIf7Px4kTpJMCxR40HsBhLqKN14V04FiShd9BHLq/
Lr0JIO1ykmebqhoO+qOXtoeTPlsc2vdTA4e4hxzcoaQP8/5NrtTEgSXXluhN
WsLTy+zKMRx6B8sbLEhzf6JvlT2Jg7lwc5gC6flD9r2TOjgc9Fo3/4esb/hR
f2LOaRxu5Ubx1JN+vWpoYqePw1iC9YcrpDGn11tEz+IQbBED/KTT2o929xvj
YKWs5lhO7kfo3tr4ZDMc0ONANXXS7nH7jIwtcSjTu9nRSO6n+Vwe36ZzOLwT
NeRXJq1pKfrxrS0OvspyIulkHrKNibGRF3Booh/+9ovMb4s4t+FJRxzuD5d5
niL9NzRkI7szDs+JZ6/ukXl3nvGM8b+MQ4NGbC9B9kddJU3v0FUcDFP6E/lI
Z/Nf4Jm/hsNF/Rcyu7ZRkfegwd2rvmSejnFfpMn+s9V8dVrODwdFS/FVga1U
pJ17ZAPNHweL7fOyi1uoSPjy3ij7/3Aw2BWMp5H9zf4h99T2OziUeqWWWW2i
IlxZhHMwHAduexFbHvI8vPjDFWF6Dwehdqk0ffL8OEZP39FJJfO0dJrUXEtF
et/Pn1iTRu5P7ljIY/L8qRj3cTQ/Ivdzsk7uB3k+OSltIWo5ZH+L1Jd7LZPz
oTgneF85DtsmRPunFjCUyksBRiUOnkdOq0zNYSjYM36lgIqDdchg/cBPDJkc
Dr4t/hSHv4/XGmR8x9DvdtsA/pdk/8sE/EuZxNAOUx3fl204tHvfUTo+gSGd
EcVr3u1k/dQbQt/I+ZM6z+HU8x6HHwr1vGu+YkhFouRMYj95vg6NLTWS88vb
f4HCTz7Xzn6pVhEk52H6utGtLwkcTl2qsNhEzsuW+I6N3rM4KCiuuP57gqHN
RY/Ye36T9d+3vvS0AkNVvccYCRwzYCKzaFiSTf5e7It9tkV4BhatcPX/wjAk
8OxmdYvIDJgfUD/w9j8MaZxwKPfaPgMD2j02G26T89BaJbtbcgb4eBoNXX3J
+RcxGJkgPwMbtdP25zpjyGVUxnLLiRk4fiSnUegkhsYS0MJmjxk4UPNS7fhs
FRoLNWhI9JwBt+7ab2P0KjTu8zVIwGcGXh28+fTqaBWaMP/NKew3A5ZrepaM
31ehbxRFEfHQGTi3NbdPu6AKTedkasqnzsCyHKNv3LQKzVBvR55umgGM6/h6
6fxKxMzl0X/XPAPKQRPPHz4knZS22aB1BrxqHYqXYkj71qYZdcyAu+TDY3G+
lYil9r3MsmcGDDOF/FjalehHi22X8/QMvMiyZyZ/q0C/ujUooZuYsJmIv9dK
Pk+wXe3/rbaFCZ4R5/m411Ygbi6fzz+3MsHQVERNc6Ec7dAsTXKgMMFK5g31
Wn850i4V3nRMignWBS9zF9PLUXLoAgebOhOMsq5xVu4oRwcOVDFvOzNhONNm
fh2lDHkmSzbfes4Ee9XCGylDxcgkxdFtDWICHmlsv/C2GKmm5vLfb2FC8IPq
IN36YvT3gaRz9msmrJMJie9IKUbhjyS527uYsNVCKEbZsBil50qaCUwx4apY
kPKT50WoDZOkV278Dk0flrsH4wuRUKfk5km77xAdenhhByUfmfaV/xNb+Q7F
jlt+Rnc8RrMXctyHSllA2fin/jlXIlp4sE7VoYIFAsOp4SbDCWjxo9vyFPm/
r/fQWsosNQGtwv5YooYFhYpN42dtEhDvztYqDsQCwZP2SnGV8Uh6bHJWtpcF
DR9HnXoqY5GVvewt3yUWFGzeZKF1ORrZPIw59neZBRXHPwloCUUju64fG4LZ
CNB4lVd1pS0KOWvVp0etI6AefydxRjwKee888/wRHwFUoyUdzf4IFDN2ZbVl
FwH7n9T9HTMKQ8i+KnyTPgEGYwLnUqeCUMNHd70RQwL86tiSdx4NQnWaclsq
jQnY8K8u43rKbVQuVpBhYEnAz7u/2e/pBqL0gfQnMY4ElF3iHGc+u4V8jSLG
uW8RsKSh8KH59XXkiU4UDQYQcEO+MllM/jpyV2C/WhpEwBxRq5GU7IMceQMX
T4cRkEgzv4e7eCOjDi++6DgChuMSGlcpnmiv1vmjnIUELLvumuEKcUUyVSJr
+osJWG2poQj6uSDJHQMdhWUEvA3Jyrf3dkbC/0zMdKgEmP8NZ/J7OaH1z3Sv
hD8nINDjSc/lAxcQx+71yuaIAEvBwcVNNufRckrrL6mXBLQadp1n3bVB8z6a
oW3tBCTEVT4LWWuFxhVV0tb0EvCjqTVC5pIxGsr8adfbR8DVAeXU67Vn0cDG
Kqm8AQJYHD4Lc5g++jCzBzs+QkBO9ak/NoQOenuO5ss/ToBW2Cb1dpWT6NWb
fI2Jb+R+1+XrZ6UcQ8+LxNtDGATs0uXdF+Sghp5tG44xZhJwbUNW3usRFfQk
PN1EgiAgUzU8/nW+EqqctxT++ZOADtYZJSnfPajUSXCkeZ6Azi2EQaKJJCro
6cmL/01Ao6KEu+WCEMo+Fu9m/5cA5qsxw7e63CgDM1BUWv7/e5tI/9BXs00P
xHkW/v/e95YM+7wT2xj8D1QdlKg=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV1nc8ld8fAHA0kBkRvspIkZmSkvg0EKJhlKYZpYyIlFFkRnYySva4KSMh
61gNpcx7zWTee9173RuREfqd31/P6/16ns/znPN5zjmfj4ydm9k1DjY2tjp2
Nrb/X42vUTsbpix1OyzKK8KVPXUpb87Z/RTXgE+EewLZSWdBlIcY/VZcD1z/
JAb5JtmCqtaW3BfiFnAg+meofdJtONSxryRe3AGOiG0uN0gKhIa05v1PxO+A
HHf4wtzTOHgUGOnzWDwYViIHiPWJmeBwhyUeIZ4IJeUj+qyYUuBKNMr8NZMD
Z+Unmms1m6CyY++JE9uLQb2t3qdl8AtYPRoaaI4sh4/FbrT0J53gVuqpkjz3
HtJ4TopwDBFhNpb0mZ0dwY+u5Emn4n743PgRtR9uggZ5IcndT3/AjXtGfBcY
LSBr98rsWcwINHLv/Vfk8gkc3Z54pW4eg7zsljWJnV/g/uM13YrwcTgiWpdl
/qYNDlX949ComYD1T0Xc9KvaIN8/LjoaTcBnYVftA01tcK3V7ha5eQJOb5bq
kSC1QUpEn2R02wRc5Q3cMLbaBp0ZVcfrfkyAL4f+dXfTb/AkdgZS/01ABbNN
5QnjG0zvYas/eXQSVD4NVX1UbAdegd8pd2onQZR5czp2P3beiRm3hklgE/kr
c+lIO+jKi7Nfb5mEHjvxSJZlO3DTTA1PtU2C35rlFbHAdjDnGHb6PTgJbfvb
2Z1728G1Oy345fIk7O+yyd14rAPkP2ts89tPBsK1AnTzRAdsVGDk8GmRYfsS
q7/DpAP0/+7qTTtMBi7pB/xp5ztgx7M4rTfHyTDk8uKumksHaPAb0glnyRDM
PWBkldwBqm/eFa1zIUPPEXNmIbMDAgrjJfdkkmH55fiLst8dsE9b0lE6hwwy
/zxNaxY7gCacUs+XTwbXusSiNo5OcO5wSPtZRAbOQyRnlmgncHHsXrWuIsOh
fRcoGtAJZWekFLu/kyFjp/UIiumEcinRiMAlMnwMZsV8TuwElUbnQ8IrZJge
fwCdKZ2QI2v7O3MNx2dlpI9ld0JA8g3finUU6N4+dnlDVSeoDQYO1/BRYKPY
tX7jkU4QfaD26YAMBW5tutlF3NMFEvVHWLP6FMirE60w1uwC6SGVMxaGFPjp
3pSCtLtg7KO1SpkxBcx6xW0LDbrA9dvoJfvTFDiY85nld7kLMi+8DU6zosB6
3V18cuFd4BzhNmbnTIHnt0dPePzsgtrSE/0mkRQgyT1Rokx0wVrmpfs6Tygg
0HdQ4DKtC1q1HyYoxlAgSDeWpD/fBSfas1SW4ylwnQeuifN0Q1A25z/XVApo
5D4PatDsBosau43FBRT42ne+jj+6GzyihEzCm3D8AEXEOaEbclXFSGwteHxD
d10/JHfDVufwBa8PFMj5+UzKL7sbVqQK2M59poAfuTdwqqobVOPWK09/o4DK
3HmDlvFu6NY1od3to8DEPCVdaqobDAp0Ge/7KZC6cHfhPrMbpLvHQxYHcD7/
PitQX+qGt1TXhzd/UGCYvW/TS/4eELP9lKAwRoEYAav2e1o90DCRBP9oFDDY
TJUn6vZAMvVT0yYGBVaEfB7u0esBUe7kYaFpPF/RZHXKqR44r+w0IsaiwJFt
fQkWDj0Q2iQlsDJLgT/brzOKb+Dn57IvMH5ToEh6UY/HrQf8N/nq9M9RQExO
7E/jvR6w+xvWWfCHAjOKVlZqMT3A8uRRlVqmQIEyteRxYg+87BE0mMO+qurD
TU7pgctz+osf/lLgi3py9fOcHtgiUK1kvUqBrIN9kpuqe0Bq5kTXdTYqmBtY
jU5M9MC+g5yH+zdQoVpYvX18qgc8y/1dXTZSQXaUu26M2QNts5Zv1rBnfWuS
RxZ7gH6g5JwYFxViS7efGeIlwtnkj6YKm6iwGLCgM7iZCIpeHKwcbGuTDqUB
USKMlb1L385DBVVKIGefNBEGLEUVuXmp0CY5Wd+tQQRdf8pcNR8VNGh1RV1a
RNhzhINfmp8KaZVJqZ26RODa2KoZhO1sZujdbkgEaam1Sh0BKnRJyTh8NyWC
tzMSfIatNb109psZEWYKuu5NY3OFv1L5epkI946l+scJUsHdMvi/L7ZE+HAn
V+wndq/sFe5WRyLkGZa07N5MxfuFf/KjOxHGiXfPVGDzR1K6PngRQUI/Zs8i
tpdVQ0PLfSKkNV6SPSBEBb3ft583BRMh8uV37SLsogbjx40RRGAmdtuPYQtH
7/BpiCaCNTJOFxGmwv1LK9dQAhFE0h3o+thjCkTz+mQisJTMTnpiG/95fbTu
BRG8furVv8AubQ5Vq80iQivBVe8Dtlic9baafCLk/2UfnsJ+ePUgT3UREZxq
1CN5tlCBqrR5qaqUCAun1E0UsU8vTZErK/B8kzRkDLArPjb1VNQQoZnptska
e3tiWtO7BiJ4qIpxeWGH2t4pKf9AhLoCO4lwbKaqafrbL0QQVQ45mox9bmVn
VFk7EU5yVPjnYte1rt0r7SHCq19K7cXYcs96nUr6ifD9wHbNSuwohxLL4mH8
voSWshrsOfWI42/GidCpfV6/DvvyP1v111QivB3jZ/7/fkvbIamiaSI4Vsi9
/n+8Uqow36tZnH+brqAS7HgnxnLhAhGs1pu55WEva3ygFqwQAR0b9kjBtuNI
J+Wzk8BQs+xJBHZru3dL3kYSrNzhbvDG3vPidFkuDwkEBaU32WInOytk5AiS
oCdh7y1DbLaD7NHZIiSo4gwgK2M7bRjwzZIgwV4m3OPH/t5VdiNTigQNehVy
0zj/mhmR5zPkSDD3SGrqM3ZJ44N7PIokWNDms0zHVhr3TPNWI4Efr995d+y8
9dfrRjVI0JJY90sXW3rX5Z8mh0iwbbuczCbstBNn2KuABPNpHFOdeP2I3tDb
sUOfBGGvigyTsHmKlJ2WTpNgxOBdxxbs0G/SEQ6WJGi6Wr/0Ha9PNtaWV+0X
SeAvTa0Jwf6jvsrMvUaC8xuWeafweh+p/OZt5ksCD8VmeijeH5f6G5PrHpKA
1eRD2YlNWn5XrRBKAr6N4g8a8X77qpO+thZLAgfpyEdMvD8rml1DX+Xh+VZ6
0aXw/t0zaVcgWkQCX9Hajmy8v19tPP8lsJQEyHvUQg47wwj4rWpJwPh9Wvs/
fB5Etgskre8igW1XTOQIJxU2zqyrcuslQUjcCw8j7IdCi/0DQySonyj4+waf
N96WI9tKKSQQ3mIx74bPJ5vBktwrqyQoZ3eIb+WgwuBKzqfPHL0Qqd6YuBX7
3PaUqX1cvbCa63DYjp0KJ20DVTYJ98IeNTX/6X8U0KScfVeh0AvTh791DK5Q
oITLoFdGtRd2e5pxC2ArKR5aitrXCxEvYmm6+PyUdpHVsdftBa5nqwWJSxTg
+T3bImDRC/575WXF8Hk8spbQc/1BL1wQMLj1gEkBXkZH5N3gXvApXV8Wjc//
g/18x0MjekHwroBIGq4PsW/DSrMTeiFs63ONV7h+HLnuGz2cj+N/FU8UkCmQ
2WlnaNHRC1XuZ+0lhinwvf7lPztiL+iqcr75O0SB5VdDFbcHcPyXKMmBQVy/
Q8/tjJnohUc17x2jcT3j0Dbm+LLYCzOFiTU9PRSwy1GvBZk+mHWo/tz3hQLR
ca6ep3b1weGLZ4KjWilQHfBK8YpSH3zRq3TWwfVT6MLOlPv7+yDlZOv7JFxf
m/nEvd8Z9cFQzlkX+QYKyN1l26Pkgd9nLf+0sZwCk0bt2aLNfcDlpANDafh+
pHxM3Oc+QBeaB4RwfXdoe3Cf93sfWHzn3G+QTIGxU3vOcvT3wYn1NxWyE3F9
NY9bm2b2QfyE6DZN3D/0XTG/8EGiH/rO8fU0+OP6dbuX/45HP7zkWn/S9TIF
uN+qLTPv9sOvpXQB3YsUMJwLm7zh3w+BViqFm3C/8sn7YK11eD9MO4peTTWn
QItvyo2T6f1QzTE0noD7nbqQSy2yX/phs6wt568D+P+n/LzXKTMAO87v3mwm
iPun3ZIDe+UHwHm7/1Ir7q8U3lsdSlQeAJIgha7LQ4GXfZ3L5w4MgNaA8KzU
RpzPrS2+QyYDIHA4OqX+Lxlcnhb4U+4OgNF70no3MhkU424Hrn4bgPSeu1OZ
78mQG74uYvf9Qbixb1dxwHkyCE2EB6g+GITrf6463bUgw0Pgv7MveBAqd36p
dsH96cU/YtY60YOwOURV0/wkGQQcVPefzRoEvcANiexAhntwYdTnyyAEey4k
MHaSwfTPG63PEkNAKSpZZpudhHn7izTHmiFwlc+wP/1oEnj0Qs1Ktw6DeeUH
jRyvCfATnOQdvfwT2JuE90RajQNvvRJbr+kI/Hz0QaJ95xjoeJ9ebV4egQ13
YnfbohF4nhOVveP5KIQJBspo1AzDVUuNb9wnx0ATdsWmvBiEd8RrCfV/xkAj
pHlGz7cPtNpKOMhJ41CqK1DsHo7rtr7jfILeBAiQZ6rjL3bBfo39ceXkCTA0
zywXmvgOP2eftGaHTMKMavyBKJtWYOw7GyK+lwxT73TJu0uaYRddhcbeTYay
LJnbhV510CLn1eUeSAH+0+/CRDPeQkwP0d5MjgpP6uvXqw/lQVTAE7nOXbhv
0XP8vi4jDx4r6E+e3k0FQ29RiwX7PAjxK3c0VaXCxOuKxiOMXPCVS7hheJAK
ETe2Ol1dywGnO2fcdE2o4BOortilkA2w5et9xTtUqJKT20NQeQks84Y4jhYq
HM3b/dn2bRz8yQ+5VfkR1/0IwRaz43Gw9tf4xK1WKshzK9CTumOBN4e4QvxO
hcZTL9T30mJAYY7mVNhPhWwVm2V+nyiwSRTRPcOiQvn08Y4jb0Ogo8eZ9kJi
CnxIwjGeZ29Dr8KeD2bbpuCOUorDvLcbDPvNv+SUnoKVM7e/lZneAobcQ8vb
O6egUvJZkM46R+Dyetqgt2cKFhqirU5sM4ejIg1JdP0pCOWZ3fqk9AoqsxQ5
rnV7Cm61jiKt7wEoXuABFXlOQXzk0RkDwYfIo5X6xMB7Cva1jnv0Vj1E6jq1
fea+UyBm8e2qElcQKpGzd3UNmQL+2wTu5y+D0ZvfJSnZKVNwgDbV/rg0AhHi
TH7xNU3BnFhJhV9JHHp8suJpYssUnOX+ZGb7Nw45b5DW/u/TFFTLcL9b0I9H
u+/9DlFomwKZRvccrYF4VGCT+t9x0hRAppLU5n8JKE+NauBDmwKeQf4rGw8l
oexvj16MCdHgm0CHWfudVBSl/vfySxEaRHSeFzKqSUXeTz0kL4vRgItqWXON
PQ0ZXrFNI26jgeHQjYKwqDTEZOimfFagQbHLMX6X9OfoIO9y4htdGoiSiYGV
Jenom7F71H1nGrgNlN2MOZGJKt5QTh5woYHZcMnROYdMlCFkzTPnRoOSt0HK
ikGZyGPA9LGLFw3kYFyLuzYTiTkrhds8pMEVy3GuRJUsZBdBfmSQRANLR0vH
Qc5stPDpsq9QEw1aKccmlFNy0HZzA6+mFhr0cjMN9EtykMGwmpvHJxpsfkOz
2/MpByXNcdh3tdFgpjvyS8BcDtKQKTSO76VBxbp+7xWTXORxf15caJoGT8V0
fP3mc1Hqhp/CTSwaLO3k4GvkzkONsZ/5PGZp4Jxn6d63LQ8J5qexdy3QYNuP
jPIH+nmouPvoVBwHHaKNBO6WxOchhnJ01WYxOiif79J7IZePtlTdLWuUoMMX
A4KCoGY+0j5uW3R7Gx2ypIt4zp3IR48vaGR0ytLhyLPEHxdv5KPdoQNhcSo4
/vcrCaNX+cjx567zm4/TwVrGM65mVwGKdhY826hPx31KkIHN/gL0bn7J+LYh
HRp9YnT7jheg9bzfdDtN6fBQpZrnmE0Byj7ouSvOig6k+LVXq0kFaCQOzQu6
0iGhpmFYfAU7yLQ63p0O3M9luxQ5C9Go52DAFk86wOudu0SECtGY5QKnmA8d
9E7t2OAtX4jGxdUkpILocNQ8WvPGmUI0saluOCOYDrxveT7qX8T+a5wtG0aH
uHH1sb/22D8clXdF0cFkbbh3zrsQkTPTdVWS6FBsE28jkYYdr7yuOJkOe1XL
VpqzsR9Vf9qTRofAGNVzJ4oKEeUa6YxGBh0cr/67OFhbiKi7+e21CdjuIQ5a
Q9gSz+Xriuigah2eXTpeiKZ4FBm6xXTYetGWuI5eiGjT+l7Hyulgmd+korlU
iOil/mFG9XT49771frcwATGyeEy+NtAhfdpXXFICOyFF0LSZDiNmVyd1pbG9
3qWc+UyH6x4XdggrExBTa/rV+S46sE6JCC8cxVb0de/vocPVqcL5zSew/+Pe
f6kX56Psgx6nCQGxVuXqrw7RgbBBzS7QkoB+NV7uuEamw2Yt+T9vHbHLaIkU
Kh1e277dne1MQDPZPhdu0OmQX6/F7+JKQLMhiWO3ftEh9OwiX5wXtrdsPnOW
DhJFBtp0H2ynkpvu83RIiqvRkfYjoN9GbXOey3TQdFGhSAQR0Nyhi+/nV+gg
VT6VMRKMrUT1v/uPDn4mJy0Dw7AlvY8tsTMgwIjCtxqBzbee03c9A/d113vM
o7DX4r6ubGRAz4bospBoAppnScUGcDNAL161LD6WgP6MvLZg42XAQen9P+7H
Y3dqiwfxM2CKlKWjm0hAbC69C1qbGVDOxdyx9pSANnF5kmaEGeD+Nnw0/hkB
bcnmf1coiuPZIx+tJBPQdl1Cgq04Aw5nKm3VTiUghX59D3FJ/PwHVHgqjYD2
3hk907kdj/dijeGB5wR0WMBfLUKGAaF8pezz2PoEMf6jcjjexmws7AUBndIv
ZyzuYsBzmtsiC9tq5PTXkt0M+Ge2dFYlnYDsfOmF15UZUH17dQWwb4mGhUur
MeC6D4FTAdu7VNapT50BIkKnHk7i+Icm9fqxGgzY5GTp5YP9mHJBzvAAHr+p
6fwI/n5i0DwH2yEGrLqM8Uthp2+LG608zADps6Mde/H4C6qUG9wA5yNA01gS
z6/M/HO6/DEGeBKYEYN4/rVMe/+fegyIqtB86Y7z8zHi36VnJxiwceFSyiDO
X4dc2qHTxgzIPdAWJonzO4A0xTlNGcA9IXJ/H87/xMWuhfrTDPD7j/pAGv8f
5rwLyduMAcYTQoXjTwhoMZb7naolA1IgbIN/JAHxfjrikX6RAaLmFcl7QwlI
1G7ozLkrDEiWXmKdekRA0qt31fhtGPBp9GnN0YcEtG9fMcP/Gs7fvauzhHs4
/9+Nv+6/zoAgd6kHMt4EZHCDXDjtzIDxQYdmVw8Cuvhym9MVdwb8Vt1e+QSv
b4dD7/VFPBnAEXYwwhqvf1eihdw3Lwb4B8hZcdkRUBBP1OhhXwaoCmnv+2lF
QFF58g1z/gw41iFjz2dBQElHm9OLHjKgq8+sV+g0ARHuLl+SDGVA8bEYYrYe
AXWNXyf9jWXAu5Oie0ZUCGgoYP27twkMGJjnCP8iT0Bk8YyEm0kMeFPb9T5K
hoCWT/eeGUzD6z3o2WLyFgKSqdX/Wp3HgMnQndzdi4XIPVG24V4t/n/i1nI/
3xcis6d2N9YhBmjFPFMYLy1E+5OyhJ40MoApLWT8obAQLT+TvZbxkQHyl4OV
5FIKUUia7KZPHTi/pawrp/D5l5ola7FlkgENRqFxDoqFyC/bbvUFhQEkN81Z
M+lCZJ2TlSdPY4BT9c9kadFCJJcnu3SIxYCLoYkbL7IXouJC2XTbJbwe6gdj
TpAKUEuJLPUN3zSEBTspSN0vQHmldnEHBafhqcuNqzyuBSiiLOtQk9A0dNvu
3dFnW4BOlcs+IW6dhso+ZrGwUQHqr5TduyIzDaV2iToiogWIWS/rZ6Q5DQ/4
PwxYEvLR1m+yghNXp8GndlLLozYPHZzv+W1jOw2H+cf+MorykNW2sN4f9tMw
fqjdweRFHkp1oaf3Xp+GkYPHYt7756Ht/OUqXz2m4W/lXe4zOnlo12n9k2Wh
05CzrKISXJmL9nc6hT58Mw0kR9qjj8k5yJxYtCK5Ng3l3YK1e0WyUED+reV2
NiYsRKwvGFvNRAX3lBeD1jFBjOvDJV9yJlrZVvSbysUE2Z2b+p0qM1Ge4yta
uTAT2ksLPfZaZaLlhcI+k91MyNrgE/v+aQbKksgv97NgAq/P2Im1delo1jrz
1hCBCXba93vqrJ6h+Wcb9tu+ZgI9bAvny53P0GL7jdXJYibYFLyM9ZhNQv9g
bzSrnAlxSR2Vs5FJiFe6uZgDMUHH+CmXY/1TtHNkYlahmwmWbTm58TKJyMpG
4Z7XXyZofrwsKTsZiy4lRx1dXmXC5susx9dLY9HVjl/cD9hYsP85gVDuH4uu
HXmfGr6BBaKHBSdtRGORh7RxbZoAC2psz+sfjo1GUSM3/zXuYMHO5+1qFZci
EbIpDuE3YYG2w7bcGcEQVN1+6+TwKRZcmegLeJ0VjCp0FTe/OcuCg2GO1xo0
glGRZO5z0/MssDtWH7l44RFK7Ut9G2XHgsVzH6qECgOR15nQ0U33WLCxozn5
drUfckfH8wd8WTAcZ6CqxfBFt1TZXQgBLOjSqc5WlvJFdrx+i0bBLCh54nq6
PvweOvP5tkBEDAvC9VLkSm96I6UjV3Q481jwRAUQLpVoV7HEut4CFnCqjR8S
eOyGZLf3fc57xQLrg27WFTKuSGzFzMKglAU22fSBC1duoo1VhjdDallQilC/
5iZHxCG/Ud0SseDUfAtbYqMDWn3a/EeuiQUVtx3LVALs0ZynblDLJxY48Nq3
/+K0RaNqGinrulngnMhwl2u1QkPpM1e7ifh7HbeOQMo51MdXLJfdxwIxupDA
AR8L9J2+u+TYMAsC1KwJa9fOoC8XKV5Coyx4I1mpfG7aBH1ozdEeG8f5/PFy
YWafEarNl/oUOMWC57MF+uHax1CV6I+oswwW5H3XWj+5QRe9DUk1k2GxwO3U
abXnSwfQm7nzYjMzLNCwNw3MuLwXEexFhhvmcP7WDe6q8FFEuV1d2bELLFg1
GSjfdE4GZRyNvWGzzAJDd4dsI35h9LzEVG3PKgscpX6vSzX8W/9Mimf+3z8W
/OAN5nBgG4H/AZUUWHE=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
Da0=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
8D/XDFbZ
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> 
     FormBox["\"Divergence Removed? but this time better constants?\"", 
       TraditionalForm], 
     PlotRange -> {{0, 1}, {-0.1577093757653725, 0.9999999999999987}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
0\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
1\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
2\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
3\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
4\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(+2\\), \
10\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.814276565046755*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"e", "^", "2"}]}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"3", "/", "2"}], ")"}]}], ")"}], "*", 
    RowBox[{"pPlus2", "[", 
     RowBox[{"e", ",", "1"}], "]"}]}], ",", 
   RowBox[{"e", "\[Rule]", "1"}], ",", 
   RowBox[{"Direction", "\[Rule]", "\"\<FromBelow\>\""}]}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"pPlus2", "[", 
     RowBox[{"e", ",", "0"}], "]"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"e", "^", "2"}]}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"3", "/", "2"}], ")"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8042701623788366`*^9, 3.804270187798241*^9}, {
  3.804867860252019*^9, 3.804867860674274*^9}, {3.80486790357987*^9, 
  3.8048679038016644`*^9}, {3.8048679530140023`*^9, 3.804867957098213*^9}, {
  3.804873960509039*^9, 3.804873972855776*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.8042704153020725`*^9, 3.8048678980789795`*^9, 
  3.8048683037098675`*^9, 3.804874066333661*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"pPlus2", "[", 
     RowBox[{"e", ",", "1"}], "]"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"e", "^", "2"}]}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"3", "/", "2"}], ")"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.804874145034339*^9, 3.804874145518891*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Refine", "::", "fas"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: one or more assumptions evaluated to False. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/fas\\\", \
ButtonNote -> \\\"Refine::fas\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804874822838107*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Refine", "::", "fas"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: one or more assumptions evaluated to False. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/fas\\\", \
ButtonNote -> \\\"Refine::fas\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804874822937033*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Refine", "::", "fas"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: one or more assumptions evaluated to False. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/fas\\\", \
ButtonNote -> \\\"Refine::fas\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8048748230489264`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Refine :: \
fas\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8048748231353645`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Integrate", "::", "idiv"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral of \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(e\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((\\(\\(-1\\)\\) + \\(\\(e\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^2\\)\[NoBreak] does not converge on \[NoBreak]\
\\!\\({0, \\(\\(2\\\\ \[Pi]\\)\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Integrate/idiv\\\", ButtonNote -> \
\\\"Integrate::idiv\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804874823854223*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.804895835887599*^9}]
}, Open  ]],

Cell["Attempt at Fourier series expansion:", "Text",
 CellChangeTimes->{{3.8056289126321974`*^9, 3.8056289365356536`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FourierSeries", "[", 
  RowBox[{
   RowBox[{"pPlus2NP", "[", 
    RowBox[{"e", ",", "1"}], "]"}], ",", "e", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.8055482829138784`*^9, 3.805548288575738*^9}, {
  3.80554834293436*^9, 3.805548346219663*^9}, {3.805548384307026*^9, 
  3.8055483869964695`*^9}, {3.8055484189215384`*^9, 3.805548422882568*^9}, {
  3.8055484838687787`*^9, 3.8055485142373514`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Refine", "::", "fas"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: one or more assumptions evaluated to False. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/fas\\\", \
ButtonNote -> \\\"Refine::fas\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8055505311262436`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Refine", "::", "fas"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: one or more assumptions evaluated to False. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/fas\\\", \
ButtonNote -> \\\"Refine::fas\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8055505313520327`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Refine", "::", "fas"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: one or more assumptions evaluated to False. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/fas\\\", \
ButtonNote -> \\\"Refine::fas\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8055505315348606`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Refine :: \
fas\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8055505317806425`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Integrate", "::", "idiv"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral of \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(e\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((\\(\\(-1\\)\\) + \\(\\(e\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^2\\)\[NoBreak] does not converge on \[NoBreak]\
\\!\\({0, \\(\\(2\\\\ \[Pi]\\)\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Integrate/idiv\\\", ButtonNote -> \
\\\"Integrate::idiv\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8055505335229177`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Integrate", "::", "idiv"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral of \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(e\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((\\(\\(-1\\)\\) + \\(\\(e\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] does not converge on \[NoBreak]\
\\!\\({0, \\(\\(2\\\\ \[Pi]\\)\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Integrate/idiv\\\", ButtonNote -> \
\\\"Integrate::idiv\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.805552990718856*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.8055484787061634`*^9, 3.8055484949758496`*^9}, 
   3.8055718579969406`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Chebyshev", "Subsubsection",
 CellChangeTimes->{{3.8056362540661974`*^9, 3.8056362573328323`*^9}}],

Cell["\<\
Attempt at Chebyshev series expansion:
http://www.cfm.brown.edu/people/dobrush/am34/Mathematica/ch5/chebyshev.html\
\>", "Text",
 CellChangeTimes->{{3.805628925862969*^9, 3.805628933788021*^9}, {
  3.8056352964963512`*^9, 3.805635297023485*^9}, {3.805636260793994*^9, 
  3.8056362616822023`*^9}}],

Cell["\<\
These version\[CloseCurlyQuote]s didn\[CloseCurlyQuote]t work very well on a \
naive attempt, so I\[CloseCurlyQuote]m currently not focusing on them:\
\>", "Text",
 CellChangeTimes->{{3.806068285333046*^9, 3.8060683038920207`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nc", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Re", "[", 
     RowBox[{
      FractionBox["2", "\[Pi]"], "*", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"pPlus2NP", "[", 
          RowBox[{"x", ",", "1"}], "]"}], "*", 
         FractionBox[
          RowBox[{"ChebyshevT", "[", 
           RowBox[{"n", ",", "x"}], "]"}], 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox["x", "2"]}]]]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "5"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8056385635143046`*^9, 3.805638585596665*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.8056586007695723`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cLtd", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Re", "[", 
     RowBox[{
      FractionBox["2", "\[Pi]"], "*", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"NpPlus2NPLtd", "[", 
          RowBox[{"x", ",", "1"}], "]"}], "*", 
         FractionBox[
          RowBox[{"ChebyshevT", "[", 
           RowBox[{"n", ",", "x"}], "]"}], 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox["x", "2"]}]]]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "5"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8056371936412587`*^9, 3.805637198594044*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "129750.62087898543`"}], ",", 
   RowBox[{"-", "129749.27129677223`"}], ",", 
   RowBox[{"-", "129746.5409666355`"}], ",", 
   RowBox[{"-", "129744.8078760048`"}], ",", 
   RowBox[{"-", "129744.88295456166`"}], ",", 
   RowBox[{"-", "129745.63699968306`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.805637545260033*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cWPLtd", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Re", "[", 
     RowBox[{
      FractionBox["2", "\[Pi]"], "*", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"NpPlus2Ltd", "[", 
          RowBox[{"x", ",", "1"}], "]"}], "*", 
         FractionBox[
          RowBox[{"ChebyshevT", "[", 
           RowBox[{"n", ",", "x"}], "]"}], 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox["x", "2"]}]]]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "5"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.805636793142048*^9, 3.8056368092142344`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "5.205374684929718`*^26"}], ",", 
   RowBox[{"-", "5.20537468492971`*^26"}], ",", 
   RowBox[{"-", "5.205374684929686`*^26"}], ",", 
   RowBox[{"-", "5.205374684929647`*^26"}], ",", 
   RowBox[{"-", "5.20537468492959`*^26"}], ",", 
   RowBox[{"-", "5.205374684929517`*^26"}]}], "}"}]], "Output",
 CellChangeTimes->{3.805636802634412*^9, 3.805637165150457*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cWP", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Re", "[", 
     RowBox[{
      FractionBox["2", "\[Pi]"], "*", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"NpPlus2", "[", 
          RowBox[{"x", ",", "1"}], "]"}], "*", 
         FractionBox[
          RowBox[{"ChebyshevT", "[", 
           RowBox[{"n", ",", "x"}], "]"}], 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox["x", "2"]}]]]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "5"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8056363416322947`*^9, 3.8056363679739494`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "5.205374684928586`*^26"}], ",", 
   RowBox[{"-", "5.205374684928581`*^26"}], ",", 
   RowBox[{"-", "5.205374684928556`*^26"}], ",", 
   RowBox[{"-", "5.205374684928514`*^26"}], ",", 
   RowBox[{"-", "5.2053746849284565`*^26"}], ",", 
   RowBox[{"-", "5.205374684928384`*^26"}]}], "}"}]], "Output",
 CellChangeTimes->{3.805636364603606*^9, 3.80563673361767*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2", "[", 
       RowBox[{"x", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"First", "[", "cWP", "]"}]}], "/", "2"}], "+", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"cWP", " ", ".", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ChebyshevT", "[", 
           RowBox[{
            RowBox[{"n", "-", "1"}], ",", "x"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", 
            RowBox[{"Length", "[", "cWP", "]"}]}], "}"}]}], "]"}]}], 
       "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.805636761222743*^9, 3.805636771732381*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {-1.046313906662475*^27, 6.39619890995051*^26}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8056367815861716`*^9}]
}, Open  ]],

Cell["This is the one I\[CloseCurlyQuote]ve been working with:", "Text",
 CellChangeTimes->{{3.806068370466298*^9, 3.806068381271514*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Re", "[", 
     RowBox[{
      FractionBox["2", "\[Pi]"], "*", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"NpPlus2NP", "[", 
          RowBox[{"x", ",", "1"}], "]"}], "*", 
         FractionBox[
          RowBox[{"ChebyshevT", "[", 
           RowBox[{"n", ",", "x"}], "]"}], 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox["x", "2"]}]]]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"PrecisionGoal", "\[Rule]", "5"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "5"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8056296202176247`*^9, 3.8056297185581894`*^9}, {
   3.8056315300341067`*^9, 3.805631537420105*^9}, {3.8056317747561474`*^9, 
   3.8056317749087315`*^9}, {3.8056335147861614`*^9, 3.805633515465933*^9}, 
   3.8056337745246515`*^9, 3.805634286830059*^9, 3.8056344172193947`*^9, 
   3.8056376154794607`*^9, {3.8060647834993596`*^9, 3.80606478386805*^9}, 
   3.8060649611741805`*^9, {3.8060651360896096`*^9, 3.8060651362138977`*^9}, {
   3.8060660901795144`*^9, 3.806066093001547*^9}, {3.806067962982067*^9, 
   3.8060679671288786`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^2\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8056296813265085`*^9, 3.805629724643141*^9, 
  3.8056315384658566`*^9, 3.8056317756965265`*^9, 3.805633515900405*^9, 
  3.805634287911662*^9, 3.8056344179299946`*^9, 3.805637619108816*^9, 
  3.8060647894845066`*^9, 3.8060649617417974`*^9, 3.806065138421211*^9, 
  3.806066094401329*^9, 3.806067969123793*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8056296813265085`*^9, 3.805629724643141*^9, 
  3.8056315384658566`*^9, 3.8056317756965265`*^9, 3.805633515900405*^9, 
  3.805634287911662*^9, 3.8056344179299946`*^9, 3.805637619108816*^9, 
  3.8060647894845066`*^9, 3.8060649617417974`*^9, 3.806065138421211*^9, 
  3.806066094401329*^9, 3.806067969175743*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8056296813265085`*^9, 3.805629724643141*^9, 
  3.8056315384658566`*^9, 3.8056317756965265`*^9, 3.805633515900405*^9, 
  3.805634287911662*^9, 3.8056344179299946`*^9, 3.805637619108816*^9, 
  3.8060647894845066`*^9, 3.8060649617417974`*^9, 3.806065138421211*^9, 
  3.806066094401329*^9, 3.806067969195725*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: inumr\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8056296813265085`*^9, 3.805629724643141*^9, 
  3.8056315384658566`*^9, 3.8056317756965265`*^9, 3.805633515900405*^9, 
  3.805634287911662*^9, 3.8056344179299946`*^9, 3.805637619108816*^9, 
  3.8060647894845066`*^9, 3.8060649617417974`*^9, 3.806065138421211*^9, 
  3.806066094401329*^9, 3.8060679692506733`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.4832902589281385`"}], ",", 
   RowBox[{"-", "0.2556905775177676`"}], ",", "0.1653333350389714`", ",", 
   "0.3324886913980912`", ",", "0.15614803960522897`", ",", 
   RowBox[{"-", "0.06788079608753599`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.805629681545826*^9, 3.805629912137344*^9, 
  3.8056317167493114`*^9, 3.8056319931613016`*^9, 3.805633623432482*^9, 
  3.8056344078753586`*^9, 3.805634770480908*^9, 3.8056377434792595`*^9, 
  3.806064907877405*^9, 3.8060651190352144`*^9, 3.8060654650406513`*^9, 
  3.806066258341919*^9, 3.8060680482017403`*^9}]
}, Open  ]],

Cell["\<\
For the sake of n=5, I decreased PrecisionGoal from its default to 5 for all \
of them. Here\[CloseCurlyQuote]s how the changes play out:\
\>", "Text",
 CellChangeTimes->{{3.8060681323002787`*^9, 3.8060681707796087`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.4832902589281385`"}], ",", 
   RowBox[{"-", "0.2556905775177676`"}], ",", "0.1653333350389714`", ",", 
   "0.3324886913980912`", ",", "0.15614803960522897`", ",", 
   RowBox[{"-", "0.06788079608753599`"}]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.48329025130924647`"}], ",", 
   RowBox[{"-", "0.2556905683050831`"}], ",", "0.16533333649625762`", ",", 
   "0.3324887012804893`", ",", "0.1561480410420177`", ",", 
   "60933.49468438459`"}], "}"}]], "Input"],

Cell["\<\
It might be better to adjust the value for each n, but I\[CloseCurlyQuote]m \
going to do the lazy way first and see if that\[CloseCurlyQuote]s acceptable \
for our purposes\
\>", "Text",
 CellChangeTimes->{{3.806068175620959*^9, 3.806068202862899*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Re", "[", 
  RowBox[{
   FractionBox["2", "\[Pi]"], "*", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NpPlus2NP", "[", 
       RowBox[{"x", ",", "1"}], "]"}], "*", 
      FractionBox[
       RowBox[{"ChebyshevT", "[", 
        RowBox[{"7", ",", "x"}], "]"}], 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["x", "2"]}]]]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"Exclusions", "\[Rule]", 
      RowBox[{"{", "1", "}"}]}], ",", 
     RowBox[{"PrecisionGoal", "\[Rule]", "2"}], ",", 
     RowBox[{"MaxRecursion", "\[Rule]", "15"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.806066271703246*^9, 3.806066290961011*^9}, {
   3.8060663415388894`*^9, 3.806066362790299*^9}, {3.8060668291400647`*^9, 
   3.8060668358323383`*^9}, 3.806066935644139*^9, 3.806067244343233*^9, {
   3.806067360903561*^9, 3.806067362400736*^9}, 3.8060675350314655`*^9, {
   3.806067580114283*^9, 3.8060676264310646`*^9}, 3.806067752340111*^9, {
   3.8060678829395833`*^9, 3.8060679238405647`*^9}, 3.8060686164965334`*^9, 
   3.806068656048711*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^2\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.8060662935280285`*^9, {3.806066342380078*^9, 3.806066363196881*^9}, 
   3.806066837628914*^9, 3.8060669364356995`*^9, 3.806067247306696*^9, 
   3.806067364584268*^9, 3.806067535726266*^9, {3.8060675805751157`*^9, 
   3.806067626894945*^9}, 3.8060677528351088`*^9, {3.8060678834580097`*^9, 
   3.806067924465291*^9}, 3.806068616957205*^9, 3.8060686566845317`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.8060662935280285`*^9, {3.806066342380078*^9, 3.806066363196881*^9}, 
   3.806066837628914*^9, 3.8060669364356995`*^9, 3.806067247306696*^9, 
   3.806067364584268*^9, 3.806067535726266*^9, {3.8060675805751157`*^9, 
   3.806067626894945*^9}, 3.8060677528351088`*^9, {3.8060678834580097`*^9, 
   3.806067924465291*^9}, 3.806068616957205*^9, 3.806068656734488*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.8060662935280285`*^9, {3.806066342380078*^9, 3.806066363196881*^9}, 
   3.806066837628914*^9, 3.8060669364356995`*^9, 3.806067247306696*^9, 
   3.806067364584268*^9, 3.806067535726266*^9, {3.8060675805751157`*^9, 
   3.806067626894945*^9}, 3.8060677528351088`*^9, {3.8060678834580097`*^9, 
   3.806067924465291*^9}, 3.806068616957205*^9, 3.80606865677945*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: inumr\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.8060662935280285`*^9, {3.806066342380078*^9, 3.806066363196881*^9}, 
   3.806066837628914*^9, 3.8060669364356995`*^9, 3.806067247306696*^9, 
   3.806067364584268*^9, 3.806067535726266*^9, {3.8060675805751157`*^9, 
   3.806067626894945*^9}, 3.8060677528351088`*^9, {3.8060678834580097`*^9, 
   3.806067924465291*^9}, 3.806068616957205*^9, 3.80606865678344*^9}],

Cell[BoxData[
 RowBox[{"-", "0.004806814117996129`"}]], "Output",
 CellChangeTimes->{
  3.8060663055625877`*^9, 3.8060663524591208`*^9, 3.8060664499271126`*^9, 
   3.8060669240624037`*^9, 3.8060671785669785`*^9, 3.8060673344614377`*^9, 
   3.806067487837947*^9, 3.806067547132146*^9, {3.8060675932089343`*^9, 
   3.806067615976755*^9}, 3.8060677471791515`*^9, {3.8060678777581234`*^9, 
   3.806067938421833*^9}, 3.8060686283612533`*^9, 3.8060686693723087`*^9}]
}, Open  ]],

Cell["\<\
I made it go even lower so that I could have more values of n\
\>", "Text",
 CellChangeTimes->{{3.806069037531771*^9, 3.80606905596677*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Re", "[", 
     RowBox[{
      FractionBox["2", "\[Pi]"], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"NpPlus2NP", "[", 
            RowBox[{"x", ",", "1"}], "]"}], "*", 
           FractionBox[
            RowBox[{"ChebyshevT", "[", 
             RowBox[{"n", ",", "x"}], "]"}], 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["x", "2"]}]]]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
          RowBox[{"PrecisionGoal", "\[Rule]", "2"}]}], "]"}], "-", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"NpPlus2NP", "[", 
            RowBox[{
             RowBox[{"-", "x"}], ",", "1"}], "]"}], "*", 
           FractionBox[
            RowBox[{"ChebyshevT", "[", 
             RowBox[{"n", ",", "x"}], "]"}], 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["x", "2"]}]]]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"PrecisionGoal", "\[Rule]", "2"}]}], "]"}]}], ")"}]}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.806068216130885*^9, 3.806068216757413*^9}, 
   3.8060686790311227`*^9, 3.806068832665014*^9, {3.8061491154307623`*^9, 
   3.806149148225928*^9}, 3.806149585744479*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^2\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8060682175416374`*^9, 3.806068679636414*^9, 
  3.806068833096974*^9, 3.8061491527356653`*^9, 3.806149586582419*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8060682175416374`*^9, 3.806068679636414*^9, 
  3.806068833096974*^9, 3.8061491527356653`*^9, 3.8061495866193843`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8060682175416374`*^9, 3.806068679636414*^9, 
  3.806068833096974*^9, 3.8061491527356653`*^9, 3.8061495866593485`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: inumr\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8060682175416374`*^9, 3.806068679636414*^9, 
  3.806068833096974*^9, 3.8061491527356653`*^9, 3.8061495866963105`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", 
   RowBox[{"-", "0.5113818264523827`"}], ",", "0.`", ",", 
   "0.6649768189746776`", ",", "1.766974823035287`*^-17", ",", 
   RowBox[{"-", "0.13576203454824745`"}], ",", 
   RowBox[{"-", "1.766974823035287`*^-17"}], ",", 
   RowBox[{"-", "0.009613628235992258`"}], ",", 
   RowBox[{"-", "3.533949646070574`*^-17"}], ",", 
   RowBox[{"-", "0.004004357879600992`"}], ",", 
   RowBox[{"-", "8.834874115176436`*^-18"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8060684657027054`*^9, 3.806068751844181*^9, 
  3.8060690889642105`*^9, 3.8061493110339837`*^9, 3.806149744166605*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "[", 
   RowBox[{"[", 
    RowBox[{"Length", "[", "c", "]"}], "]"}], "]"}], "/", "129746"}]], "Input",
 CellChangeTimes->{{3.805634787146804*^9, 3.805634846333376*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.9999976547772035`"}]], "Output",
 CellChangeTimes->{
  3.8056347971930523`*^9, {3.8056348316143*^9, 3.8056348466000853`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", "c", "]"}]], "Input",
 CellChangeTimes->{{3.8056349231802835`*^9, 3.8056349249330173`*^9}}],

Cell[BoxData[
 RowBox[{"-", "129745.69571672304`"}]], "Output",
 CellChangeTimes->{3.8056349255880575`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    RowBox[{"First", "[", "c", "]"}]}], "/", "2"}], "+", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"c", " ", ".", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ChebyshevT", "[", 
       RowBox[{
        RowBox[{"n", "-", "1"}], ",", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"Length", "[", "c", "]"}]}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.24164512565462323`"}], "-", 
  RowBox[{"0.2556905683050831`", " ", "x"}], "+", 
  RowBox[{"0.16533333649625762`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["x", "2"]}]}], ")"}]}], "+", 
  RowBox[{"0.3324887012804893`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", "x"}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["x", "3"]}]}], ")"}]}], "+", 
  RowBox[{"0.1561480410420177`", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"8", " ", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["x", "4"]}]}], ")"}]}], "-", 
  RowBox[{"129745.62726686876`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"5", " ", "x"}], "-", 
     RowBox[{"20", " ", 
      SuperscriptBox["x", "3"]}], "+", 
     RowBox[{"16", " ", 
      SuperscriptBox["x", "5"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.805633705182428*^9, 3.8056338200627103`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    RowBox[{"First", "[", "c", "]"}]}], "/", "2"}], "+", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"c", " ", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "5"}], "]"}], "]"}], ".", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ChebyshevT", "[", 
       RowBox[{
        RowBox[{"n", "-", "1"}], ",", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{
         RowBox[{"Length", "[", "c", "]"}], "-", "1"}]}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8056338310324435`*^9, 3.805633831368164*^9}, {
  3.8056339527584343`*^9, 3.805633956897428*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.24164512565462323`"}], "-", 
  RowBox[{"0.2556905683050831`", " ", "x"}], "+", 
  RowBox[{"0.16533333649625762`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["x", "2"]}]}], ")"}]}], "+", 
  RowBox[{"0.3324887012804893`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", "x"}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["x", "3"]}]}], ")"}]}], "+", 
  RowBox[{"0.1561480410420177`", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"8", " ", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["x", "4"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.8056338321722336`*^9, 3.805633957588229*^9}]
}, Open  ]],

Cell["Agnostic of \[OpenCurlyDoubleQuote]good\[CloseCurlyDoubleQuote] parts \
of c:", "Text",
 CellChangeTimes->{{3.8056346252500343`*^9, 3.805634634050869*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2NP", "[", 
       RowBox[{"x", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"First", "[", "c", "]"}]}], "/", "2"}], "+", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"c", " ", ".", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ChebyshevT", "[", 
           RowBox[{
            RowBox[{"n", "-", "1"}], ",", "x"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", 
            RowBox[{"Length", "[", "c", "]"}]}], "}"}]}], "]"}]}], "]"}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8056300449734135`*^9, 3.80563010546042*^9}, {
   3.805631744175307*^9, 3.805631744251979*^9}, {3.8056318032369747`*^9, 
   3.8056318110457315`*^9}, {3.8056331412945213`*^9, 3.8056331416069193`*^9}, 
   3.8056336546526546`*^9, {3.8061494650521684`*^9, 3.8061494707651997`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
z8v75E5zSdQQjn86QDxl9XffOPEB+B8efcjC
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwV1nk8VN8bB3BLllDWsiRlSVLRglA8ShSFkKXFTpGlhAqVsoXI3iKJ7Cl7
m+ToZ01k32fmziBJZm4plPV3vn/N6/26d2buOee5n+eRdb5o4cbBxsYmys7G
9t+nsdtEZ+13K11urbNWUkd8a74VWzsTkmowk7awobzcDK3n771XIXkYRDnj
ObzKHZCKlljuE8mTQJWxvmVQfhFpd+wtTZJ0BTgAHgrlIaj2cZ16nKQ/+AuK
RVLK4lHY7bvXYiTDYXlUXWu49Cly9ScloyVTwEBir/XXFyWIN8Uo6+evHPCd
EPvZcrUWvenYc+SITAkIXzM3knJuRrZhlKG6u5VQFSv7Q5+7A10s89v58M87
WNRgaFdL96DphL5mdnYEOZymibcH+lHzx0bUfuB/oHYnrkry0zDyCDRac2qq
Ht4pvfV2v0Ogj6v3rLzwboI79hulIy8zUF52/bLUlhZgvXUflN4zivTWf3hm
WdwKrpn9rj1oDO1sorxtVG6HlkdJesa7x1GPniWrkNUBQkXRzCeF35AXn2dX
764uYE7YdRz6OYE+D9h8WHuvG2r0hAKENSaRpaEtY2ysB0KlX2VRbH4gjcy7
NpkKfUD1zBcTN55C9OXkHveQfsiuW/uJezcTCUx13L0a3g8BsgkMBTUm0hxc
ox8Z3Q/hPv3SB/cxUULFnbLs5H64ptk176fDRHruwfdo+f1gfUXDtM6IibI6
nY+e7OiHX8Fzm3mdmcg5Z3c1yA7AkIA6UymRib4atWevrxsAvzgdxfffmUjh
7tb4xOYB6MnheP9wiolcW0OCBL4MwHiVr6A/yUQjprvMOQYH4KHv0Vn5GSai
WSYuM1kDEH3gXaU7GwsN2FmeapAahNo7m6oj1rNQi2//Wv/Lg1CZkLpP4CAL
ra5QnWddHYR0lYsGWfosdPTPna8eNwZhkJuHX82QhZquaFY7RA1CU+X1aotj
LFQf/MjjWMYgnLzTV+ZvxUIfIs7Uy7UMgsb1c2XGHixU+ogI7JQdAk3KHxed
eBby2iY9tGfrEDxwlzt6M5GFlN7ZaqfsGILeLZzT1cks9HSgc9563xCcSeW+
v/chC90Trw+mHB+Cm1QNSe4sFvJOLbjx7eoQyCqWUaGchZQTfW8vtQ2BLlL8
taqbhcY3FzPsu4cggD9jy3IPCz0rnTxYOzAEmS1HJGf6WEiqw4UjbHQIgrsv
6FCG8HoFrcN4/w3Bb7sQv/gRFpqI1Y4QVRiG3wptntG/WCg3ijN6W9AwpL0c
0m5ZQyKRsaibKiHDIFYexGYvSKJbsNZ/b/gwhH4dbSGFSHR6VsJB594wyEZd
914jRiJBVxV182fDINH3+usuKRIFwinGtZZhuKq1OVRCkUQms8VazVIUMLc+
5uNxgERV5mqqbZsocEoqJvKDDomUXr5T6FKgQMHyuqeCQCIO13pBigoFXq2J
7Xh5kERvOge/kocosI2psbvLkESyL1cliXvi64VcrVUnSDTjcnry3HsKuD+J
uMXnQqIroguiA7UUEE25FqHuSqLZ/z3WMWqkQIjguh32btiy1ITtnRSIfF5k
V3CeRH8Jh30/xynQl7BsstmLRPNn3MIDRahgtXnLwQx/EgXxcxdPilNBWdfW
NDuARAtVef1nNlLBuLd5PvcKiRYlJ5R1laiQtKV1V841Ei31X+jk0KWCDs1w
Tfh1ErGdvCQT60EFLYnh851heD85hY8u+VBhx0KCTWk4idgrynx9/KlgNKU9
FhuB1y/yu/5ECBV+OlK7de+QiLMjwHNdKhWWhSJ4I2NIxH08+G1GLRV+W6wv
zEogUeTChhHBRio0Vn2wOZ2IrxdV89/+TAWFkj1ZQkkk4uFbtnfpo8LlC2yr
riSTiLf5FpfSFBXmpBO5FO6TiP9wpEWZOA02TSpTBB6T6AC6KNwoTYNVK+x3
UrF9tE91DMnS4M+GeEnpdBJ17dphumoHDeIDz83IPSFR2sYuIxs9GuxnM4kQ
f0qi1ofveb0MaNDXs94zHntZNLfpljENMqLa93FlksiJ75rB85M0CFgsipjE
VprbeHDJnQYFa71+Pn6G6+syD5uIDw22SvDwc2aTKJb5s0bRjwZxWR387tjk
aN2BEzdowMeXiLbnkOh1h4dmdiINmrm0mY9ySTRxzHLuzX0aBMm/1/iJLdV0
4HXrYxpQ95a5Hc4j0Y0PgmqzuTSw9snyG8c+/PyVqlEVDY6JbzQRLsD1s+Up
yw7RoLW/HVljF2RGvbxcT4OXA4fF07D5H5zZnv6FBh4mMv5ShXi/RAwmS7tp
IO9gE2iD7ROnUtgwQANB5oJzEnZXGPtWcoQGot93j7I/J9GqlcmvnBM0UOp6
GKiBrRHUkyPBpIHnzvV/3LEfXcqXOzSHf8+JLbUJu+VHAsN6kQYGSfrvf2Mv
ngvK9GQnYGHcqGFjEYkc7UxkUvkJ4KOZhHtiJw1oUAuFCHB4I6cVj11vuTm9
Zh0BZnIenaXYs19Wn+mWwt9fETDpwN5q/FtyYhMBzibzRUxs2wbKwKICAX7y
G1m8L0gUo9f4QFiZgFVvnETlsKvfl1grqhLAsK3coIXN0ni0br8aAW0B7Dym
2JvLQ3vMtAiIuq/e64htsdMr2VWXgC4HnUhf7PACK4tAfQIuJ3FJ3cJ+JQ/C
944SoM8fnBCLPZ6h1PHMhAC5upjv97ElpETi31gQINouu+UptnHqgkmrDQG7
HHfq52JfF/oqwDhLQEVdmn4htvJQuR7FiYAbd0XlirAHs2/5958j4DPf8Nxz
7Chv04IuTwLUpon6AmyNfdKUtksE2AkIR+dgj7FNCn4KIIBL1+5wBnZyyxv9
+iACFiMqZlOxD6VEXEUhBOgscWTexf5pZ1lUFU4ApU9bLwQ7Y6ss8SqagI2O
xv2XsE1+sUTK7uH1ssm6/bcfi1XVhi+SCQjSKv5ugv08PCYo/yEB6/MZrv/t
p62pbfGzJwTYrzzv+2+/uSUUR548I6BYZF6XD9ul6KNRygsCjql+n+7C5yUS
EH8jvoyAL2c9dCuxa3XtymJeY8ep3krGlu76K3G7loBUV7PxY9gtjxuPX28g
4Bp7DN8W7EC3lFtXW/DzJrQqLOL66vurOuHdQ8D75B37c7DD/7e0wWMQ10f3
9n0B2HtjP5u50gjQSJtVOoydsOn8m9MTBIRdqWAO43o3NsyIPLJIwFGj3fPT
+H1Z5NGwy2KjQ+jE9LMK7J4p6TkZTjpkqwkcvIwd+npSWYqXDmyMNXbf80lE
M4pMEhKhQ87HzyIIv5+vVLx33BOjA/Nws+tF7FjRk4384nRYdbSkaCP2fqrs
PLc0HTjVeSX88fv+8NIHp6Ut+H6nYA9enA8XrXIWgpTo4E44OhXg/DDUvpv6
V5kONu4tJobYM5ynPv1WpQPF5S/ndZw/Fg/+7JrUosM3Z++xLzifBGq2s/Wb
0EHlc4inCM475vHNlTEn6OBR3JIZifPwy7CYu64lHd5KKHj/xXkZ/2+pPdeW
Dg3+rS09afh81Due+rvQwezg7YeXHuJ6fuEPIoF0yHNyv6yG8/iftsfvhmA6
qGmlioTivB76ZJcfeJMOcW9XG7XhPH/8zVCQEUaHXq0n187ivJeRlyRK7tFB
LAEYdnEkUkj7cNMkhw5rrwW3T0WSiGtb+R72fPz8yTrtotjjb/LGKwvpULc1
31UT95f83nhT6RI6zHCZngjC/UhZ2Fnmxzs61DizKTNCSLQrirsmqp0O9TVb
6dq4n+lcMVuqm6dDbo/qNhncL2cvTAQbLdEhyXlXHP85EpU63J7/skKHfear
+mZxv5UzqpgbXMUAZC+1vskZ9xtp8WlyLQN8PMrNTO3x+X+kjW+QZ4DC6qS8
uZMk8lrj0+F3DN/vHDL4So9Eihw8Zv9MGMA8ebnHAc8DxOzTtpsnGBA6L1bJ
o4vPh97ZEm3FgLO63rLm+0mkWaHe8NSBAVbtdytb1HG+nlp699mPAZpVix9s
lUmUnhObLZ/OgG8RcIkuTCIH/b0HiAwG8O08nq6A5xm5kcGetCwGeMkZmJ1b
i/N+01ZukXwGDP5ZZzzCR6LKtI/ubOUM6DX7nVzNiftbwuxOahMDeGY0Qub/
sNDSdce3938zIDLRYfpxLwvVbuAxt5hlgOUXToFEPK+FV738vuYfAwyVa16G
dbIQ3995qYhlBphy50c7tbHQer/UG36rR+CGT2nOSj0LqXi0HDqxaQRcd1z3
a6hgIXsrtbbVx0agQ2CWchXPl44bTDLfmoyAfoaK+LY4FnJiuPmdPzEC10LU
pvtjWMjV+4Fkg9UIKM2wYlQiWcgjYt7tluMI3AyVMELXWcj/Ve3ybMAIOFU9
572I59eYdSa7xjJHoGKbshwvno9f9bol18yOwFRxfusWPI8nsMvvhn8jkNJ0
lOE7zkQXdtK/oIURQEndk+9HmUgm4jTfR7ZROJLOSzWiMVGkmtntOr5RMCIK
9Uy6mcg6WfNis8wolGpKbZiuZqK5E/zHugxHYUGtvL/yHhNptZZyjN8fhaII
wy6FHUy02eDcTPLhMVi2CNjdpD2F1NXUEyvHx6CqIfLzyr4fiJiO+5Qd8RXa
pU8zuzdMoqm95hGSe8Yhpk22KLVxAin+2DnJ3j0Oe8N4BtoufEP1CgFdl25/
Az37WbHm7q8ovqfXxUJhAnYs26v16owh0rI2kaN+Avq+Xdi+M20ElVut09fy
/Q6vb14I0qiho+y2sCcjIpNQrWhx5NMYFc01nQ0W+d8kuO+rWE6bGET0RDQj
5PMD+qUfeaT/7kWznfslQ9dOwWEfro/xBl3oUopcbWD1FIQRbq1ib1uReJuc
0Jg9E/Ki85h5FQ3IsvfFovQyE3R4d7xKu1GDph2yvCjPWXBW1unzle4yNPOA
S93pJQtC23lCLuaXob/tHktfS1igOqsXExpchlZgzz2ykgXCCUzxv/JlSGBz
XQkHYkFNuspWhSulaAt9bFqpmwW5l56y74FiZOuoFBiwwALC1+7GLcFCdOZh
7MH5JRac05feeLWmANl3/FwdwkbCj8PvSwu9C5Cb3ru0KC4SVNOLcupa89Hl
zcbVjwVJSCgVsu+My0OxdM+Vj/IkeH8UC4rekIOQY0nE2uMkWGqblx/4koGq
2r2O0UxJeGA8Vi6zPQO91lUWLjYngas26kFh1BP0Qjo33cSGhHXfbIerDdJR
2kBaRawzCQf/7VvNbHqEAk5EMvgCSWjU1zkiykxB2/XsdHjySEhKE2sUCrmD
FEukOPsLSPB6qrXQ6xaJ5GQGmvOKSAgbtonYYBqBJBYtThqWkXB+LjJ3p3wY
4n571DOimoSVT+FHdqMbiKGq9oizm4QWqZuy4XcvIErGL/vuXhLSthsQd6PP
oYE1JQrZAyQsdO+9MBfnjL782FZ6iEaCTeWntYonrVB1/qam29/x/7dtQp9B
H96up8aaT5EwGBroonnAHCoi0ixkSRKuPhPns/9sC89d1tFq/5AQdFixaY7u
ArldXdkJcyQM/JGnZ6ach8yDCR6O8yTUlVNojw56QnqpiequJRJSYimmlG8+
8GAT/8zKCgmaq5jDpfq+8H/SBUpd
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {-0.9909172326134527, 0.8140385038144307}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.805630068650678*^9, 3.8056301098461895`*^9}, 
   3.805631761609497*^9, 3.805632866264369*^9, 3.805633168381928*^9, 
   3.805633672313203*^9, 3.8060688004992056`*^9, 3.8060691363848486`*^9, 
   3.8061494078118844`*^9, 3.8061495321474333`*^9, 3.8061497824385643`*^9}]
}, Open  ]],

Cell["Specialized for testing:", "Text",
 CellChangeTimes->{{3.805634639904459*^9, 3.8056346435071173`*^9}}],

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2NP", "[", 
       RowBox[{"x", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"First", "[", "c", "]"}]}], "/", "2"}], "+", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"c", " ", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "5"}], "]"}], "]"}], ".", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ChebyshevT", "[", 
           RowBox[{
            RowBox[{"n", "-", "1"}], ",", "x"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", 
            RowBox[{
             RowBox[{"Length", "[", "c", "]"}], "-", "1"}]}], "}"}]}], 
         "]"}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.8056339799704485`*^9, {3.8060685383048067`*^9, 3.8060685463561726`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c2", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Re", "[", 
     RowBox[{
      FractionBox["2", "\[Pi]"], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"NpPlus2NP", "[", 
            RowBox[{"x", ",", "2"}], "]"}], "*", 
           FractionBox[
            RowBox[{"ChebyshevT", "[", 
             RowBox[{"n", ",", "x"}], "]"}], 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["x", "2"]}]]]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
          RowBox[{"PrecisionGoal", "\[Rule]", "1"}]}], "]"}], "+", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"NpPlus2NP", "[", 
            RowBox[{
             RowBox[{"-", "x"}], ",", "2"}], "]"}], "*", 
           FractionBox[
            RowBox[{"ChebyshevT", "[", 
             RowBox[{"n", ",", "x"}], "]"}], 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["x", "2"]}]]]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"PrecisionGoal", "\[Rule]", "1"}]}], "]"}]}], ")"}]}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8056340982837934`*^9, 3.8056341084562206`*^9}, {
   3.8060692238128967`*^9, 3.806069232147519*^9}, 3.80606955414601*^9, {
   3.806070934894853*^9, 3.8060709394933343`*^9}, {3.8061485444763546`*^9, 
   3.8061485967862396`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(2\\\\ \
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^2\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8056341098303485`*^9, 3.8060692336735463`*^9, 
  3.8060695547568936`*^9, 3.8060709402793207`*^9, 3.806148601197542*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(2\\\\ \
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8056341098303485`*^9, 3.8060692336735463`*^9, 
  3.8060695547568936`*^9, 3.8060709402793207`*^9, 3.8061486012345057`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(2\\\\ \
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8056341098303485`*^9, 3.8060692336735463`*^9, 
  3.8060695547568936`*^9, 3.8060709402793207`*^9, 3.8061486012744684`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: inumr\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8056341098303485`*^9, 3.8060692336735463`*^9, 
  3.8060695547568936`*^9, 3.8060709402793207`*^9, 3.80614860131643*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.0010330018042213`", ",", 
   RowBox[{"-", "3.533949646070574`*^-17"}], ",", 
   RowBox[{"-", "2.789520486976261`"}], ",", 
   RowBox[{"-", "2.8271597168564594`*^-16"}], ",", "1.6440736139543701`", ",", 
   RowBox[{"-", "2.8271597168564594`*^-16"}], ",", 
   RowBox[{"-", "0.3441677180952863`"}], ",", "0.`", ",", 
   "0.0009269099480060622`", ",", "7.067899292141149`*^-17", ",", 
   RowBox[{"-", "0.005613798735454943`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.805634166175084*^9, 3.806069462227523*^9, 
  3.806070712153998*^9, 3.806071424467177*^9, 3.8061487753107376`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2NP", "[", 
       RowBox[{"x", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"First", "[", "c2", "]"}]}], "/", "2"}], "+", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"c2", ".", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ChebyshevT", "[", 
           RowBox[{
            RowBox[{"n", "-", "1"}], ",", "x"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", 
            RowBox[{"Length", "[", "c2", "]"}]}], "}"}]}], "]"}]}], "]"}]}]}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.805634223634574*^9, 3.8056342499204617`*^9}, {
  3.806070775225816*^9, 3.8060707991523685`*^9}, {3.806070841775489*^9, 
  3.806070889810663*^9}, {3.806071452412217*^9, 3.806071463716189*^9}, {
  3.806148842412536*^9, 3.8061488454946547`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
BvIaN5ltPt+hjOb48N3vb6CRrOoc+n4SDrYVcUwmjIFh2gYv2V8jIHXMaf7h
0XFY4s9DJ3R7QE1VLbZ0chyqhJddZiZaYHj2fmtmyASMyQ6rJNwoAKaKcQh1
3yRgrRMiA8nFqDV7XD5VdRIU04Qxdv4SlE31aZHaPwlXEl7cHvUvQXb/nvIp
aE7Ce68yyc9nX6PuD8xYdZ1JOKNH3+UoXoYq7cOemlhPgvJQrMelqAoU/gCV
3w+ahDlN88qs/QjJTysR7N2TMJCMM3oG3yN+3o6sKtok/OilpT8SbEK/ZK/Z
e/VNwpPx8Is7jjahWtuSPvrXSViUbaD05Dch6y715g76JFB0iqvVvJtR9Ft4
nro6CcdU9pZt4m5F8/eMbQ/umIJD/DnGBznb0ODzWeqvXVOgPjAvWLa3DdXX
PaS9VJ6CzyO0h2vs2lD0Mk1fSm0KfnV9GtxR3YYUrlpr8GBTUFfJdcLHox2d
MXeg0MymQIInW0Cu9xNqlPXquhY4Bc+XDYRsaz+juzmVln/vTkFXpKtkcvdn
9N8OtuF7oVPw8pB+YcPkZ1SnHDn9NHIKONOnzIb5O9G7Qxlc7Y+m4AiXa9kB
y05UbtSurpg/BX9kF297TneifH+5J6NdU0CVfvJ5LVc3cv7nIu1GmwKuIGie
F+5GCkFFOQu9UyBIuavRIdeNsu9plAp8nQJ2HbFUvePdKDPOuF1ragoazpfq
OIR3o5TcW/+SlqfAcfttQ/F1X9CDLzSH07J00Bkl3hesfEFRt+/LdsrToWxw
TxY7Pw1FKBybMFSkw2Whorr/RGkoxL/UyWA3HazPSZY+UKehm7IPnXUP0EHI
tzfS9AoNXbxudFVbnw4xr7p8I3AaAuGPfjuu02FIvfhlXlYP0nwXpJHnTYdH
2hm674t70KFLh/5u96UDq3ezekdND1Krzrsld5sOGr9/8BbQetDOC2F3pMLo
8Fd7MvsxVy/aUnosVCSFDicWfeLEzvUilkltLEcjHVayNE99X9OHfueEuJY3
0cFp5NJ8/sY+tLqsd9y1lbzP6/7bRLwP8T+n/aV9ogOt+BH/pb19SGGOuJjX
T4fNn+rKE637kF38Zm0jFh128ghFb83rQxfpOIV7lg6XbATSY0v60BXN9F9v
5+hwvVVc4WdVH/If35G3bYkO61Ykn3l86kOJqpjwHy4G6IhNXA+Y7UOfv7gQ
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
ToMOs0SZtdj/ACNnVR4=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
rUmN+v7wUFZ07t8/7G677E++V+B/6DaqTQ==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {-0.42031210939772956`, 6.284819028611478}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8056342744932632`*^9, 3.8060694920278845`*^9, 
  3.8060708213084707`*^9, 3.8060709119523587`*^9, 3.806071517290093*^9, 
  3.806148871561116*^9}]
}, Open  ]],

Cell["Pretend it goes to -1 (mirror image)", "Text",
 CellChangeTimes->{{3.8060833124579086`*^9, 3.8060833246755486`*^9}, {
  3.806083995931616*^9, 3.8060839994135523`*^9}}],

Cell["\<\
Okay, there\[CloseCurlyQuote]s also shifted Chebyshev polynomials that go \
from [0,1], so I\[CloseCurlyQuote]m going to try those. \
Don\[CloseCurlyQuote]t think that will remove the explosion problem, but it \
seems more honest.\
\>", "Text",
 CellChangeTimes->{{3.8056351672518735`*^9, 3.8056352068085384`*^9}, {
  3.8060730914999104`*^9, 3.8060730932999477`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"shiftC", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Re", "[", 
     RowBox[{
      FractionBox["2", "\[Pi]"], "*", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"NpPlus2NP", "[", 
          RowBox[{"x", ",", "2"}], "]"}], "*", 
         FractionBox[
          RowBox[{"ChebyshevT", "[", 
           RowBox[{"n", ",", 
            RowBox[{
             RowBox[{"2", "x"}], "-", "1"}]}], "]"}], 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", "x"}], "-", "1"}], ")"}], "2"]}]]]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"PrecisionGoal", "\[Rule]", "2"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.805635229308352*^9, 3.805635257770465*^9}, {
   3.806072770019538*^9, 3.8060727768521414`*^9}, 3.806072813182967*^9, 
   3.8060730474500785`*^9, {3.8060735994032235`*^9, 3.806073602533222*^9}, 
   3.8060751349567566`*^9, {3.806076216493305*^9, 3.806076217910387*^9}, {
   3.806083440943286*^9, 3.8060834437121105`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(2\\\\ \
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^2\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8060727796849475`*^9, 3.806072817684622*^9, 
  3.8060730478859587`*^9, 3.806073603013645*^9, 3.806075135896325*^9, 
  3.8060834444068265`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(2\\\\ \
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8060727796849475`*^9, 3.806072817684622*^9, 
  3.8060730478859587`*^9, 3.806073603013645*^9, 3.806075135896325*^9, 
  3.8060834444647737`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(2\\\\ \
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8060727796849475`*^9, 3.806072817684622*^9, 
  3.8060730478859587`*^9, 3.806073603013645*^9, 3.806075135896325*^9, 
  3.8060834444887514`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: inumr\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8060727796849475`*^9, 3.806072817684622*^9, 
  3.8060730478859587`*^9, 3.806073603013645*^9, 3.806075135896325*^9, 
  3.8060834445377035`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.560565651459218`", ",", 
   RowBox[{"-", "1.871014846399803`"}], ",", "0.357463133833652`", ",", 
   "0.3347271613376606`", ",", 
   RowBox[{"-", "0.06098505110443107`"}], ",", 
   RowBox[{"-", "0.031447283414971716`"}], ",", 
   RowBox[{"-", "0.0038308678960085932`"}], ",", 
   RowBox[{"-", "0.0016351365987116694`"}], ",", 
   RowBox[{"-", "0.0011380414555130897`"}], ",", 
   RowBox[{"-", "0.0007022654754187359`"}], ",", 
   RowBox[{"-", "0.00045284079781521367`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.805635507802599*^9, 3.8060728091715345`*^9, 
  3.8060729086090775`*^9, 3.806073325235918*^9, 3.8060745859537277`*^9, 
  3.806076053653797*^9, 3.80608384025508*^9}]
}, Open  ]],

Cell["\<\
I tried to make these work for s=2, not knowing/being lazy about exactly how \
to find coefficients for the shifted versions may be hurting me here\
\>", "Text",
 CellChangeTimes->{{3.80606928498067*^9, 3.8060693097593775`*^9}, {
  3.8060754034609766`*^9, 3.8060754611710205`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    RowBox[{"First", "[", "shiftC", "]"}]}], "/", "2"}], "+", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"shiftC", " ", ".", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ChebyshevT", "[", 
       RowBox[{
        RowBox[{"n", "-", "1"}], ",", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"Length", "[", "shiftC", "]"}]}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8056355706309557`*^9, 3.805635578199688*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.24164512565462323`"}], "-", 
  RowBox[{"129745.53230536582`", " ", "x"}], "+", 
  RowBox[{"0.29040664319872395`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["x", "2"]}]}], ")"}]}], "-", 
  RowBox[{"129745.50743286646`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", "x"}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["x", "3"]}]}], ")"}]}], "-", 
  RowBox[{"129745.61884002128`", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"8", " ", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["x", "4"]}]}], ")"}]}], "-", 
  RowBox[{"129745.62512817646`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"5", " ", "x"}], "-", 
     RowBox[{"20", " ", 
      SuperscriptBox["x", "3"]}], "+", 
     RowBox[{"16", " ", 
      SuperscriptBox["x", "5"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.8056355725104437`*^9, 3.80563557875535*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"shiftC", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "/", "2"}], "+", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"shiftC", " ", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "*", 
    RowBox[{"ChebyshevT", "[", 
     RowBox[{"2", ",", "x"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8056355947671576`*^9, 3.8056356418903675`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.24164512565462323`"}], "+", 
  RowBox[{"0.29040664319872395`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["x", "2"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.8056356434177732`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2NP", "[", 
       RowBox[{"x", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"shiftC", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "/", "2"}], "+", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"shiftC", " ", ".", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ChebyshevT", "[", 
           RowBox[{
            RowBox[{"n", "-", "1"}], ",", 
            RowBox[{
             RowBox[{"2", "x"}], "-", "1"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", 
            RowBox[{"Length", "[", "shiftC", "]"}]}], "}"}]}], "]"}]}], 
       "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.805635551620561*^9, 3.8056356754907904`*^9, 3.806072831428666*^9, {
   3.8060728632157474`*^9, 3.8060729417129564`*^9}, {3.8060729986253*^9, 
   3.8060729999568286`*^9}, {3.8060748545477867`*^9, 
   3.8060748734393024`*^9}, {3.8060761712169795`*^9, 
   3.8060761740660553`*^9}, {3.806083973646331*^9, 3.8060839789193444`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
BvIaN5ltPt+hjOb48N3vb6CRrOoc+n4SDrYVcUwmjIFh2gYv2V8jIHXMaf7h
0XFY4s9DJ3R7QE1VLbZ0chyqhJddZiZaYHj2fmtmyASMyQ6rJNwoAKaKcQh1
3yRgrRMiA8nFqDV7XD5VdRIU04Qxdv4SlE31aZHaPwlXEl7cHvUvQXb/nvIp
aE7Ce68yyc9nX6PuD8xYdZ1JOKNH3+UoXoYq7cOemlhPgvJQrMelqAoU/gCV
3w+ahDlN88qs/QjJTysR7N2TMJCMM3oG3yN+3o6sKtok/OilpT8SbEK/ZK/Z
e/VNwpPx8Is7jjahWtuSPvrXSViUbaD05Dch6y715g76JFB0iqvVvJtR9Ft4
nro6CcdU9pZt4m5F8/eMbQ/umIJD/DnGBznb0ODzWeqvXVOgPjAvWLa3DdXX
PaS9VJ6CzyO0h2vs2lD0Mk1fSm0KfnV9GtxR3YYUrlpr8GBTUFfJdcLHox2d
MXeg0MymQIInW0Cu9xNqlPXquhY4Bc+XDYRsaz+juzmVln/vTkFXpKtkcvdn
9N8OtuF7oVPw8pB+YcPkZ1SnHDn9NHIKONOnzIb5O9G7Qxlc7Y+m4AiXa9kB
y05UbtSurpg/BX9kF297TneifH+5J6NdU0CVfvJ5LVc3cv7nIu1GmwKuIGie
F+5GCkFFOQu9UyBIuavRIdeNsu9plAp8nQJ2HbFUvePdKDPOuF1ragoazpfq
OIR3o5TcW/+SlqfAcfttQ/F1X9CDLzSH07J00Bkl3hesfEFRt+/LdsrToWxw
TxY7Pw1FKBybMFSkw2Whorr/RGkoxL/UyWA3HazPSZY+UKehm7IPnXUP0EHI
tzfS9AoNXbxudFVbnw4xr7p8I3AaAuGPfjuu02FIvfhlXlYP0nwXpJHnTYdH
2hm674t70KFLh/5u96UDq3ezekdND1Krzrsld5sOGr9/8BbQetDOC2F3pMLo
8Fd7MvsxVy/aUnosVCSFDicWfeLEzvUilkltLEcjHVayNE99X9OHfueEuJY3
0cFp5NJ8/sY+tLqsd9y1lbzP6/7bRLwP8T+n/aV9ogOt+BH/pb19SGGOuJjX
T4fNn+rKE637kF38Zm0jFh128ghFb83rQxfpOIV7lg6XbATSY0v60BXN9F9v
5+hwvVVc4WdVH/If35G3bYkO61Ykn3l86kOJqpjwHy4G6IhNXA+Y7UOfv7gQ
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
ToMOs0SZtdj/ACNnVR4=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {-0.420264714540105, 6.283185307179577}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.805635694408209*^9, 3.806072971239498*^9, 
  3.80607302186788*^9, 3.8060733977615376`*^9, 3.8060749315157785`*^9, 
  3.8060762050920906`*^9, 3.8060839681063538`*^9, 3.806084074595948*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c3", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Re", "[", 
     RowBox[{
      FractionBox["2", "\[Pi]"], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"NpPlus2NP", "[", 
            RowBox[{"x", ",", "3"}], "]"}], "*", 
           FractionBox[
            RowBox[{"ChebyshevT", "[", 
             RowBox[{"n", ",", "x"}], "]"}], 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["x", "2"]}]]]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
          RowBox[{"PrecisionGoal", "\[Rule]", "2"}]}], "]"}], "-", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"NpPlus2NP", "[", 
            RowBox[{
             RowBox[{"-", "x"}], ",", "3"}], "]"}], "*", 
           FractionBox[
            RowBox[{"ChebyshevT", "[", 
             RowBox[{"n", ",", "x"}], "]"}], 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["x", "2"]}]]]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"PrecisionGoal", "\[Rule]", "2"}]}], "]"}]}], ")"}]}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8060751546558743`*^9, 3.806075165480291*^9}, {
  3.8061499887523193`*^9, 3.8061500103157835`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(3\\\\ \
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^2\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8060794700413303`*^9, 3.8061500119974294`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(3\\\\ \
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8060794700413303`*^9, 3.8061500120393934`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(3\\\\ \
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8060794700413303`*^9, 3.8061500120783553`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: inumr\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8060794700413303`*^9, 3.8061500121193204`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "1.052961977117206`", ",", "0.`", ",", 
   RowBox[{"-", "2.4778027722673124`"}], ",", 
   RowBox[{"-", "3.533949646070574`*^-17"}], ",", "1.9251155293307889`", ",", 
   "0.`", ",", 
   RowBox[{"-", "0.5123509166654029`"}], ",", 
   RowBox[{"-", "2.1203697876423444`*^-16"}], ",", "0.026239105180323852`", 
   ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.80607969935728*^9, 3.8061501719985666`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2NP", "[", 
       RowBox[{"x", ",", "3"}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"First", "[", "c3", "]"}]}], "/", "2"}], "+", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"c3", ".", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ChebyshevT", "[", 
           RowBox[{
            RowBox[{"n", "-", "1"}], ",", "x"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", 
            RowBox[{"Length", "[", "c3", "]"}]}], "}"}]}], "]"}]}], "]"}]}]}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.806075179777814*^9, 3.806075201817819*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318519448951320385675257047976413268819406710008479421958327293`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.7695567233744214`*^-13 + \\(\\(4.163336342344337`*^-17\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.367876784470429`*^-12\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8060797006544437`*^9, 3.806150245549302*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({5.325883644531503`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(4.8452214462813`*^-13 + \\(\\(2.185751579730777`*^-16\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.046037959204861`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8060797006544437`*^9, 3.806150245610244*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
e59UrlniVA4uiasND/DZ8HOhlLdatAQ66T6cNNkJ0D08mCymkwos1a1NtvIT
YBz54NqR8ofQHzabsURxArjrBuQa9JOBpxxuf27DBMymMPeyLRJgaWBSnenW
CRCXDZd3XHwFjFbXJXPNJmCaRrplaHsDvbJfbaJ3bgIid6pX07Seo3srr7JR
wAT0d+qjOIM8dP4D+7Z50ATYncq5ZWeaj7R2V3cdCsUOKO1beagAFSu7nTkT
NQG1s2WXHmoXo8LvxSlZKRMwWse0n9csRfkJVl9XNExAi+2larsPVSh2X3lS
YuMEZHVbCfw2rEY+IooGa5onoK8u3U2ptBqphXyPUm2bAK20KEvhtBr03OXR
GhPmBGxzLpkS8kYoZwvb/CJnAl5vnHThX6hHWe3X0obJHNBW8th5tLkRxWn9
ccpYzYFUIxnN0oVGFJR0Xs5JmgNHgh1EmnSb0F7nk6kMeQ58WmJlLprVhKZ4
hiktqhyw6k4/onbpPdopNpdYaMiB7blp2TmyLajd0j/ukg8HwinF8teUW1F5
4fi+HX4cWIuQTJFtK8oknxCdOcuBuIevXRPCW9H5HutYv0AOiM6WdF7sbUXS
Pho3XcI50HF/ppt6uw25xoxdM0/mgGnByPeSkXb0s9kplNzAgf46+85YzU6k
cMg8sKGRA7L7Zt0KoROZ9285e76ZAwEie70KD3ai5BkhN2obB7xW8ZtMAjuR
zro8y3ssDuxmbZx8V9mJzl+alSFPcsDAS2hQFijokciAZAOfA4EjH36K2FBQ
fXzLivPTHNDhWN9vP05BErmpgtSfHKiJeuA0fZmCimhGEwlCXOgWWep3r5KC
eJvuVJCkuSBlJeW+WZOKVlUEv6qX5cKQZNrLYX0qMjA5WXBOnguUva/SA/ZS
UewRnUyKEhc661iRGm5UpBbdcyNBkwu11pI535Op6NSAigPJhAsu+y+qs39S
0R0fiYP1Zlx4bP7B3WsRDZXN/rY8t5cLQnenQpvEaUhYrN2QYs2F1m1hB6Q2
0FDWzgCVBEcuvK0SF5E8QEODCWhW4gwXjmzjnA7LwI60rrznzwVUF+Cj+ZyG
hgJ6r6wK4EJxbLBkXTENDdv/XCJ9kQs/3ocGxtbT0BeZLbJrI7lwsTLi6+sh
GhpZXtOfeZ0Lq55de3t+AvuPZZbSDS6MhCfaSH7D/nxqk0ocFwiGyezvfzQ0
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
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
bNmk9IaKOjYk+1k+c8eOOhpY+uw1G6hQ/u8g7HFNy4yn79gw9aRjMgr78J8N
MeUdbLixQfJxMnbN27/ny1g4P1eHFmdhK93lniztZsO+Yp+1RdgxHqW2JX1s
YPxmDDzF/qVz85/iL2yIkN117CW20/xRnX+H2dCjwUmqxm5q019fNMaGP2nN
oTXYGmkrlxf+YMNLIwPJ/4/fOUnN5k+x4eGxIx6V2LO6r4fz/uDnE61PlWO7
L8jgPBHkwB7mPvkC7LcdwU25izlwJNw//iG29oMD5Y9FOWDs+qP8Dva906qZ
OeIcaIqfunUNW2C7YFy2JAd23i2W8cc+uagnLEuGA4VHjFxdsN8zyj0frefA
E6VBB1PsrZm37DKVOOCQXi+ijV1af/m8qDoH5ttkVq38//y/BKQHa3Gga3+H
/0+cn1yhUzX9uhzYNSwjS8eWU3b6aKHPgWtDO6SLsNP3WglWAgcm5D09IrCl
PI0UFY050PBzYN4BW7Ro48mZAxzo9q1TncP7Kapd7qaHLQeEzqU/f4ctwJco
7HDkwL53tcnJ2JM6c+OPj3NAo7vPVBHb1+a7OO0MB/YqO68bxPuZFziw+YIv
B/y+KBvlYn960R5sHcYBzfTHN2Wxj3TX36u5wgFF5095HFwvnNmKV6pRHOhf
578mBrt1V8bfv7c5kPez8Pc4rr/njT5Rhbk4/m9XlCbhetUecM+TKuJAcmGy
3zbswsV278LLOKA2lHWDi+s90wzE7Ks5kHYnqHIF9q2OFSlCDA6w9ZequOHz
Y/H3hZVnuXg9r+j3xz7j/U5Md/f0cuDNjcDTIdjBtp/WlQ3h54XOi0Xh88ft
Q+lj5zkOuJ6ZDw//SJAf/uQ0tyzgglIhDc304f0rmzqyZSkXPlX5Hj6Lve9o
+CaRlVzYs9Ah2fo/nM+hgxXPVbmgaPfWaaYH53OpCVdekwumWXpBTtga6voz
MVu48Lbq2mg1Pj/lvBV2HTPkgslr6bGgLpyfnz+aVhziwj+OqUda2DiefxNZ
py5zwT5/Tp3fQZDLqM5b5yK48F/pCXwNwv2re/k/UTe5oGt9vvj8e3x+Pr1e
lp3IhdrVrZK/cb8gT4XF9T3hgkZjROrntwT5iO5ueqiTCwsLq14a4f7zvvbh
vDubC55uyu9PNOB6KOx97tfDhV/aKplR9bifRx3eEP+VCxuEdC8h3L8WGJgv
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
u150Yn6eD7Knlj48JRgL/wMgApAQ
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {-0.3266540160436245, 4.731191557343433}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.806079729197508*^9, 3.8061502742076697`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c100", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Re", "[", 
     RowBox[{
      FractionBox["2", "\[Pi]"], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"NpPlus2NP", "[", 
            RowBox[{"x", ",", "100"}], "]"}], "*", 
           FractionBox[
            RowBox[{"ChebyshevT", "[", 
             RowBox[{"n", ",", "x"}], "]"}], 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["x", "2"]}]]]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
          RowBox[{"PrecisionGoal", "\[Rule]", "1"}]}], "]"}], "-", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"NpPlus2NP", "[", 
            RowBox[{
             RowBox[{"-", "x"}], ",", "100"}], "]"}], "*", 
           FractionBox[
            RowBox[{"ChebyshevT", "[", 
             RowBox[{"n", ",", "x"}], "]"}], 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["x", "2"]}]]]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"PrecisionGoal", "\[Rule]", "1"}]}], "]"}]}], ")"}]}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "30"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8061510834550014`*^9, 3.806151086836754*^9}, {
   3.806151191048359*^9, 3.806151191381877*^9}, {3.806161432349209*^9, 
   3.806161433497773*^9}, 3.806172371131488*^9, {3.806235011289002*^9, 
   3.806235014279977*^9}, 3.8062459159533873`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(100\\\\ \
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^2\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.8061511682233324`*^9, 3.806151198023237*^9}, 
   3.8061614368632383`*^9, 3.8061723721613703`*^9, 3.80623502084332*^9, 
   3.806245924425544*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(100\\\\ \
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.8061511682233324`*^9, 3.806151198023237*^9}, 
   3.8061614368632383`*^9, 3.8061723721613703`*^9, 3.80623502084332*^9, 
   3.8062459244914827`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(100\\\\ \
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.8061511682233324`*^9, 3.806151198023237*^9}, 
   3.8061614368632383`*^9, 3.8061723721613703`*^9, 3.80623502084332*^9, 
   3.806245924548995*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: inumr\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.8061511682233324`*^9, 3.806151198023237*^9}, 
   3.8061614368632383`*^9, 3.8061723721613703`*^9, 3.80623502084332*^9, 
   3.806245924570972*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.8061511682233324`*^9, 3.806151198023237*^9}, 
   3.8061614368632383`*^9, 3.8061723721613703`*^9, 3.80623502084332*^9, 
   3.8062534839099045`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(x\\)\
\[NoBreak] near \[NoBreak]\\!\\({x}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.\
99999999999999798140399496834140108639678325002485964872328549902`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\(\\(-1.0416530054621909`*^7\\)\\) + \
\\(\\(8.010754496160196`*^7\\\\ \[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.9232227020043856`*^8\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.8061511682233324`*^9, 3.806151198023237*^9}, 
   3.8061614368632383`*^9, 3.8061723721613703`*^9, 3.80623502084332*^9, 
   3.8062536289327135`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.8061511682233324`*^9, 3.806151198023237*^9}, 
   3.8061614368632383`*^9, 3.8061723721613703`*^9, 3.80623502084332*^9, 
   3.806254378694672*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(x\\)\
\[NoBreak] near \[NoBreak]\\!\\({x}\\)\[NoBreak] = \
\[NoBreak]\\!\\({\\(-0.\
99999999999999798140399496834140108639678325002485964872328549902`65.\
954589770191\\)}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.0416530054621909`*^7 - \\(\\(8.010754496160196`*^7\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.9232227020043856`*^8\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.8061511682233324`*^9, 3.806151198023237*^9}, 
   3.8061614368632383`*^9, 3.8061723721613703`*^9, 3.80623502084332*^9, 
   3.806254508426372*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.8061511682233324`*^9, 3.806151198023237*^9}, 
   3.8061614368632383`*^9, 3.8061723721613703`*^9, 3.80623502084332*^9, 
   3.8062552060042076`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.8061511682233324`*^9, 3.806151198023237*^9}, 
   3.8061614368632383`*^9, 3.8061723721613703`*^9, 3.80623502084332*^9, 
   3.806255206256974*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(x\\)\
\[NoBreak] near \[NoBreak]\\!\\({x}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.\
99999999999999798140399496834140108639678325002485964872328549902`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\(\\(-1.0416530043130219`*^7\\)\\) + \
\\(\\(8.010754496858741`*^7\\\\ \[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.923222701862775`*^8\\)\[NoBreak] for the integral and error \
estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\
\", ButtonNote -> \\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.8061511682233324`*^9, 3.806151198023237*^9}, 
   3.8061614368632383`*^9, 3.8061723721613703`*^9, 3.80623502084332*^9, 
   3.806255320081353*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.8061511682233324`*^9, 3.806151198023237*^9}, 
   3.8061614368632383`*^9, 3.8061723721613703`*^9, 3.80623502084332*^9, 
   3.806255320133309*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "1.2339409648747952`", ",", "7.067899292141149`*^-17", ",", 
   "0.5372397783484696`", ",", "0.`", ",", 
   RowBox[{"-", "0.4031982923179624`"}], ",", "0.`", ",", 
   RowBox[{"-", "1.0145151412296005`"}], ",", "7.067899292141149`*^-17", ",", 
   RowBox[{"-", "0.9996854980516182`"}], ",", "7.067899292141149`*^-17", ",", 
   RowBox[{"-", "0.4902852251135372`"}], ",", 
   RowBox[{"-", "3.533949646070574`*^-17"}], ",", "0.11934237496910405`", ",", 
   RowBox[{"-", "3.533949646070574`*^-17"}], ",", "0.48044926998024295`", ",", 
   RowBox[{"-", "7.067899292141149`*^-17"}], ",", "0.4909803455020459`", ",", 
   "3.533949646070574`*^-17", ",", "0.27860095082930636`", ",", 
   RowBox[{"-", "1.766974823035287`*^-17"}], ",", "0.042878955907133504`", 
   ",", "0.`", ",", 
   RowBox[{"-", "0.0897293733907902`"}], ",", 
   RowBox[{"-", "7.067899292141149`*^-17"}], ",", 
   RowBox[{"-", "0.10713267259608748`"}], ",", 
   RowBox[{"-", "1.766974823035287`*^-17"}], ",", 
   RowBox[{"-", "0.06462819951888188`"}], ",", "2.6504622345529306`*^-17", 
   ",", 
   RowBox[{"-", "1.326273798446694`*^7"}], ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.806151188425561*^9, 3.806154776963383*^9, 
  3.8061678206602135`*^9, 3.80619053070021*^9, 3.8062445029336596`*^9, 
  3.8062557722062845`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c100", "[", 
  RowBox[{"[", 
   RowBox[{"2", ";;", "24", ";;", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.806245362093829*^9, 3.8062453932199664`*^9}, {
  3.806245472319787*^9, 3.8062454735852075`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.2339460806672555`", ",", "0.5372449186425449`", ",", 
   RowBox[{"-", "0.40314090641006206`"}], ",", 
   RowBox[{"-", "1.014510107239469`"}], ",", 
   RowBox[{"-", "0.9996854980516182`"}], ",", 
   RowBox[{"-", "0.4902852251135372`"}], ",", "0.11934237496910405`", ",", 
   "0.4804465934009593`", ",", "0.4909808331739676`", ",", 
   "0.27860095082930636`", ",", "0.042878955907133504`", ",", 
   RowBox[{"-", "0.0897293733907902`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.806245372395193*^9, 3.8062453934696712`*^9}, 
   3.8062454763359175`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c100", "[", 
  RowBox[{"[", 
   RowBox[{"2", ";;", "26"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.806245858828277*^9, 3.8062458762726173`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.2339460806672555`", ",", "5.125394971366837`*^-6", ",", 
   "0.5372449186425449`", ",", "5.156270880020369`*^-6", ",", 
   RowBox[{"-", "0.40314090641006206`"}], ",", "5.135051393923516`*^-6", ",", 
   RowBox[{"-", "1.014510107239469`"}], ",", "4.796123114433262`*^-6", ",", 
   RowBox[{"-", "0.9996854980516182`"}], ",", "7.067899292141149`*^-17", ",", 
   RowBox[{"-", "0.4902852251135372`"}], ",", 
   RowBox[{"-", "3.533949646070574`*^-17"}], ",", "0.11934237496910405`", ",", 
   RowBox[{"-", "0.0018355124567272316`"}], ",", "0.4804465934009593`", ",", 
   "5.553727720874888`*^-7", ",", "0.4909808331739676`", ",", 
   "4.072147200486709`*^-7", ",", "0.27860095082930636`", ",", 
   RowBox[{"-", "1.766974823035287`*^-17"}], ",", "0.042878955907133504`", 
   ",", 
   RowBox[{"-", "6.631368982664116`*^6"}], ",", 
   RowBox[{"-", "0.0897293733907902`"}], ",", 
   RowBox[{"-", "0.46600092017488043`"}], ",", 
   RowBox[{"-", "6.631369089786416`*^6"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8062458599417496`*^9, 3.8062458766809993`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ChebyshevT", "[", 
     RowBox[{
      RowBox[{"n", "-", "1"}], ",", "x"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "2", ",", 
      RowBox[{
       RowBox[{"Length", "[", "c100", "]"}], "-", "9"}], ",", "2"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.806245306549572*^9, 3.8062453215881443`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "3"}], " ", "x"}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["x", "3"]}]}], ",", 
   RowBox[{
    RowBox[{"5", " ", "x"}], "-", 
    RowBox[{"20", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    RowBox[{"16", " ", 
     SuperscriptBox["x", "5"]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "7"}], " ", "x"}], "+", 
    RowBox[{"56", " ", 
     SuperscriptBox["x", "3"]}], "-", 
    RowBox[{"112", " ", 
     SuperscriptBox["x", "5"]}], "+", 
    RowBox[{"64", " ", 
     SuperscriptBox["x", "7"]}]}], ",", 
   RowBox[{
    RowBox[{"9", " ", "x"}], "-", 
    RowBox[{"120", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    RowBox[{"432", " ", 
     SuperscriptBox["x", "5"]}], "-", 
    RowBox[{"576", " ", 
     SuperscriptBox["x", "7"]}], "+", 
    RowBox[{"256", " ", 
     SuperscriptBox["x", "9"]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "11"}], " ", "x"}], "+", 
    RowBox[{"220", " ", 
     SuperscriptBox["x", "3"]}], "-", 
    RowBox[{"1232", " ", 
     SuperscriptBox["x", "5"]}], "+", 
    RowBox[{"2816", " ", 
     SuperscriptBox["x", "7"]}], "-", 
    RowBox[{"2816", " ", 
     SuperscriptBox["x", "9"]}], "+", 
    RowBox[{"1024", " ", 
     SuperscriptBox["x", "11"]}]}], ",", 
   RowBox[{
    RowBox[{"13", " ", "x"}], "-", 
    RowBox[{"364", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    RowBox[{"2912", " ", 
     SuperscriptBox["x", "5"]}], "-", 
    RowBox[{"9984", " ", 
     SuperscriptBox["x", "7"]}], "+", 
    RowBox[{"16640", " ", 
     SuperscriptBox["x", "9"]}], "-", 
    RowBox[{"13312", " ", 
     SuperscriptBox["x", "11"]}], "+", 
    RowBox[{"4096", " ", 
     SuperscriptBox["x", "13"]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "15"}], " ", "x"}], "+", 
    RowBox[{"560", " ", 
     SuperscriptBox["x", "3"]}], "-", 
    RowBox[{"6048", " ", 
     SuperscriptBox["x", "5"]}], "+", 
    RowBox[{"28800", " ", 
     SuperscriptBox["x", "7"]}], "-", 
    RowBox[{"70400", " ", 
     SuperscriptBox["x", "9"]}], "+", 
    RowBox[{"92160", " ", 
     SuperscriptBox["x", "11"]}], "-", 
    RowBox[{"61440", " ", 
     SuperscriptBox["x", "13"]}], "+", 
    RowBox[{"16384", " ", 
     SuperscriptBox["x", "15"]}]}], ",", 
   RowBox[{
    RowBox[{"17", " ", "x"}], "-", 
    RowBox[{"816", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    RowBox[{"11424", " ", 
     SuperscriptBox["x", "5"]}], "-", 
    RowBox[{"71808", " ", 
     SuperscriptBox["x", "7"]}], "+", 
    RowBox[{"239360", " ", 
     SuperscriptBox["x", "9"]}], "-", 
    RowBox[{"452608", " ", 
     SuperscriptBox["x", "11"]}], "+", 
    RowBox[{"487424", " ", 
     SuperscriptBox["x", "13"]}], "-", 
    RowBox[{"278528", " ", 
     SuperscriptBox["x", "15"]}], "+", 
    RowBox[{"65536", " ", 
     SuperscriptBox["x", "17"]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "19"}], " ", "x"}], "+", 
    RowBox[{"1140", " ", 
     SuperscriptBox["x", "3"]}], "-", 
    RowBox[{"20064", " ", 
     SuperscriptBox["x", "5"]}], "+", 
    RowBox[{"160512", " ", 
     SuperscriptBox["x", "7"]}], "-", 
    RowBox[{"695552", " ", 
     SuperscriptBox["x", "9"]}], "+", 
    RowBox[{"1770496", " ", 
     SuperscriptBox["x", "11"]}], "-", 
    RowBox[{"2723840", " ", 
     SuperscriptBox["x", "13"]}], "+", 
    RowBox[{"2490368", " ", 
     SuperscriptBox["x", "15"]}], "-", 
    RowBox[{"1245184", " ", 
     SuperscriptBox["x", "17"]}], "+", 
    RowBox[{"262144", " ", 
     SuperscriptBox["x", "19"]}]}], ",", 
   RowBox[{
    RowBox[{"21", " ", "x"}], "-", 
    RowBox[{"1540", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    RowBox[{"33264", " ", 
     SuperscriptBox["x", "5"]}], "-", 
    RowBox[{"329472", " ", 
     SuperscriptBox["x", "7"]}], "+", 
    RowBox[{"1793792", " ", 
     SuperscriptBox["x", "9"]}], "-", 
    RowBox[{"5870592", " ", 
     SuperscriptBox["x", "11"]}], "+", 
    RowBox[{"12042240", " ", 
     SuperscriptBox["x", "13"]}], "-", 
    RowBox[{"15597568", " ", 
     SuperscriptBox["x", "15"]}], "+", 
    RowBox[{"12386304", " ", 
     SuperscriptBox["x", "17"]}], "-", 
    RowBox[{"5505024", " ", 
     SuperscriptBox["x", "19"]}], "+", 
    RowBox[{"1048576", " ", 
     SuperscriptBox["x", "21"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8062452967275715`*^9, 3.806245306848081*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"First", "[", "c100", "]"}]}], "/", "2"}], "+", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"c100", "[", 
        RowBox[{"[", 
         RowBox[{"2", ";;", "24", ";;", "2"}], "]"}], "]"}], ".", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ChebyshevT", "[", 
          RowBox[{
           RowBox[{"n", "-", "1"}], ",", "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "2", ",", 
           RowBox[{
            RowBox[{"Length", "[", "c100", "]"}], "-", "7"}], ",", "2"}], 
          "}"}]}], "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.806244931402593*^9, 3.8062449324078884`*^9}, {
   3.8062450185068493`*^9, 3.8062450300817347`*^9}, {3.806245105645463*^9, 
   3.806245126146537*^9}, {3.80624516641162*^9, 3.80624517158514*^9}, {
   3.80624528133403*^9, 3.8062452865615845`*^9}, {3.806245485255264*^9, 
   3.8062456016357994`*^9}, 3.806245635052183*^9, {3.8062457389893274`*^9, 
   3.8062457401567326`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
KlVgrUn+vqxFFPI7oqD+wcoKKL74Kbpdm0I2G/ote7quAj4v7is5baeQAp+F
xS93VWA6afsPJ1cKKRFb/y/jQgUu1Avu2f6WQlZZrmU+ulaBbT3xa4c/Usjz
6DUXne9VoFz5wRGxPgqx36DZtyKiAneXaPS+F6KSylurX85KrABts8GTE7JU
olO58mAfhc/juhIX1alkxkaVRJZVoP/J1ErR3VTilKLide1TBTygtfypFZXU
flumY9VZAZdImfgnjlQS5a8Us+ArnzOeif3xpRLhhiVHx/5UwJ1ab3P2GZW4
LlGQqp1diXqp1QvMoqjEgCZ3J2BJJVRCbwT6M6gk/o/MRif1SrRujWlpI1Qi
tmvh2I51lZBeudY7rppK2juk7P6ZVCLGRPNrVC+VbFOVXNRjXomVmWfN64ap
JNVt7qc8m0o82flWx+srlXgJicHzciXKNTsOLBKgkd4DIr8sblVitPeOY7QQ
jZiEz6auC6hEfN6Rnv45NEIZEDorFVIJO/Wg2F4xGpHTFlz6+XUlTLwDXr2c
SyO3vQTaqlMrEeZLz5eQohFOyUxganYlLCeTxwwW0Ijp3L8m/kV8/2JLV6ot
pBGG1dTM6apKWOf/PFwtQyOKcZO5xs2VEDq3ylFDjkbu/ffLbWlfJZw12g7t
WkQjPL0J9b8jlUg03CW+RJ5GDvuM93aOVyLjTId/Op/zqr+Hvf1Xib1myoUT
fF4u+80sTLwK8ZzSxGk+B9iNzfGQrYJDRqR+IZ+/vvlcZL6sCjvFo89v4rP1
+H+eOppVcIvgGbvx/REj3pp5+lU4fuE9/SQ/HvWH3CHetir4HAkqEJOlkcCm
oejK/VUoWzJoe5Gfz4QSxyrZqgr3Ci+EPePne9J5UNLvVBVkY+eedeHXo5zO
Kj91vgpmJSUN//j10v7bdxteVTAdyOk4KE4jobt79ZXuViGWsunecREamQ7q
/vLnSRXoPcVNS4Vp5Ex3Z3L7yypYHRptiOHrVaPecTI3vgqrDgtI5ExSie6l
NrnQzCpMkYYvMd+o5FV+S92lt1UQTvQ4LTBCJS6HGo2066rAkbU+odJKJY2R
9RPiHVUoenZZmv2RSjZz6ijcwSrUmUuXLimhElHvj8qJk/z6Df1+/PkNlbiX
VbX6CleDM/ls9MFrKmmTrAy0k6qGwH3TxvDnVJKcUDajoFaNvp4NTcpX+fvv
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
iXFwONGfVfeFye8/l/hxCQ7iNvezJb4xSf/p/XbukhzsjHhRm/WdSTrLtRRH
53Pwrzh/Y/EPJmlZLdlxdiEH589XluqPM0n9k7EXg7IcxNS8XCDL5+qx+sN2
8hyc3HC5+jh//4fDdKkuBQ4isha8FOHbK84JqbFS4kAvKUV1yVcmyZO/+rBx
KQe9hgMrXnxmkpwbViZmKhxEjXzbc5XHJLTejULVqhxsLgvcnz/EJGnGi4t3
reSgfvDvkNMAkyQl/rlZspoDbqJcp1cPk8SKdG/eqsWBGWv38Oc2Jol0KZx4
u4YD8cWvmysbmORFbXS27joOop+8dxX9yCSPQk5pa+nz85nvU8/IZxK/ie28
lE0cmJ4t37E8m0nuHFNNWbGFA+F9ezK+vWESj6XDy5Zs4yDsp1FD4QsmuXi3
sidsO/+8vL75u0dM4sJ5Eym9i4NkpucB+TtMYpd+XkZ8HwcvufddBZyY5Lik
WcN9U379KYYXH1ozieUlncBZBznYICaXfXUfk+zb+F1k0oIDhQ9uI15aTKL7
3mtq2JaDu7QGtxUjuURH/djb0/YcvHYrzC1vzSUaDw2u9jlw0N2s6lvLv09L
D/790nqWg/2kQmwO//6Jd90d+HCJA4ODf0vUd+USYaMzMcYeHKjtfdoxop1L
/sXusin05IDGXZezQC6XjDuJtjJucHBirDz5OTuH9H1/WpVwnwN25X9dh71z
CPvfzdgjARzsXrjvb/uJHMKde95L5DEHBRJLpdINc8hX9X1qrs/5/kx6+3Wn
GUTgxBzf9a/4elyf8/jzZQYRdv55lP2ag8eh00dYZgwiepW9JiyWg72v4aCm
wSALnpV2TyZx4C1k2hrbm01U3t/eVELj4KF37KtryCbq9RekrmRzkOQkzpwl
l000emyGVHM5sM/e393/H51s+GUQGpDPj9eYE574gk52av4aO1jOgf9qPc/j
rCziFHIxpbeLAyEp0wXWx2nEJfbk7ee9HIj2nvmVpU4jbpkHjmxncZD4wbxh
kE0lXhWaQslDHMSHR3uZz6eSgKnhkxe+8dd5VG2NY5nkzWl7uek5Q+g8a5is
nvOGjG4wv794/RCsh7U3mafHkapktvpr3SEk9inJrteKI8mLr1Uu2zgEyQuX
0mwy+PPqv2iJVYZDyD14iaZ/JIY0VY8G6ZsMQeBXfru20SuSdyog2uL4EPyL
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
rb+Yv5BsQdCYz6430zxcVbE4LDG3Ff8DsEJZtw==
     "]], LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAqlcoPKVn7z91IlNSCwzWP5G2FT8s
aO8/Ad9FmdyY1T+IlJDKy23vPxiMBQMI7tA/dVCG4Qp57z96RzmKHVXAP3C/
Q6fae+8/HsE/EcFruD9sLgFtqn7vP8wNailrZrA/Ygx8+EmE7z/IK1zdefRw
P157Ob4Zh+8/zrOHl5f5mL9Z6vaD6YnvP0Q+mfRdlaq/UMhxD4mP7z+4Aj7h
gpa6v0w3L9VYku8/4MTBWNlowL9HpuyaKJXvP7DOr/1jYcO/QhWqYPiX7z9/
5PBFwTPGvz6EZybImu8/q+HSUs3eyL858yTsl53vP2ZpE3xgYcu/NGLisWeg
7z8OIKJLT7rNvzDRn3c3o+8/Zgx8eWroz78rQF09B6bvP4By0HM/9dC/Jq8a
A9eo7z8GgxHPqt/RvyIe2Mimq+8/PmCp49my0r8djZWOdq7vP3jkAlYtbtO/
GPxSVEax7z8kx/3XAxHUvxRrEBoWtO8/7pcvJ7qa1L8P2s3f5bbvP9jzMwur
CtW/CkmLpbW57z+3VwxUL2DVvwa4SGuFvO8/3PWP2J2a1b8CJwYxVb/vP+L5
63RLudW//ZXD9iTC7z9UpDQJi7vVv/gEgbz0xO8/CKgHeK2g1b/0cz6CxMfv
P4o5QKUBaNW/7+L7R5TK7z9oPb101BDVv+pRuQ1kze8/EwY6yXCa1L/mwHbT
M9DvP44UOoMfBNS/4S80mQPT7z+2TwiAJ03Tv9ye8V7T1e8/2SXKmM100r/Y
Da8ko9jvPzkRp6FUetG/03xs6nLb7z+c+gRp/VzQv87rKbBC3u8/DtuzbQ04
zr/KWud1EuHvP0ZGJ5habcu/xcmkO+Lj7z8wuyrEV1jIv8A4YgGy5u8/ax6Z
VHb3xL+8px/HgenvP3m1uZsjScG/uBbdjFHs7z+3kI+1kZe6v7OFmlIh7+8/
lAJWg5b7sb+u9FcY8fHvP18ShrsvdqG/qmMV3sD07z+IfWIMAtNyP6XS0qOQ
9+8/6k2z/x6Bpz+gQZBpYPrvP4YM92dcArc/nLBNLzD97z/qsIiQ+nrBP5cf
C/X//+8/Mi9UCGDPxz+4Aa+5
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0., 0.9999999795918367}, {-0.33957172297465843`, 
   0.34448512115026314`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.806244935935915*^9, 3.8062450306093693`*^9, 3.8062451061240273`*^9, 
   3.806245172986825*^9, {3.8062454921398516`*^9, 3.8062454980050707`*^9}, {
   3.806245538730115*^9, 3.806245573504916*^9}, 3.8062456358941574`*^9, 
   3.8062457461618767`*^9, 3.8063274117524776`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"First", "[", "c100", "]"}]}], "/", "2"}], "+", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"c100", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "28"}], "]"}], "]"}], ".", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ChebyshevT", "[", 
          RowBox[{
           RowBox[{"n", "-", "1"}], ",", "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{
            RowBox[{"Length", "[", "c100", "]"}], "-", "3"}]}], "}"}]}], 
        "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.806245679790642*^9, 3.8062457435568595`*^9}, {
  3.806256636156581*^9, 3.8062566785653944`*^9}, {3.8062567637525406`*^9, 
  3.8062567655261226`*^9}, {3.806327585530014*^9, 3.8063275974127555`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
A+dm1Xo=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {-0.16973424242852853`, 4.923141604938493}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.80624570645758*^9, 3.806245748976511*^9}, 
   3.80625667922631*^9, 3.8062567662620883`*^9, 3.8063274237257457`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["c100"], "Input",
 CellChangeTimes->{{3.80632749121771*^9, 3.806327491689649*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "1.2339409648747952`", ",", "7.067899292141149`*^-17", ",", 
   "0.5372397783484696`", ",", "0.`", ",", 
   RowBox[{"-", "0.4031982923179624`"}], ",", "0.`", ",", 
   RowBox[{"-", "1.0145151412296005`"}], ",", "7.067899292141149`*^-17", ",", 
   RowBox[{"-", "0.9996854980516182`"}], ",", "7.067899292141149`*^-17", ",", 
   RowBox[{"-", "0.4902852251135372`"}], ",", 
   RowBox[{"-", "3.533949646070574`*^-17"}], ",", "0.11934237496910405`", ",", 
   RowBox[{"-", "3.533949646070574`*^-17"}], ",", "0.48044926998024295`", ",", 
   RowBox[{"-", "7.067899292141149`*^-17"}], ",", "0.4909803455020459`", ",", 
   "3.533949646070574`*^-17", ",", "0.27860095082930636`", ",", 
   RowBox[{"-", "1.766974823035287`*^-17"}], ",", "0.042878955907133504`", 
   ",", "0.`", ",", 
   RowBox[{"-", "0.0897293733907902`"}], ",", 
   RowBox[{"-", "7.067899292141149`*^-17"}], ",", 
   RowBox[{"-", "0.10713267259608748`"}], ",", 
   RowBox[{"-", "1.766974823035287`*^-17"}], ",", 
   RowBox[{"-", "0.06462819951888188`"}], ",", "2.6504622345529306`*^-17", 
   ",", 
   RowBox[{"-", "1.326273798446694`*^7"}], ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.806327492261649*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"c100", "[", 
       RowBox[{"[", 
        RowBox[{"2", ";;", "28", ";;", "2"}], "]"}], "]"}], ".", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ChebyshevT", "[", 
         RowBox[{
          RowBox[{"n", "-", "1"}], ",", "x"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "2", ",", "28", ",", "2"}], "}"}]}], "]"}]}], 
     "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8063275508178988`*^9, 3.8063275761211586`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
r8D/Rni6tw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {-0.16973425428361796`, 4.923141623997972}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8063275783724422`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NpPlus2NP", "[", 
       RowBox[{"x", ",", "100"}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"First", "[", "c100", "]"}]}], "/", "2"}], "+", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"c100", ".", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ChebyshevT", "[", 
           RowBox[{
            RowBox[{"n", "-", "1"}], ",", "x"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", 
            RowBox[{"Length", "[", "c100", "]"}]}], "}"}]}], "]"}]}], 
       "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8061550526011453`*^9, 3.8061550682198043`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8061550694468517`*^9, 3.806168208618204*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({3.3747516301604454`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.1167282376600696`*^-16 + \\(\\(1.0018028073766061`*^-16\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(2.571313208002349`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8061550694468517`*^9, 3.806168208623198*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8061550694468517`*^9, 3.8061682087241063`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({3.3747516301604454`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.97758476261356`*^-16 - \\(\\(6.310056643865636`*^-17\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(4.137105103704818`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8061550694468517`*^9, 3.806168208791044*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318530013645666773726079921922200435466243639837102819001302123`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\(\\(-2.949029909160572`*^-17\\)\\) - \
\\(\\(2.7668839441830073`*^-16\\\\ \[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(7.920379641064819`*^-14\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8061550694468517`*^9, 3.806168208954892*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8061550694468517`*^9, 3.8061682089848638`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8061550694468517`*^9, 3.8061682090997553`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8061550694468517`*^9, 3.8061682091307335`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwUV3c81e8XNwqVpFTfpGElZVaU9ORoGEkqJCqKSBFRIpJRKiEJyUp29t4e
+7r3Gpd7L/fae8teFdLP76/P67zOc87nfcbznPMWMnmibcbGwsKyl4uF5f9f
DbNRWvnYDaXZ4SVelpAaPJKmZ9LDLwd8y5d8Qu+V491bGL7Z/Bdh/+k6MJDJ
RYWlLo8dxLSA985cIq5kYOnTO+O+8euCcItxRMxREmbhGwv4d9AApKLtCz5X
5GDaRMlrYzEjUIw3lPljQcLX79cUGAcZw9HnwkaHXJhYkXoiw5/fFCzQj3fK
j6hI5GzEj6rwB7C2ELT/CyUWcydxfV84+Ah+79cY2lRAxQu7nwUdirGEyyNl
tFW3StT1puujnpg1xBiXSvI+ZOL7v2Mqq3Rt4KShlrtOXB1qkTZQuhNkC5te
htEULAhY04ynaKHlKez/MpX9fKoMlYdVyX/kt4NcUmodehSA5OgvMg/dfg6/
U2LFeuSjUSKXtFRpuD0sDZLTPSyp+AAMJOh1O8DfU36bfN7lYP/nwaLTBx0B
h7XJ6515izhSrkS+N3YCN5X4bHdaFXbqZ9snGPMSimQ0siQfNKOpPQVfCwad
4Xgbb1hlUR++f9WK77qYC+h36fP/7qzBrW+FP42Zu4KUwL8t9iZlSKzbcmOF
rhtca0o3PZgcie85ql74uOgGJtFhEVI0Cg7dKeRuEOQObbdV/nHGNqDm9JXS
Q6dew/FgCbNYbRLmucxcnW15DcIn7CUcmEFYfThDsfTFG8gvOuk00ZuH37h7
v/Di94CQfvo2iegmVLrvQZ5ekQe4Xmg2SVRswr/zlReEb7+F7QfTudRzCfi4
jsDx6ZW3YC06/IDPtgo/nlp8Uhz+Dr6YZRzZuIOO4j9QU9+ffQ9v5mfSTu5u
wr2iyT91ut9D6tx753spnWhv+dsjgq6eMOqkXt73mIF1b98znzj4AXp2UTW4
bEjYd0kxrqD8A/wsvzQcWp6JyZ93DXgYe8FYXu2JeT0CYpOaEbzO5g3vf5u+
E+wZxGfJtUb7Y7xB8px4mL1TDXpxPy587IIPpIYdCv7WQ8VZa67tuYM+cPp2
/EdF3zo8EXJrz+u3H0HreqDMd/FMLCYvr6cl5gufQtvzRItJ+B51W+Beki+M
vG2T7VNl4jDLcdqw+SeY/PmYZ+aQG7J80//eYIMfUEvVdPf+S0FctMb4Ml0/
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
     "]], LineBox[CompressedData["
1:eJxFkn1MzAEcxq9CW0reatVGyq1w1ou33Lx8deE0IYdeyK0Xb5G3rOwkqVRu
UpdV5oZa6bIzvdHVza1v3f3qclZTSS/0ShJn38WpWy/j/OWPZ8+fz7Pn87hE
XhScNGexWN4m/XNhkXNNVRRB0tWuAyJ9J+TzQ0RhJwncybbsbOM7yFHYwdoz
BBsz4jzaBtrhdq5E9+Y8weAVMSf9WivEBaYPWYkI7lSMbEJeA1xCv9LeBILR
+WYW2gQVxHiYnZffIJh6NvV7ZZkCIq2vG/1vEWzicCReuaUgTODWOWYQLOG3
ebPfSSH020TqmJhgrPSHf6I+EQKbL9uKswnsdYttrm99iAE+np0h9whCP30Y
lu6VIV+ml67KI2C3Fb5MnnyOPDt5uPE+QccKl31Fkircfuu0W7OU4JilrmbN
52rk/mLr7z8y9XFMm145UYsbIocrTxcSnOr30UY3vUKvtoKrPsUEqyObKscO
1yFnx/FtljICr7lrBtoD69Gt3Mmi66lpnz8sRWhQA7ou726WPSOINc+JcN6i
xmV387LiywiCJv2W7/qjRocZweHdlQQ/zDzAWKTBpecWOtm/JCiw7eqLdWPQ
trdlYERBwHV1KpwRM2jlf6ekWkmgzk6UfG9hcF7tnnNpKoJGSe6Ckp8MmrvP
8z6CBJaO6b2PjQzO5mkm2GqCRTd1O8IHGTTOSVYZGFN+ybGYVDmDhivbUxit
iUeW96gimEEanubn6ggiRliH8KsGvx1U2pxoIbDbOXRKJNTgl/r4jvVvCTzy
k3kflWoc8tzwwKKDIDVzLXdmugE/Ph4XdnSa/jLY023j1oDdNuXs4m6CZSnv
hWe59dj6fXUFr58gwTdqs2inCnVHR+MWDxEIAqzdH0wosfH1ky3Dnwgc9wsW
fBDXoKrUWZs8ZuIjS1HyzlRhrX1f5kG9ia+rpjc+qRxfpEkFLkSQEfbihMFV
jmWGYIfxcQLrHNCtan2C8ii7/noDwdaR6NmQdQVY0t5eLJkkeK6aW/eUn4eF
vpLo8CmCnkF/v+oLt/FhxT5Pr1kCjnkVLzsqFntuBK0vnv3//7+QT6rc
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
9sD/AHTfQfc=
     "]], LineBox[CompressedData["
1:eJwVUHlQzAEYTcmRHGOtYR05cmbaIpTrQ2w1MipnuYtJIwlTWwqFIldlNEsh
pKSktpJtbL5ssd2z7c+2P0lNa3aplk/ZsiPJ+uPNm/fHO+bN9D/uc9jczMxs
sQn/WbGqLaInkOCcUL0lUq+C5BIuLDpC4DX12itHiQou30qqqT1GEBqXZjFZ
poAwr/h2q0gC/enh6q9pZRCKrk+aowh+fAn8KHpXDMH2Q47lnCWQBK8Mrd6R
Df7W0UaPiwTQUP7jtGcy7otyeT35EkHwof28qQHZ6NvZd6EjgUAzW7BiWl0R
elWdGJuQSMCFdNEz7hv0XM5X7bpJkJ7fkxgQVoluWfrU+SkEs89UCLvy5Lie
m3PAKDLpAf5WbVkNrrkYOLcqlaBL4KzryqhHl5+2etE9gk25DgoPvgKd/DXi
wAcEVhbjNywNb0SHxnTh8gyC5jwO50+mEu3W7l09PIvgpXaWpLWMwbn5PAt1
NkFRjL0fr+w9zprOVmXlEjxsPvXm6yMVTrueciP8OYE0scAzJqQJJ/3x2SYQ
E/gqnXUcGzVOODqON7GYIIHXY1QWqXFsc32btoTAccDxcIcdi1YeVzNflJr+
+R4Tdi6exWES96NxUlO/eC1TKmPRfN4wx+1IkOe6LKq0jcWBlIo+W5nJ398n
Tmth0Tg0VmqoJHDJdTZGSlg0nFpzvlJOILw0dDDoJIuk6Xe7VUMwKqku7cxI
Fju9S0cfqifYKAiQyqLVqCsPZ5YoCLQhKj/X2iZs5zvdsWBMeY/nnLA0qLDl
fvc+RkVQKOzQW/W9R3Z0vm0Ga9qnkz/yVjDIRAd3nvxIMEbHrmNildjQtaBg
fStBhFQriBvZiDV+X8LGtxPEf+O0iesa8G3145WazwQhB4P8wu1rsdzZf0ih
jsD9A8dhwTI5Sp/YyGM7CHqvuFXcbJehZOKna956gsySuunaPVIsikv1mUkE
Bksz3l+nQnxu2Dmpu5vA3Pp88aIp9zAngNtabiB4enDh7bzqZMhUKjOSfhFY
J0aMCO0vgAfrkoIO/CZo2m2wnOH7Gu4WbOY7DBDs6m3RLHV/ByKbUb2DgwS1
Uxpi7Zh6+AdrLb+0
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {-0.38865506203097305`, 0.34255821988141827`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.806159897108309*^9, 3.8061718123110714`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c100TakeTwo", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Re", "[", 
     RowBox[{
      FractionBox["2", "\[Pi]"], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"NpPlus2NP", "[", 
            RowBox[{"x", ",", "100"}], "]"}], "*", 
           FractionBox[
            RowBox[{"ChebyshevT", "[", 
             RowBox[{"n", ",", "x"}], "]"}], 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["x", "2"]}]]]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
          RowBox[{"PrecisionGoal", "\[Rule]", "1"}]}], "]"}], "+", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"NpPlus2NP", "[", 
            RowBox[{
             RowBox[{"-", "x"}], ",", "100"}], "]"}], "*", 
           FractionBox[
            RowBox[{"ChebyshevT", "[", 
             RowBox[{"n", ",", "x"}], "]"}], 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["x", "2"]}]]]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"PrecisionGoal", "\[Rule]", "1"}]}], "]"}]}], ")"}]}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.806257090132531*^9, 3.806257098817921*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(100\\\\ \
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^2\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8062571007445745`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(100\\\\ \
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8062571007485714`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(100\\\\ \
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.806257100807517*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: inumr\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8062571008254995`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.333642738384766`", ",", 
   RowBox[{"-", "1.4135798584282297`*^-16"}], ",", "0.9522340641633906`", ",",
    "0.`", ",", "0.05934185218766805`", ",", 
   RowBox[{"-", "3.533949646070574`*^-17"}], ",", 
   RowBox[{"-", "0.778448153277736`"}], ",", 
   RowBox[{"-", "7.067899292141149`*^-17"}], ",", 
   RowBox[{"-", "1.086600726341891`"}], ",", 
   RowBox[{"-", "1.4135798584282297`*^-16"}], ",", 
   RowBox[{"-", "0.7847301552100951`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.806259264423584*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"First", "[", "c100", "]"}]}], "/", "2"}], "+", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"c100", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "11"}], "]"}], "]"}], ".", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ChebyshevT", "[", 
          RowBox[{
           RowBox[{"n", "-", "1"}], ",", "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"c100TakeTwo", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "11"}], "]"}], "]"}], "]"}]}], "}"}]}], 
        "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.806260066345272*^9, 3.8062600880152035`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {-0.6721750382848524, 3.363438694960957}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8062600909262486`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"First", "[", "c100TakeTwo", "]"}]}], "/", "2"}], "+", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"c100TakeTwo", ".", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ChebyshevT", "[", 
          RowBox[{
           RowBox[{"n", "-", "1"}], ",", "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"Length", "[", "c100TakeTwo", "]"}]}], "}"}]}], "]"}]}], 
      "]"}]}], "}"}], " ", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8062600278942385`*^9, 3.8062600472928095`*^9}, {
  3.806260114007207*^9, 3.806260120967231*^9}, {3.80626298710649*^9, 
  3.806263011130411*^9}, {3.806263056360464*^9, 3.80626307260061*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
1WGjl9tFf//7h/tz8E/PIwku+h+bZ18R
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {-0.9713782537527098, 3.5807537755439176`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.806263073303535*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"First", "[", "c100TakeTwo", "]"}]}], "/", "2"}], "+", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"c100TakeTwo", ".", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ChebyshevT", "[", 
          RowBox[{
           RowBox[{"n", "-", "1"}], ",", "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"Length", "[", "c100TakeTwo", "]"}]}], "}"}]}], "]"}]}], 
      "]"}], " ", "+", " ", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"c100TakeTwob", ".", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ChebyshevT", "[", 
          RowBox[{
           RowBox[{"n", "-", "1"}], ",", "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "12", ",", "16"}], "}"}]}], "]"}]}], "]"}]}], " ",
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.806323009138116*^9, 3.8063230118787556`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {-0.7955041547057171, 3.793219855145906}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8062630753044662`*^9, 3.806323020692417*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"First", "[", "c100TakeTwo", "]"}]}], "/", "2"}], "+", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"c100TakeTwo", ".", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ChebyshevT", "[", 
          RowBox[{
           RowBox[{"n", "-", "1"}], ",", "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"Length", "[", "c100TakeTwo", "]"}]}], "}"}]}], "]"}]}], 
      "]"}], " ", "+", " ", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"c100TakeTwob", ".", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ChebyshevT", "[", 
          RowBox[{
           RowBox[{"n", "-", "1"}], ",", "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "12", ",", "16"}], "}"}]}], "]"}]}], "]"}], " ", 
     "+", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"c100TakeTwoc", ".", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ChebyshevT", "[", 
          RowBox[{
           RowBox[{"n", "-", "1"}], ",", "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "17", ",", "21"}], "}"}]}], "]"}]}], "]"}]}], " ",
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8063226114922867`*^9, 3.8063226269674015`*^9}, {
  3.806323047438308*^9, 3.8063230721968317`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
EX2ZtQpzyTtUvlFngaZnOOQ9jXFoNKdqzSxcoiw2zRxeg7knb6M16vD5TbaQ
6jdrsHB6/s3N1lng6XUrSy1eh6UqA9rdiVmQPnugiNr2E9ZazvC7s8/BWERJ
NuH6JhCsu9ZPc80Btfi6eFzSJrCy2HV+3zUHCZaTl/x+bML+c9mhJvxzoMrX
/l4v/B9czuZjPy8yBxfXb49ftyGQwtxXGQjyc/A250eNCdpCOnEif8757hw8
9psSePKEiWQbJkx9Xo7P2939PbKVlaQZbnqPEc1B149AEu8xVpJsRDLxddUc
+H30Wj2ty0r6FSl8l/J5DhTHY/5TzGYlecUKs36hzcGkyJHfeqo7SDHJwtrc
43OQHUBmtwhgI9UWCE/l7ZwHirxqi/4yOym90DRYjnMebN8daWHk4yD5FiXL
VxPnIeTq5aZHZzlIaiXCrzt45yFAnm1fjCcHqee98PE/QhhzcXD/YuEkLVQK
O109OQ/TCnKqtYGcJBoyFW2Tm4eClZzc74mcpGJqcpPBmXk4sbz91lo+J8mh
WljIFs99T9Qvf/dmThLDZ+HPEcrzYKzGMRLExkXibRTmHDOah9+9jYFdzlwk
udX2ZWOTefiezFjV68dF0t33qmvAbB5usn0fyI7kIsVYzyZ0Wc7D8bqtvXkF
XKT97CVS3x7Pg6J7epU0nYsEJ825lJ7Mg8FOdnnvWS6SsRHfau2zefA3vBKW
vMZFSs5zKq90mgf3M7ljkmxEkpj65WtF3vPAU0B581iGSLrybP3oMd95sFew
nZlWIJIsE7OIOf7zIPI+ZVXoCpGUvbizNy1oHjyfXzJv0SWSvvFSK4RD50Hw
jIPiFRMiCU82KTF8HjTe50453iOSjgZ1WkbH4POfnt/ne04kqZf6qPDEzwNB
WPuzqyuRZEuXlw5NnIcg+tf+lFdEUpF04jo5dR4eXbCQ5Q0nktp0r/dtz5gH
ouCjtbuxRNKKKyPyxveG6dCCjVUSkSTbYuHtmjcPpkyMgfE5RJLOT/77fwvm
IeyTxvvPhUTSU6EGVcfiefjvcEh86jsiKfLqy//W387DU6F0z5MfiaTSR9K7
7Uuxnk3+gheISOqJHtlYKpuHdR2ZO3Y1RNKvqrB+6wqsX5QwIfCFSNo7o0id
QfOgu033xbN6Iuks8WeKRfU8oLff77s3EkmG8m9ejdXOg2/KvT9naUTSS1PD
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
C/X//+8/RMwTNqsW0j9Yos2i
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {-0.42927971037453205`, 4.71331470312559}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8063226290066185`*^9, 3.806322741869447*^9, 
  3.806323073716608*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"First", "[", "c100TakeTwo", "]"}]}], "/", "2"}], "+", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"c100TakeTwo", ",", "c100TakeTwob", ",", "c100TakeTwoc"}], 
         "}"}], "]"}], ".", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ChebyshevT", "[", 
          RowBox[{
           RowBox[{"n", "-", "1"}], ",", "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "21"}], "}"}]}], "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.806322758179829*^9, 3.80632280736217*^9}, {
  3.806323109545935*^9, 3.8063231165613165`*^9}, {3.806327122838055*^9, 
  3.806327136816475*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]], 
    LineBox[{{0.982114905108986, 0.23063319611706273`}, {0.9821528393118948, 
     0.22621179240185285`}, {0.9835256962565057, 0.07552763931504825}, {
     0.9838689104926583, 0.04001441921527116}, {0.9842121247288111, 
     0.0054407466524711845`}, {0.9848985532011165, -0.060729107303211016`}, {
     0.9852417674372693, -0.09224394028041372}, {
     0.985584981673422, -0.12265650779021209`}, {
     0.9862261698217276, -0.17622389883134318`}}], 
    LineBox[{{0.9969691626370596, -0.17622389883134318`}, {
     0.9972542657026149, -0.1443743033236865}, {
     0.9975974799387677, -0.10287906228021826`}, {
     0.9979406941749204, -0.05815165009587986}, {
     0.9982839084110731, -0.010112524411598267`}, {0.9986271226472259, 
     0.04131914155004468}, {0.9989703368833786, 0.09622547488681699}, {
     0.9993135511195312, 0.1546899190793689}, {0.999656765355684, 
     0.21679725021559038`}, {0.9997288941127797, 0.23063319611706273`}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0., 0.9999999795918367}, {-0.17622389883134318`, 
   0.23063319611706273`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8063227918152246`*^9, 3.8063228080030904`*^9}, 
   3.8063231172304497`*^9, {3.8063271332609262`*^9, 3.806327137467523*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Re", "[", 
     RowBox[{"NpPlus2NP", "[", 
      RowBox[{"x", ",", "100"}], "]"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.806327772069259*^9, 3.806327788144116*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8063277893326144`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({3.3747516301604454`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.1167282376600696`*^-16 + \\(\\(1.0018028073766061`*^-16\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(2.571313208002349`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8063277893775764`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8063277894654922`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({3.3747516301604454`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.97758476261356`*^-16 - \\(\\(6.310056643865636`*^-17\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(4.137105103704818`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.806327789528434*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318530013645666773726079921922200435466243639837102819001302123`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\(\\(-2.949029909160572`*^-17\\)\\) - \
\\(\\(2.7668839441830073`*^-16\\\\ \[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(7.920379641064819`*^-14\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8063277896812906`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.806327789718267*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.806327789829155*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8063277898651247`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
Pc9DhLC7cj8c7JrQjjdpD3/vIcL8jeH+HNcurHPQNu+vMBGcRbMsW+Qo+EvF
OQ52KSIMSXzf/VGzADMfbNTlOkWExOMHOM7MJqE9HJS4reeJoEP/F75RmoD0
EwIXd1whgnqoh0BVURcOVb+rvOcmERqD9YXl2Amoc0Lky/57REiWFbn4/l0Z
3v/p56Dw43V/fcJh1MgubHgsW078BRHOc6gQ5djiUGSTg5vUGyI8ecRvXsHT
i/tfXmg+7k4Eo7x3528J9mCRPZtFT38mwiavR8nXRTuwSRHtxbkwIvB4bElW
WhzE8XdDqi7EESE+zTP6uSUZjazd51NLJ8IN/HSMsyMNi0eJP7haSIT75S5r
4kt92PziTJZWFRH6w45KWhmV4OShfDY9ChGmZ2P1Dh5i4gl3Zy2DFiJc8dXf
dis/GkkfVY027iOCS5zLbvlSGnpazzNn9pMIEly0rG1UAsqwYp63XCTCwPmN
vhM4Ds/xRnx+/o8IuVcjuLI4i9GJbNM+u00kKM39ohVQREY2N6WOveEjgX/1
E8VtHn4479eCy9v9JBj8d/uvam8/+h2Cqe6HSWBl5XE5Q64XnUFugj7HSLDb
4thU7Lwbdui+8sz/LAmm796sjHrUi7ELX/lXZRIIHik0kT6Rif8Kd2z7do0E
hY9kk3uOtSPF6uh70fokKBmaOH2iiIhdzMzTfzxYt7d8p+RJHkIVm47/S7Ek
wVu9BZ1Z1I/FdWTzPV+RwK594uOQQCX2i5B++ugdCRQcZy5u3k/Cv0clD6v4
kuCOsHGy+PdmdP+ERI9ICAn+XPJ69uuVMya/OfKVNZYEX8NejnE5k5EM+fC1
njQSEC6tdLwILMBBO8Q4SwpJcOrqK++jxR147a5oWSiBBFWWH6Tkx9vwwx/C
dq8aSeDCGxQZVtSHKLOCMrrtJECvW16uhLVjOXRw5MQQCT6ds7XbQ6Wi8A/7
v2+fIcH4gKzwwpZYtIEmcGt6mQQ3X9wTejTViiwE9m6jbCSDnnXR3xNuIZhu
uoeUxEuGDL+CrRkzFKSQsdvZQ4AM3DkNKR0be1D08s5TD8XI4Jf6+e3X4A68
SZlv+uIxMiSOXOhedCKiZ5+2/xBCZIhwPaRPtqvFrW3b7v1TIQPhedr1HZNM
rCTK81/XDTI8vfP8hl1bK0qw4m4sukuGjW+k956KKsW8hZvdg83IwGpt/uQy
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {-0.16383729620083207`, 4.941280202538715}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.806331063430151*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"First", "[", "c100Take3", "]"}]}], "/", "2"}], "+", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"c100Take3", ".", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ChebyshevT", "[", 
           RowBox[{
            RowBox[{"n", "-", "1"}], ",", "x"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", "21", ",", "2"}], "}"}]}], "]"}]}], 
       "]"}]}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"c100", "[", 
        RowBox[{"[", 
         RowBox[{"2", ";;", "28", ";;", "2"}], "]"}], "]"}], ".", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ChebyshevT", "[", 
          RowBox[{
           RowBox[{"n", "-", "1"}], ",", "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "2", ",", "28", ",", "2"}], "}"}]}], "]"}]}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.806327026554778*^9, 3.8063270874841433`*^9}, {
  3.8063276314371595`*^9, 3.8063276323463926`*^9}, {3.8063277262064095`*^9, 
  3.8063277267714386`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
xCUDwMs/lx8L9f//7z9UzBM2qxbSPwKHn70=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwUW3k4lV8XNZUhFCFKkiQZS5IkW0RSZEgRoUJKhISQzPN0J1wpQ8icZEp0
zEnIPI/X5Zr5IZToe7+/7rOefc4+a68zvHv9cY/ef2pgzUBHR/eRiY7u/7/a
1tPtVTNGKu5HWxm3bl9RoeXfuj8qIA/Tq6f7vj46Dnx7uqM+CVyGzfBH3Hce
nQWZ8zzpbwRuwpMaEdvHthqg1HamAC9gBXWPmLK2rYyg6nXt2UgBF3BodPzk
etsa/H3D3cMEAqBMaiUh5ehz+CpoU3KrPABORai3/Kt/DpulqmsipoFA+WW6
tfTIFZ4s/nr6JTEI3FVZ77wocIObppYP54+EglQCG1vPOQ8QO3v2lq5YFFgx
nYhclHoFVi5LAqECRBB9XfPvuU4AnGHEexQ6EqFsKvXoj9cBwICXHxz8RoTL
mzE/0mcCIOnDi0QZVxKw1PZ4Uv0DYWCW8UhXRyw4CnPpGBUGwY17/KJHIsgg
6psb5v0rBISWywO0Jsig/OHZbZMLoTDvfXfSSSkBCiLOHX7rEwphiakZddMJ
QLzoddSCNQzqeqVOPtZIBGGhNx/x+8NBSfeSTPHOW5ASPvHLljUSWIYnokaM
ksBKQcr8pEYk9NoFLTHnJUFAj++bCz6RUF5nbZwnnQxEPl1BvbVIMKZkC9AN
JcP1rReP9ndFATr59zuROQUsVe+VKbNFg5iTjsfJMylwqlVaLQ+i4de/pQGD
sBRojptntsiMBvzhs4npiqmQfe1sjpNiDPyxCrquZJUKUc+/SOH1YuBebu/f
1uhUyC+9HahvGwOnLnjc3ZxKBXcHa7/s2BhoMUZC10jvoPzZdlzJYgywEK+m
LP+XBl8HXQ80hONgS3F8K+VgOrinZAnYJeJgcdj9lqF6OuS/2E8oysVB54nM
PSXEdOBXiCaeacbB2y+7XT3PZUCBd2xf32484CzftklZZoDQw5NR8Tx4CNil
IDkSkgG2AuIX/xzFw6Mb1mOqAxngIsr+JPUCHuQnarV3v3wPDR8Zy7wf4+FE
iGl6afp7mFJ/0KP5HA8HpVf/2ba+h4LzE9P5r/Dwz1Wk+MeRTKgJpmc3J+Bh
5VD53pdamcAmYViYlogHapX+YxmnTHDZJeMelo6HJjbfI7iaTOjRgXdyJXio
/MDvoTaXCWqHi/PWKvFQcLOga3V/FuiOyIsY1eMh9fcV2XTlLOhgVOszbMYD
6e1o6C3rLEi9eStruQMPIepuVOaoLPCrpThK9uPBY5oTPpdkgccFPXamUTxY
yqmsHWLJBqU7uipRM3gw7O3WbTmVDU1W0WRYxIOml32Wt0k2hBD3G0St4EHx
6C6mU37ZMPZA7IbHOh4kGxLNx7Ozge3KXg/GP3gQspP/jO/MBgcF7q8nt/Gw
b1/z/st/s6FNwpFl4R8eGIsfOPwSzYFl3EMtHQYCrJtsNWbo5ADPZ/mn2kwE
mNnBHzN2zQFtaW5H6i4CDL2T8GZNygHbvedVDzEToFWrpq/8Ww4MPBjvWcRw
9YLJmSfLOVCopyZtwUKAIvx/kYcFciH5Nl7lCYYzzoVOt17KhQB/ZhY+DJOH
hNV9HucCU0RviBk2P8K37M1pQi5QFs/VwG4CvBLT26R8yYXCf3dLEcbH+QfN
gEjNBf5Fb/shjK+V46s8DY48WEc/50h0BLjNe4Bl42weuKgHXpjH6tUuz7+f
aZ4HVuudD0cxPZQtNCtNgvOASFl6+XQDD7JMIwf2FORBgDN7ZOIqHkSynjtX
9OVBk4JZhs0SHnh0OVrs6fNBLWvfcMssHphX004ckciHqFETzY5JPPyJU/Zr
M8iHNXmb38/G8DCv3DXk65kPzgv39n4awMPouN25M2kY/u76LroLDx1BjHhq
cz6IEX90sLbiobRN7soVoQ9gcOerby/CQ9TMvJaU5gewcn/01aAMDzYM77W5
HD5A9kGNuacFeOCTP6Q7WPkBRC9YZcck4WHxeveNqskPYFabEk6MxcNE4bfM
jt0F0BHFsKUUiYcvP3yzS2UKwNjhqILjC+x+9JlLZqsVQN+SpcU/BzwQqBdy
E28VwMHluvbTVniw2/6V5+tdAE9W+y19dfBwSPbxx2utBcCZMS/ffggPQReu
yKlQCiCN/+57H07s/lwR/XRqvQDMHa/IdtNh98VypIhX6CPkp4YFO1Bx4IE3
KBu1/whNr/zWHr3HwdRb2fMdvh8hYo0l5WocDgxy2MvrSB9BzaI0uS0IBxJ1
DV+yKj+C33Of/m4rHAz8UkLPOAqB+2udXoMgDjQZ+FVtjhbCrcJ72TOsOCjk
/FVlfLYQCilkxtL1GAg78aHm4t1CkMfpS+r/jAElk2MNzHmFcMcEPxvpFQPk
ij0tr69/goAHj5t2R0cD0/dpnSjLT5BIV7pn3jwaHLvrW31cPoGebY2XnEw0
aC2+arNO/ASZHurZU01RsHlkrVN2/hOUyYrvYt7G3mP/oYHa8CJYK9RWYdGI
gH1jYlIPU4rApSpOInp3BHxXdnrJVloEiR+K/B2+Ye//+i5hfUoRCIoznlW+
Eg6HHslajygWw75aHzdlCIMRXb+lzcliUE4iDxzjDgGrg+JMMqqlQOzcv4ui
6w+Cbs5G7UalUFAS/9hnxw+6OysyXOxKYZqzrDwnzw80I/WvfokthXnJBK8C
Nj84QecZpbWAYafCxgzkA7OTLfwPEsqgj6W2aFzaC55+fCYdv/YZRLsqXUO4
nGBRebzzO0s5VF2fm8x66AhPGnU9tgTLwecthZni8RRsR09+M9coB+GVvyNb
P5+AJceY5fHYctC7IlFPdX4Ieo+uEwvPfQHh1NMu4uomcOro8a1mjwrQUmgh
vjYxQPm5+JSdqApofHnqu/V+IySlSKd16l0FFL3/bjjYfBuJ3xgkEn5UgNfN
LZEYlbtI+CVO5o5gJXCWqXj+4LBCXP3b92iVlZD1n0DkTK8DWonpaaSnR2Dr
unlreuMFqnjyEah8CNb7qie/ZnugYK2IkgYpBF7yF5T+mHkiQTq1tHBjBK5M
KyejkBfSeJr3ircAwffchpQir1eoWUztNVG2CvBXui9mP/JDH4kfegKVquDN
m74dqPRDsQyHud00qsDHLW/ZZp8/ujeyEWJiWgXPe4ceWhb7o3VSnqtQcBWw
X3ii1PQ7AAnvEjDIHKkCkZSzWw2Pg9GuZ0GR5JkqKCkbsAssCUazY6uNYWtV
UPakQ6eEPgQVV7SCPVs1UPzHD9vGhiBtlwBpOYVqUNE6/aG/LBS5TCyxVERW
g9l55Q77sXBkon/3cl58NYgtjy28EolAKqjp1dt31SAs9212+kEEYn2dvu7z
uRpyOZJEP1Mj0FsDU6rGZDXsmz7wRWwkEjVWN6CfyjWgWkgYouZHo4zmv9TI
KzUgRyVlfqBGo8BeObbrBjVgI+l+Y4w9BqktvL3Z+LAGtPfv3elVjUEV/G4z
Vfga4GTO2tFLi0EJx/I4X72pgVuqJ2ouVsSgFzITZy5m1oDDe6Xaxs4YpHD5
hvfnyhpgPqV6oZQehwqenthfOF2D9XE+2VPGOBTlcVfRcbUGVmRlVovtccg+
kHBXZqcGCtPI0kf8cEji9b/32ftrIbOz3KsyC4fSGnqV36nUgg1R86TgGg75
tXPcv3e1Ftjl2El5u/Do3pB68JGbtaAgqXK+mw+PhFY+tL9+VAtdTDyek+fw
KP5wiA2RWAu7nVwSd1zwyFX8a7hBUi3IrM46K/jjkdGZtYJ92bWgtPnPkh6H
R9xXLbciUC3cf8ghciMHj5YNY4WvNdUC2/UL2u2lePTTvFmDtbsWLKXc5Cdr
8SjCRTEmcLYW1p6u8VQP4NHjVw7F6r9qsf7zsUvIJB5dDUsboKerA6GRu7Zj
S3i0O3nfcW/eOqiZXdxSZSQgaramtrJwHUQcZRS4yk5AtcVeT/9I1MGQh3/9
GA8B+fyY/uyqWgfz7B0TlaIEZN4jNCp/rQ5izXE0BikCujh+k2nVqA7KTqe+
7ZEjIMH5sJMfLetA7qVjn+J5AvqzXqX71K4OZp3+2ZwEAuqj33gm7VoHEsOz
QpmXCaiUXZo851MHY362vUVXCSj2wIOvWeF10GN29fENXQJyESFPPIzF1uv5
88nNgIAMpH+yiKVg/NeDCdK3COi04i4Zak4dEF0SZh1NCGif+gXD1JI6mKr3
fHPJjIAWdZzcLavr4LEAHyHJnIBajN+/EWquA9fLv4rCLAko98FwzVBPHVxP
vrLEcJ+Awhz2TyeMY/l7Rk6xPCCgRy+ucpjM1wHL+1N2CRjOPsR113y9DvJv
bPB+wfB8ZV/uA7p6yJAtj3fDsLRl8l9btnoQZZha+Inlc2Cwve7AUw9BwjNc
dfcIqCBNNvGZUD3Et55hvImt/5/mxpy7eD0shirWvML4yc18veAtVw/LGk/0
r2D8XcKDwv2V66EiVbM4G6uvRFp3MESzHsb41daysPo3fvJKRunVA4V3iE/D
kIAUnYc9CHfqIf8g6YTXDQLy4ElvireqB7+6Zbkb1wjoS8mTg28d6kGl9fmV
r5oE9NdY/vE793rYx5H//PslAnr1ppY1P6IePF462BUpEFAVhJt8iq2HZjoB
c+IpAmKgGGSVJdeDIvOXqn0SBBQgRtGqLaqHy5kaaqOHCKihMSu+8Ws9pJ17
kHgaOz/Mdk7TLY31QBc6PiSMna+wD3QhfUP10Bbu/qbnDx416zf2Dk/Vg/LD
Vts3/+ERx1r0iYnleti02Cmgn8ajGMUj3xaYGsB229LqXScekaov7maUbgDL
YzMv9TLwqOfBrlss5xpghNSoxZKAR/y7W9I5LjUAkePIYYtIPErQNtPgN2qA
orqjrbPOeJTc6REg/bIBhAMUzviexyPKc7UuueAGiFjJPawogUfH+NlEFXFY
/l0+gjEH8SjDjFyrlt4AjfeqfEX/4FDOZCmDcUsD7NN086EV4dB88CuDu70N
MPRph/QhFYdkJK6k3h9vANd9O5qHYrD3x6Hnkv2vBthtoj4x8giHSjbWfPwO
f4P7Mh80jgrgUDWr3L9c+29ANyPQN2sTg8RvnioNc/8Gf+aMX/LoxKCYtzJP
bf2/Qdui9fF+uRhkeUZy9Bj5G/Bzkavs/kSjHTNRlFD3DS7HZT1PPBiNlAr4
XoUcagSqfaUF/7lIlPqH55yNWCNU+RI5rTew91pj/5L66UYQ3jdPt10Sgfr6
91r802wE1StvUnjkI5AbIyu4OjeCchy9NYdYOCq6tbXz4HsjDMWPZgbPhiDB
lN8ll7oaQeoBV696cgjyn9twODKKzf8gTmdtFIIMfNZGBtYa4fqDa6rDlcFo
OWvhq77wd7Dca6LcGxyEpLdHvcHtO7TpmzuH0wegjHd1OwePN4HlnqUjv+Ve
IsfAm+Mg2wSqW/P/NsK80IWH1Fqr800wvWvyrhHFE7VJMIXm6zRBlWBZ5Plo
D/T7o/p+NdcmWE7Rt2SjuKHrVTUnHn1rgj7X4xcWHZzR6lCVXumjH+DYwXLh
5bYZUuWrTDXMb4ZEK5eGTIoDMJF4n2qUNQPPT8cDrEcdoXG/w4VzNc3weEW6
1KnNEW5wHek62NMMu5VeaOvJOIM5u+8uynYznKB93xqedAFPBg1bR50W2PTR
3H/wkgeULDZLR863gNgB7r/FV/zAw/74H+/1FlBTL5+3iPMDlfmXDY50rfDn
Rc5wzpQf1M/IWNzkaQXR3C8CxwL8oYsaE3NIuRVsunxaLMsDYGXg5mpWeCvQ
0WW05XEHg/S3obIGiZ/Q+3VrV/LDcOBbtFuIOfsT1OM4ilbywoGOd+uoqepP
4Po5ifmNcOi6LxC+ZPQTRudbihe9IsBrx+guv+9PCDJ7pmEWHAnNZ3/SP+79
CfEXjXZNvoiGEjNzBXnKT2DgdJ4aKYqGZP+FxzvzPyE1VzWcdykayqd3Pb5K
3wbWG4mR5FMxEKUg2jnM1wYKWuwCjG9j4GyHZfputTYom81SfmSNg2zrTGR3
pQ365pTaXb1wIPR7qb/tehuo39FqPUDAAYvwK87Xt9tA1JKFzIVwMGT/xk3W
HsMvaSJdXHjQp5/EEZ3bQHI18vWT43hoIErl/nZrg+ebJxcJipg//vJlrNav
DTxxPXsi72J+nnXgqnF8G8Stu588lIqH34lHrSrftIFvX42FYCEeHE498hZ5
1wbdzx3CM6vxYHx7s3A+rw1cyguYLDF/3DILLfqf2oDPWsQjbAEPat7BtJKy
Nkg1KJRX2cKDVDqfoG9tGxibd9CAlwApiuYKU41tYNfZLBR5lAB8zel611rb
wPVM1YH70gSgW5UP5O1vg6i1gbkUdQI8D/JK8hhpA5VgU0F2XQLMCtR9Hp1o
A+/+iM9/bxOgS9VwMWuxDXa7pTI5PibAn6SJN4WrbcB/KO2MlTMBjv57pvNl
sw3W/cIjFl4QQMucabt2uw3CshX69/gSwKGSmNvM0A50LFh/GkwAouBxs27m
dlg7G+izO4oA5Z7Fe0bY20HOX8iDQiAAs1LP4yW+digJDe299ZYAMmSbg5uH
2mFTi0JbTCXAzc3173RH2yGjV7jg4HsCeNwOfsEq1g6Ox86zD2QTILnkwElu
yXYIYLYdkMonQANvZt/BUxgOld/i/kiABRfFkGNn20Fq0FE/4hMBeLoaz0kp
tQP7pws18cUEUDpjQpOHdpg6Tn9WsZQAlviZ2IuX22Fg0JPwuIwAwf+90NS8
2g5PVoq/y34mQL4e27qubjsYLLE2BGO460NC+m3Ddkh7d+yFM4b/cEoaWRq3
A5WVvmcJmy/s8IXp0d120NtYaf+H5ddsuVbkdB/jx/rWKrWEAPZSQw88HrbD
uuhWcG8Rplf4k/3+T9qB56ixYlIhptfs35pwp3aoIhu7/P5AgLGrkc5E13bg
U1hXnsolwO6swyJvPNuhTdOXZJ1FACmW/PZ0n3ao00zxd0sngOFDFd/8wHag
HDXaK5iC6dfQij3w7WBcvapmmIjpd9xiDEW3w9AeKcnDcZh+AUvRjcR2CAnY
1fsCh+k38Qraye0wf23s9qNwTK/U5LeUd+0gf77nJL03phf9ad25zHZoYnbI
ynIlQJBl9fZqHpYvmM500oEAnUIUs11l7VAUPt7EZ47p89KZnbOyHRRFXZrY
jTB9hhkq+GraIeJ8qHfsNQI8eX3skHgzdn40YpKtz2H18Vv3a4+1w0EyibTB
itXn9ivEcLIdgvr1V6K38WDYE6hoNovp5cz3onIZD8nEjDj7tXaw9Ruc6+vG
w3muaaMYlg7wpvdW4n+NB0tH911kjg5oa9DNsQzH/P5PluIU7g4Q0fqup+qJ
h47IkzyfBDuAv/XP4wYTPDxhs+voPtUB7iWk4nXsPcio5CvRVugAF8v5p9bb
OBh1rCGjCx1QsHHmuNk05vd7Be5laXZAfCWH1UQFDhTTGpe8zDogZk1b4KEl
Dpxvu3T+d68DJJzwnse0cJDDJlxq87ADCskay3ay2Pvk5Oat59wBFNtdt9/9
jQEmFTEO0ZAOWL/6L68CFwMq/7Uvx0d2wNhfLZHZ5zHglvayi4PQAWnOXv6Z
JjEwy9b9euNNB5jbuxcOHImBtl5/iR+fOkCLo3rkhm40JDqNX3EexebXaLtw
XY6EHtFISRq1AwJuaLfI/4uAvX2Ke81msfqav3zDfY4AP5WYHo1fHaCa9sLo
n2QE2O4Ba4E9ncBUu3+xjzkc5NMT/aoUOiFXzHL5wJsQ+NF3u5IzqhOUaX7B
t6/5g98AjfcxoRMad5k3r634geKQm0N9fCc8UY1I2pvgB2mjcUe83nVCori2
T8OUL3hN9frOlHXCTam80ecePiC9dluzbqIT+n6uTMYJeEL0XuOfL853wfKs
nvDfYnsw1DQep1K7QPG/+/rHLKxR+f7TPydmurBzmSLLPWyDRMZZKymLXcBy
OJDp/R1btOL5JX5sswtU2T7WJd+0QzEfhfSG2Luh+ddtTpcUR9QsOPm1U74b
mFz2jRb6uKLLq06JNQHd0CmTQ51Y8UG5Vdph1aHdMK17w+PVNV+0P+qYe1VU
N+z8++9f9TtfRBHvNvwa3w1nk91+njH0Qz7minvKc7sh+r5KMD7PH1V+33nx
sasbFL49v+mnG4QUksNvJ4v2gCntcUb9mXBUUP3qxR6JHjigrnn4k384kpx4
9tpVtgdyys4/Xe4IR8JiZqPXlXogt7u2U/9pBNqTK/Xw940e8Cp/1OWcFInG
SltcDTx74I+K0wejwWhk2l8dX+mD4dyM7OS9MajnT3G5eFAPBC1Kf5c+HYN+
XHy7sxPTA77Lx/ezPYtBJbUOQTkZPbB8uTqm4L8YFP5zbyxTRw/cwbnEzPXj
0O7/GMue9vbAMNtvj2nMj/pwb/YPDPWAz+kLUQ57MX9pNHb4I60HuGpusuxX
xyPLwYL0u9s9cCtrifI+DY8G/6Z9a2TohayXonF9X/DolhB55gxLL0ScHHSJ
6MCja/d8pdn294LbSTuaxw4eKdD0i0vEeyGF89qahR7mX1g0e4/K9MKZYwcl
4jC/Iymh9DviTC/MRdrrX3clIGF7kYsPVHqhMfQMn0wCAb2O4rNoVe8F7Z2y
CJMcAuIrYPM9f7UXBC3/y6CrIKA9qyt1e2/2grKD9xs0SEBBPLQpD5NeaEpo
te+ZJSA6hUGWKfNeiFlo/27zm4DW3WuvVzzqBTWneLkVHiJyTCh1OPG0Fwqk
enTnjxLR3JecGLxLLxzkq+c1lyGisR1Cl+2rXmC8fHgmQ4OI2Ofbwt0CeqG0
rJjUeIOIFPs51INCe2HDUXKfswkRxXwK/viO0AslVxLPmNoRUUVynW1hPFZv
96BGwjMimo6kF65+0wt2i0GbFp5EpGrrGTXyvhfYhbpkvUOJ6IlRmcZCbi/w
EEvP9EQTUbzar79bH3vh7J+onk8kIqqTlStiK+2FU6wLI3yviWhZ8KmdQAWm
d8Upvn9JRCTIlisiXt0LfSVBWk/SiEhrY7pfoaEXLv+bvWyeSUQu1OM4jR+9
sP5Icrgrh4hS2u9r3Wzrhahjs5M/84mo9WvSv/vdvXAx963CjY9E9CdnqMRp
oBdOhMRnGXwiIjGygIPPaC+IW9EJDhQRkUHQrePR1F7ggAH7yWIi8n5GGHoz
0wub1N1+LiVElG3ZRshd7IV98poqwRju0eG49mW1F3ZHnQs/jGGGC9oMTZvY
+AHTm+ew+TLiwZ/7tnshl48/pAtb7w5vnSONoQ8KzhQd+IXxCWKgF19n7gP+
evON+A9EVLh0cZSJow/CrKWFqnKJaGTII3Y/dx9YTgsGPc4iIramUh2RA31Q
Nc8jFZ9ORAqla0ynBfsg6sTU3qspRHQ/7XQFHO0DFr/r8i8TiSgK5/BMV6wP
HI3+eysfR0Tl3jkSdyX7gGflkfFTHBFN2U2P253qA/Hc80+kw4mI2+Q42eNs
HyhC57RDABGpaN7XC1XqA+FPcaNnXhLR4zNJzPHQB2msfVZez4molkPAtfhq
H0RcrPOIt8L274+RdJ1uHyj7Nag9McX2bxpP7TDsgzWu/5jr9LH9qmE3XL7b
B66ZP/npLhJR8oerbP/u90EdxeYT9TQRNScGVXPY/j++NK0jRkSibnSnJJ37
YKSNYSKfg4j0rC7Szrth9boycL6nIyIvfY+3Wl59UPh6KFl0lYC6JNfYbYL6
QPXeo7mCHsyPj9FmkhP6IFsw9ixvPHZfW0RTPiT1gdiZ57kQTEBD5feMv6b1
gUvcscL/nhOQPGmwYTC/D2If8hYv6BPQ5NWf7/hq+6CHv1H7BhMBiYafiMY1
9gFx4O1bhkU8smp+5cHe2gdUac5fkr2Yf9Y9pc/Q3wcMUg7fKO/xaMQQt7Ow
2AcSaXIFy2p4dJg0M2O71gcJ9f3ZD8TxyKznUvfEb4zvDR1tfQ7sPTJeyeln
6ofLJWr7k7pxqO+uoUn9wX7QVRSdPmCJQweSci6rCvfD33FvlmeXcOjWGOOp
L8f7QXXS7JGuCA513S/a/fFUP3hNijKGUmJQ+0PeokTNfrCsY2QWvRuDmpx6
OV2c+2FslGPtnlsUYv0k+2fRrR9iFHj/m5aIQlprwZOPXvaDYPu6Z8RwJPrm
qlhhEYLlx1HOn1aNRHWe5EfX3vZDfFdQq8RWOKoMNK0TacLmHx67UHU1FBWQ
R1+0Hx2Attpncl0m/ujJScEBuRMDWP9901Boww+JfzZWIkoNwGZIzesegh9K
6mv/c+vcAPD0/eNN/OGLog7UeQ5dHwBRn0d9dfI+yJ6U+ZLmNgCqY3brA6Mv
kATOyXe7BcMjN49/fm6L0kMYQ096DMJmjMXGX0ZH4KaGeMu8GgRHa+Unkd2O
4AOcLmcCBqHAr1O6JcMJ7qzzW1yMGgTxs0qNGlrPYK+VzFn91EGY3kPqCA1y
hRdgMu7eNAgV+kbXu+a8QGc9/3zjwSGgu05fWpcQAOX68rItR4agxlT/b8Dv
ABDP+yzaIToEFUbxd37cDgQGq7q9QzJD0Kh/hjzGHQSl7f2TS2pDIGEUemzG
LxiO5jHhD9gNwcHLvPN3tMLg14M7szZfhiDWZH5/knE0uO7f2t9XNQQ3WN3s
xrKiYb3m9cWrDUOAK4iuV/6D4aPDMZLtQ3A52nOv0PUY2By1OLc8NQTnVRfp
gqkx4B5Nd+/e/BDcSitZfsqKg02VlLCO/4Ygf7ZZZ0gaB7/fUIaL/g6BQoS7
r9JzHPwxtQ54wT0M8krllDmsf/TYszt/9sAw7EjmKf0UwsNWeUav6eFhCAiW
LZcCPPwVmJZQER+GtOyvrfreeNjufdzOoDIMl3l+OIqt48E7eM/WM/VheGPj
sreSmwA7Crmik1rDYPW6wLleBsOkBbdvhsPQuGcy8YQ15gdvOgpFPBoGuQPs
63w/CODDyKW17TAM5rbXeI5OEID+00cnB5dhWNQRDiP9IQAD92qd3qthqLy1
xV1+ggh+1YTF6oBhMBrM9bS9SAQGJ3n+M2HYeKoh7aUBERjbntvxkoahytgh
ZcCDCAGv+EhBCcNwl0p6KBxFBCbZ0q8bScOwnndcuCkZw1GbXAPZw1ACI8Ga
dUTYfd2z7G3VMJD2eO1qYyRB0NYhyt6GYficcpNHhJsEu3Mq9vj+GIY6Nq/G
jiMkYGbbMX/QMwycn3zadM6TIOTz25CuwWGIZRlkPqBBApZHUKgxPgwH7Qg5
ynoYbvTZJT4/DAwW7+VeW2Hj3Y7Kkv8bBocs8SOd9iRgPVFjzLYxDH/17oRZ
u5IgrOe+n+dfLL97A5OBNwnYghhz5+lHgJ2n7lh8IBY/m9Z9l3kEVAgBvuci
sPjk5X+t7CPQ852/UhaPxYmT4qrcI8Dn5+ThE0eCPZeDDD4eGAHFXIf7JxNJ
oIyecjUIjoDXgaMWc0kkcFAyaRs4OgIjY6tBB9+RILlYLXpJbARy3VLelqST
oOOUlC6T1Ajk55U5oPckYMrl5RA4PQKjZ4Nq5bNIoHDi3w9phRFYuydvz5dN
AtvU6TC1CyNQyvsJrDCccLjj6m3VEWi50s4thOHm+C8sTzRGgLguX6OOzd/Z
n/7NR3sEcrpuS3dj+U9FRwWRboxAvWzsuQ5s/Xts7hrZN0fgH7dEoxLGDx94
jwmZjMAUu1ITZzIJ6uiu1Xaaj0BCRo2ULlbfuqe83/SDERjUKaNsYvWLbxy+
tG07Aq+iJyicBBLccWam43YYAYasveIxkSSIWFj+KvZsBA7NUQu8gknw1Xbg
5QX3EZhtYvbp8iHB0kStst7LEfC3YUyMe0ECYYu8LSu/EXCTM93b4EQCg4HY
8hfBI/A9MXja4hEJStoeKb7DjUCoNsfBnlskmL5muFEaOwKnXkm/K7xOgoPf
lEuaX4/A/YCc1T+XSPCycq/8evoILH0Rcv8pQYJ8xd8rbDkjwCmU99dUiARj
nygfjxSMgGjNwMxNLhJczi6WvVo+Arb6ej8ifhHB9XjS4l00Ao094qeap4iQ
mRyS51yH1TfUMuLeS4Q9caaSia0jIG+VL3aolAgd/vQnligjEH/X4U34U+w+
/JudZJwegd0JCk4XzYig4NGVxr8wAnp2V7gstIhAdnwvorYxAkyeLuqrQkSw
vKsjRNozCotqOlJ29QTA9ykMZ+0bBdfzfgzv8whQZyic+JV3FMI8RU7cIhHg
hPaqwPSRUQi6ZG677wEBFhXIvBfkR0GQbEbHtIkHr32T7ONmo8CX0S/gwIIH
iYFC1aF7o0DXcmRPI+Zv+9/5uPTajIJlnOSttEYcKJwTHGpxxMZz2XVMBeFg
+a5hTnnAKIxV7OfN3I6BBznVV4m5o8C/xWZOxt5X7ufRL6M/jsKy56NsfdNo
qFK5+zGsZBSoGQfw4uzRINixye9bNQqNajXk83ZR0LMpO23fNQpp9UN1h49E
grbm26Arf7Hxic2P8izC4C+zwt0UujEIWbxfpcQUBl3zghtCjGPgxR91ijkz
FPxKZiUOsozBdda9RjYLITByNQi/j3sM6A6d//LyaTDEO1be2z4+BgVpPQdE
DQOA/askXa8Olm/lSz7TTU9YuC5cFKY3Bu4a3gejHnhA6yCPrYrhGLBorDLv
d34B0b+3f6YbY/OVtBqlItyA+2xbksuDMdCzeLz4tPgZ8Oe6APeLMXB8pemT
X/8QRBMqvXXSxiC5+5Nqzis9tOtkoRz9+zGo+vu9jj7kJpoqzZgqysL4AdPz
FzHG6H13tK7ghzFY9u349E7PEklw3Rea+4zhLwcXTC1s0amQ3V9Dfo6BYqOr
9pScC7roemO79g+2vs5/9BenfdH642nPq9tj0PXB9TLJxA8VWPj+af03BpaH
rTK8mvyQyNVPG/1M41D2n6/xXLY/YhE8sLLEOQ6ZaSmds9aBqKt6ZOrQsXHY
J2x6I6I6BEWVuFmnHB+HooM6Y1ckQtGVnH1UMfFx8LYyHriLD0XlRLXx09Lj
UJVbdzHCMgwlP8wYvHJuHNb2C6yT18LREw6HtmfXxmGEcfgs2oxCYgzMN37r
jMP6l89yWUbRaHQ9qcVbbxx6CudPVnyMRgZj7U2hRuMg7aydmnkmBil+Oluf
ZDEOx2+LvVidiEFMJtuffzwbBy8R/MoxGTz6qhOrqO86DinDCi1njfDITU22
tMd9HIa35PvqPfFoVvJe0fjLcfjIe8nQ9Bsete3U5W8Ej0PbsQPmisYElJgW
8e5Y4jgEmgQsZVkQkYX6GeXRt+PwZ3g0NdqHiEQo/V0JKeMgYhCh3pBMRJlH
Tuzmfj8O4TcGB4RHiagoodqWrnAc9G7ceGZjSEJu523pK4rGIdow3TvfgYSU
+jgT3ErHgb3jicjFUBKq4jX7sVgxDqSb0S4nK0ioOWZdevjbOAScf2ckJBCL
omXfNMQ3YeMLz+31lIlFBq3qFjdbxuH0gUpvXvVY1LcHF/OjAxufd9bv36NY
9Dr73Mng7nGQsHt4QscrFplfHalW6xuHHP3etK7IWEQNklz9PDwOFDo5XGR+
LHp/vCP8+RimHwu6XFkZix7XuYuenhiHLdFwk2PNsUj6wZHK+clx2B4LYUD9
sWiZvsEoc3oc0sVZXkRPxaJPyU8WH8xh58eff5uwEotcYX/wkUVM7yrv7h/b
sWjby7IsdnUcXuZ+rurgikNVh5j1DdbH4Yj6Kf/kg3EooDxvhuP3OAxwffr9
ViQOXTG56fd9axz+9uhGtpyMQ2ybfw4G7oxDy5B6vuSpONQSm/JJlZ4C3zIL
O8vOxqGYs1rX/zJSYJrjhJeLUhwy7Fqklu6mwN3yt1LmKnGI7xnp5TNWCmwH
/nJ6fikO9XMp88myU6DRY2r0s3ocSiyg5M9yYuOvqXFJasQhixuhVzK4KKB0
QzOzEcMii7Jj93iw/AwWungMT0b0uB8+gMUZHhcFX45DmZIvufoFKMBwJx6f
qRaH7JqOZRMFKRCTqpq5BnFI5lGTmt4RCtgoJlTYKceh/5idBveIUEDu1/s3
HIpxqCjjgMs3UQokT7scHZCLQ24aX9n9T1CA7wr/8XapOKREtUpXkaBA0zty
5MrxOLTtt0fljxQFZgulr6gIYXoeLewplsXW0y/SKOKNQ/5Vxk+d5ChgbF4W
cJM9Dmla/GOWPkuBzJqHzEcY4hDrTnry9DkKDF240bd/Ixbzf9fPpylRwHlk
kPXMHHa+BsiPD6lSwMuuZ2e5LRbxvlBl7FXD4qrnOGJqsPN2gPYar0EBbvY3
3Hc+YefLSL6F9RqW31t+4Sk+Flke0kku06GAQ2fM/D7fWHRv3PrZQz0KCH2A
t5MOscjKPk6g3ogCZWHMTyS1YpH1mYL5Z8YU8DHdVn9zJhbZ/G5EIqYUkFEI
1rgsFIseBf6x9rGkQDnfrsgz/5HQ42v7z8s+oMDNAu9Gr34SesIlxT5iTQHO
S6cFtqtIyOHN3cILdph+jPvOpkeSkEtx1c76cwoYZP2MTDtMQq6e/e3p7hRY
lK94XvqPiNwuraTd9KRAGK9ixu5xIvJoOXat0IcC7P5Gu+5i/v7VZFCcfTgF
8Dila/QCRBTGq3OKmozpPzN48C8VjyIGrRkJ77D9yRnIV/2CR5Ep3j2XMijg
HXj5bnsMHsVIF3gl5VDAdv7axuB5PCJp7P9+pwTT992waLk/DiU/77/X/oMC
LOf4rFOXolHKhRV5n1YKmM0/PbkaFI1S6fewyLZTIG3wVBPr4WiUHqmcH9FD
AWUlvRGSRhTKTk/6c2UcwzLjlJCQCFTcbU34uo6dpztvrtP1h6AY+mOn4TcF
ArQeqifZhKDH0mOtaIsCUvX/qixWg5FQ4B22aroJ2KckF2nAFoyC5G/41rJN
QPJ+lrG7MoHoFkHxaaPQBOhRI9MPGviiDb091zo0J4D/F/WQ92VndL65gGEq
dgLoEg0NvzxyBMFUz/JE8gQohsb28cc7AZ27prNh4gQU7Gb5w9PgDI3Hhsar
UiagcaE887Pwc7jlyVz9OncC2gTCxGx/vgBnCfNX+jVY/gUejU1/X7hFd/Ic
S/0EDJnf6zTg9YPzPauLX79h/OI34w5n+AGdX6i5VMsESGUc5pmv94fo/qKL
zH0T4N5XHPJtOxByQ/b8rVjA6mtR/Hb7ahjEmPd8erY8AeznLmyvtYbBM/kU
O4nVCRC/mMefbhgOSmMKg3Gb2Pq8Y1dP3ImA7+fulzszUkFvRa6T1zQKpqbK
3MUFqOBDuX2Ysh8HTRX+p0YPUYG3OOb3bx0c5OF1p0lCVKhvyLB/GowDFxXq
bUZRKhgFcZXabuKAMXbvuREZKkiOvTui04EHYQ2bX4TLVMg9aX/34wMiDPl0
uwleoQLXvu3XFtFEiK+4/CftKhWa0h9amJcTgUv+2L9iXSrsndcR0+QkAcOx
MZY+Yyp43iF8j8jD+mXzG+GWplQIT7gvENlJAs+Erxwzd6nALvFj9OcmCda4
3nD/uU8FQbX9Z/guxcIk3R1BQXsqfL1gMe7eGAupyt/fpj2lArfb9QKL6Vgw
d1c8Ku1MBaU1JUMv5jjoWeITU3GjgjFDyRl99TjASwZlNrygAud9EeJuyzi4
8fCXxA0vKqT+MmGZ94yDxpFOWUtfKjj/uvfl0sc4CDioXjjtj+nx9Ibuh6Y4
UL1VKO8URIUQtcbUKxNx8Lkl5rxfOBWCKORXq1zx4MpKV8EWRYW/I3wkJvF4
kNN4qkKIoYJN8An/CxfjIbtCRz2NRAWzTxHX+azjwWazol4qngq/k98tlLrF
wzF5Ka3iBCrQnZP8zyM0HhJz2HQakqhws9t83TI7HoxpL37qpmL1j6du+n6O
B55jM9iXkgrnI9tMq77FQ2TCt1vTWVT4Zm5Fxo3Hg3aPQr9jLhUom+IFIgvx
sJs7w/R3PhV0zZRTWjbioUaHd8T3I7beeMAbHD0ZvEMDLNmKqLDOVTpqz0YG
pfpVCr6ECiqZsdn3uMmwQffA+tBnKmwG2F9+IkCGIuUO2rsvVOBYPsIQeYQM
ju6XHkt9xfarIf5CrSgZpIoK5ouqqLC8PqrPeZIM00tHnl6spUJ5/elCeyky
pElG/1dfT4XxyXPNYzJkuPdw55luIxX4fCYOPjxFBqF39us9TVSYuucqQnea
DAMjQ+4WLVRwSCy0z8HisQevb9F+UkHDZjDaVpYMBre+vHTsoEJwlIfYOWky
cOIl6H53YfpXc/TwSZDhRwvZz7eXCs9v0q4zi5EhhJV1F9sAFSxYu4DlKBku
a7gH44eo4LcVYi9wiAx0vjTWQ6NUiL5+OUmJhwwVFbci3o1TgfWkWpodOxnc
N+s5pahUkPVXMMplJMNZ+bO4oikqfHI/R/z7Ox5OxfHpnpqhguktdjniUjxI
/Nlgy52jwpmiD28vU+Ph+N3+bycWsfjV3m6OvngQrioPeLdMhduZHcNLTfFw
8FjipSOrVOBZ7K6ZrYgH3qCXOwm/sPqoBuSdvHhgu67qjv9Dhe9XLZOcIuNh
14ejZzm3qXBFz16k3TMe6LgZV0L/UWHXQqqa9qN4+NVbb+fLNAnOiwZ3wi7F
w9iDaxaOnJPAz/JlS5sWBwMNUoLz+yahjPmOhE9rHHSf5Ox/uH8SmvefHW0v
ioOmpTYDC/5JYMJNLTd7x0Gx5y1NXZFJoPLyn5NjiYOCkXOMTaKTsFuLMmiK
3cfsSwJVGicmQUToGu/7b7GQzDx0/qLUJPCE+dun+8dCGOGetJQClt81o93k
PxIErKvNvlechIJT3Ivvm0jwykT0/bELk5Bp6dothPl3lyM04UOqk7D2Pudq
uD4JLHKe8LBpY/GzR+94pxFBvtZti3Z3EoqoebZTxwggK2ZS9sByEvOLkX4G
y5g/DFV6Pnp/EqY6J6/+/YKHIze2F3seToLlMW3Yq48HtkE/Sr0Txif8u9I9
ZxyMrkR+fxc4CeKHf8mEiEUD9Z9XslHIJFSJDpquvImCafYnbszhmB4+34/0
7Y+CZTHt43Yxk6B6qX1TcisC6Ex3+8q9noR456Mz0WVhIFLrrVhdMAnLLff0
rFcDwYbw9P3I4CSwZAtEGUi5wfwZ/UABuSnwybgSnJP2HH3PoIq9kZ8C4aOl
pJdrrihDwL1R+NwUOJq97/2s7o4s/73dI648Baf6pVLPjXmgzqZ5nILmFFgt
QP8gsw8qvxfy1vDOFHQNnQ4RFApEcV2HVHvNsPm7+mP+VAYilysfxu9YTMG+
z2zTB+8GIRnpHtH7VlNAZ3v5xy5yMErdPJbj6DAFbaY7KRW7w1BoNCqN9JuC
KskNI49PUciGwdCEK3AKNkcpePHL0Ujt+dQfYjDG/79ZxczOaPT3DodKYsQU
3C/POOTjFoMcxUzrsmOnYGhAmFUiHIeMK9fbvmVPgYGQMn9fDAGdPRXmfC0P
48OqZSPWSkDc7w7z/PwwBbHKOPNMNiJqDrl8u6cI04PsWqTkS0RwEz9M/ToF
fEe5fNSsSEhsTnqWvnMK5E5v6ar+i0XsLD/Tv3RPAdXSN0wL61dXRR3vPe+b
giiK05K4FdaPmhf2TQ9PAZmNO9eqLg5leBoSU8emwB2nq/15JQ5Fxq/dMJuY
gvz7Bpl9R+LRnQ6Fbz+npyDhWUrVY9d4pLrU6xc6h42flTnRmxSPTrC/UFFf
xPS1jc6kb4xHaxpfiktWp6BkxWEwgIeMoj5D2pudKVgfr7RZeUNGLj1jFrfp
aRBaKRO6XUFGpqu+h7iYaGB/c3X7wwAZiUvX4QNYaXCm54g/HXcC4tS21lVh
p4GnAF0MWTIB/bLZzbbJSQMpcY+xn+oJqCZZy9eOhwb1SVYMexwTUGbljPLx
AzTQzedX3xOQgKIHwjZHBGgQZm+CkmITkOuGZFG8IJb/I96o4X0CMuNpeWpw
hAatPNG7XpYmILXTDpLsIjRgf32zuro+AYnr7qXVi9Lg78umHHwHxseuIPXV
CRrY7FRSF4YxPsH65uclaJBPWilspyWgobQVgVUpGuTKNF1TXsb4VRO6c2Vp
MPs7jE9qA+M3Io+zkaPBlhGfV9LfBBS11X1d+CwNdIQ0F4l0r5ELvxvLwDka
zMiksO9hfI1Mz/LXEZRo4Fyl7ErH9BqpGXx+pXORBk/t3nY9w+LiT+9cYFal
AZE1ZOEB/WvEGbG1XqVGg67Bw6k/tzF+mYmFHho06Im07yzexPjVX3SQ16JB
Vii3D+8Kxo8ycnJRmwZ04R/KFmYwfv9eTb7XoYGcSXzcxTFMP8GjKff0aKCn
X3mXqRvT73yN2SFDGmjWjl+91Ijpd+sBf7cRDQ4l6n1a/Yzp94ypK8oYi8e9
3XUoOwGdjEmP1jKlwcYHvR8l8QloX57mNQZzGpj1DkY3BCag9e+03RWWNEjZ
R9i56oTxmwqpef6ABh1ilFZV0wRUyyjhLWtDg31hxe3Z2H7HXHzyK9WOBso6
SRu9ezE+dzg+mjnQoOwVw8HXq2R01y3/CZ8TpvfXo1bt3WQk8XF5ItSVBg8j
RzXiSWS0rxWXpP6CBpNW6p4nn5HRxqyc6bYnDT5ai3PK3iCjOtHnHY6+NBia
1jMgM5CR//ty47/+NHBRsKn9MhSP1CToRoODaIDfvmseXByPqmXD596G00CD
nt5T8EE8+qqUwtRCogFXSB3+Zn4celk5FWYcTwNT9PN+98s4pKwqxUVNoIGK
6+Hju6/HoXKN0sNbSTRw+Mi74UmNRaV6LQons2lA/tYzPrgL8+ud3JVFuTQo
RsOFO00kpHDLWF31Aw1EwrZ/D0aRUJHpxI3bRZgeEzfvN3OTUIHNb9vArzSY
Xhvc+LSHiLK9jr8e76CBkOXw06u1OPTo3+Oj9t00kGn2bV1ywSFxv4L3m73Y
+XVQsXQ8jkMZwReK9g7TIHsnfYXVPwa9w+u3XKTRwCe5ofrHvSiUmPnyH3mL
BooCdMWqn0JQdFf3AwPRaVimxLsptLuhCO9I0XaxaeB3cQupP+aKwsQ1Jm+c
nAbxSnk/62cuKNCryEZHZhocs4WvcbA5IU9RwiMtRQz75NHvSFmhhy56T1Wu
T8OYWsi7yCP6ADw/PCRcpuFU28/IAPCFJcMqHEPdNLRpK9UTse/9+vvAJ6UN
08A3du/v091k2NnSvvLk+zR46w28V8eRgT2t+2936zQo35N415yRAOJrsw+z
+qdBe3/VDaX2RLAk8qroLU1jFmw9Qx+XDG1dj2ffHJyB1AeHpPOH0qBX/FS9
weEZON/P6WF8NB1GvH4lMQvPQJHW6iM2m3SYF/Uxcjo+A4v2ptcjl9KB5Tmp
6vKpGZAiy2TpMb6HS7xVsXMaM+CnNtRy+VQWFBrxqp93moGGF+T+Y1/yAL/3
1TR6NgOtcU3imgz//5/WdKSm6wxo338jNXk1H05frOgz9JwBlhEn8YKBfCgQ
feDgEDgDWR5SC9H0BZC/WkB+R56BTbtzEiFKHyEq7yBIJM6AyRR9sPuDj+Dw
MIBa8HYG4jLmuociPoL04G3Zr+9m4MYR81dc4x8ht2anri9vBrZKuR4nRRdC
Nu76MkfNDOwJk9JWYC2CsGslJGLdDISY29U5XSiCx7uELxz6NgP1K4tFjx2K
4OSL1UDx5hkwf06Wz+4pwvqWhEPqPTPgru4c/LugGEIOMlV/75sBmv2hms8z
xWDbZW+jNzgDipF256yOlcAJrUsf747NAMM5gfFocglkyE5rus/OAGcURXcJ
VwpBM/rzO/MzYHrw+UpeRynYvPuCC1yagY5UablQnjI4fiB6CL+G6XFsQL/g
dRmk7Zx1ztuZAY0LHyT9yj7Duxb/NxTuWZjHvXkTIlcBEae3zJJ4Z0GC4a33
++gKcCU5C5rxz0LFZYbWpMUK0Lp773X34VkQbhPT0iyshMV5FXKj+CwMkC+G
E/UR9OqVGAdKzoLFZWHK+68Iqoqk+dVkZmEH2Xj84qsCgpdg3Jczs/DvRN9m
bGgVKLL/IearzIJXW/Txda9qOOrodNPu0ixkysiyjVdUA1vX9H7xy7PQp742
wb1TDcOve/EpV2che5R5t1VADfhJFscQb86Cw4Uj43YptdCi7Rjh8XgWvCW9
ppBIA5Tk066ds58FruBiy0MeDZDMbbFn7eksKIvMLIp1NoDzgE6Y/fNZYPlM
1Xgc9g34H0uGWPrMguKeG1uPOL8DfWvqlcP+s6A1tqLF4fIdZk8fZB4InIWb
dfSnEwa/Q+VvliDD8FkwSJLyiCpogvuhU/6asbNgTrRYLHRuhmsLd9UZybPQ
aOJV5TLdDPL63QxVr2dhVvE5zsyyBZgF6nzPp8yC6/U3ZytvtUJuZsorqdxZ
mKnNdNGVbYONb2ae3DWzIJAz1kxx7AAhQ83nNXWz8PBQB5N5ZQdojsg+df42
Cwf+OpKP7OmE2DWGBx3Ns7AvUcYiMLsT5I9maeN7ZyFiUnzkyu8uMMvFX1Yb
mIX8psHU+3rdEHDOS2VlaBaiAydGKJnd0KlzQ86AMgux3LsMjpn3gLPHLwHu
hVl4OcVD4BrohYRdo/trlmahalTfsl65D6pjGjmcV2aB7zELdTu5D/a9f03f
sYGtr0VNZHfohw+dl2ZwDHOgFmCZxnFoEOalosq4+OcgwH3Qf7t2BHjK3Aqr
D84BPkzvWLPqKFxQv5frdHgOTnPqfTdDoxBmIp/cLjIHP9uueM9YjsHJoIFg
nPQc1B8271V2GAebUbHbXOpz4IPUKNPFExD1eJ9+tcYc1NTx1ygyUqH4129t
J605EBrgHg3UpwITe4tKu84cJFohE6H/qPBO8ZkYzngOZu4c/+aC9c1jOPRr
n8McWB8yCWTdNQNjfjrleMc5GLL6xRRtNgPjzwa9eZ7NwcbS1yu7imeAYrTB
zO8+B3uE7vA32s7ChIDswSN+cxBcys9bMzgHUylvVaRj5+AEf6Ds9eVFmMJL
MX6InwPGnadI+/YSTPmXfzv1eg6i6DcdrqAloFn36Mknz4H7nsstQleXYfok
54ML2XOQFWbKyCfyH8x9fBl89escXCN/+KMwvwLzqXuu/6jC6s1xTao5sQrz
BPI+ndo5yL4sIN/2AMPPi8l6jdj6H2M0nIZXYfH8Qs7tDkzfBbP4pp41WK42
a7OemoOtpEHB+vF1WG+/IODHOQ92ITN0LLe3gM6+d+M81zycj2lZ7MncAjaW
Zz3/7Z+HA+PslXJbWyCkkk24JzAPR86/kYxM+Qsa2fycl0TnoTrPdbhgbRuI
fr8Y6JTmIeJDx65eEzrVM2c+zL+0noccwUuvODUYVR2JIlUvKuaB+dcBodpo
VlUD0v1HjGgeQka59xcgVtWzsanckdXz8DSuBE9eYlX9EydindwwD0/SHgyb
3mBTDXwtwvatbR44XNeuOnLuUU1IFbnJMzkPDHfy081D2VXrCkSm8zkWQIxD
+/Yb672qGR/v4xT3LYC16erBEtxe1dDCVKUa7gVY3mJ+GlO5V1W3SCSy+8AC
VAaaFKuy7VPtLxWR+3t0AQTNmN9GWOxTXfwq4nVVYQGUBbUD3jBwqbah+8c7
FRfgbonHi7N8XKqfqlJbzf7XYJXHU5lGYTEqitz7ZYmppMYS2RKVOK80iFtU
ipCQUJjRoo1BZUkkLbqRsbu4CYlC8nFdUcoSSRpEKsn3vRRZQvP9eX6/8z7n
eZ5zzvs7xhSMv7ZoSNZgoTMClVUBiIJLGgmD7bYsJPpU5ektawp6rXwdGxNZ
SP6lisyAKwUrA/uTmlXYaON4+3c3dwruBSe1XNRnI8flUW+6D1FgoeSTOGHG
Rkn+X1Pe+FDQrisdusyNjVZIl6xrPE5BibrzjFoiG4GhF8sqkNErSFeu4LGR
m6vCuPA0BaGbzymIlbBRRkFwZVUwBT3pthqlL9lI1fZPm+JICnaH61wOmmUj
y9MT2jrRFHyqMp3NXkggn9Q8dn4MBc1F3dkhBIH4WKorO54C5SnDvYbqBGqU
r36icoPR/6cMIvQJNAzH01MTKKhrAbUkYwJpx3f4JCZR4DmgXpu+g0C2ZZc4
cv9SsOOK+WHlfQQKeL9Z90YqBVd1Rj9scyVQsW7qRGwWBRrnbdyC/AnU5rjr
nUQOBd6+Di4xJwk0FiZGRuYxfBYI1pkEEWhDq3dkWAEFe03TD16IItC+qWVH
Z4socN9u00RcIdCpVS92nHtAgUmcuLb5dQJxt4foTZRS8KDcLGYJl0Blx3Rl
T5ZR4EwvGj99h0BvE/snRyooIDwhNCiVQNM1N//zf0KBZVCz8bJMAikNWVQP
kRQUDUZvs+MRaAt7KtNbwOjjrChZmUegA5vvRg0IKfAP5/Ai7xIoxOOAr3s9
Bep2tSbh9wiUenmJbc8zCtgLxFPkCwlUXVyj7/yCgqXzUoehiEB9XSfkOpso
OOsXtm+GiUXFVKftWxk/uMUSnPsEWq3Z2d3aRoHpMvcN2ky8bc/lmp0dFBQq
7iQymPzDQVuyGzspqOio6+Ix+JGZ9CWrdxTc7rVpNC4gUE5jml9dNwXp/i6r
3fIJ1PB9t93W9xT0l1asJfgE+qIkbkD2U8Cx1teyzyGQ5LZH8ls+UmAkzQpU
ySKQpt+Rn2WfKZiORg7/pBGIc1Opd8MQ877AQ8szmUD+lS8FxcMUWCFZuw7G
37iBUJ4OpqCUq6LSxvhfuFj/cv4oBX38Ykknpj8tBgP+GmOMXjLmxFGmf6Mu
t3bxflDwlO/dLHaeQOwIqw2rpygwcLgW/8c5Au15nT/z+xwFp1pLDUV8GX9z
/KabRWiY+FR/Ys6dQLlntSYviNHgzHK/6e9IoJnl+d8HF9JQEZtjn2xOINUR
39E7i2iQbzk17rSRQLsEmninNA1ONm0hl7QIxPO6O1RC0NC0KDFNm5n3lo2+
g95yNARv7QnniRPop6TmJ8VlNMjmCntiJtjIrpDfF7aCBps8iv73LRtNT+R1
cjRoqDO/E9B1i43WPD/S8UuThj2L3crKwtnINlmjvVibhngnz7/FjrNRFspr
VjCggTVf0qvHmo12Ruc+HTClQQmZdRSMM/+Hs4+Qa0aDjnNA/FgPC2WuUxdY
b6PBWHvAL7eehSZbc54Ubadh3t/cLS5cFspQzCkJtqdh4/WB9WK6LPRi2KtY
x4GGL4+OhjYsZaGJKtWi/v00wG3ivsiUDOIc4t21OkhDstdSlZekDPpxNztj
6VEaWnkeXSMWMsjaJCs+P5SGB4fu9TWdkUYnl3jGHbxAwyMbL/HHetIotW91
LDuChhAqYKTkixQai8iMOnOZBjXtG+rv90mhlKaMkG0JNExhyf5/VBejbwfT
/f7jM/jOQsPYFAk0zhXf4H6PhjlBlcMnWwk02Xxk9mMhDWE/puf4IhLoF+jH
4RIa/lg++SjCbSFarFxbKErSQJanjIopLkB/vB/4pt5Gg+tuy+SYM78hRzf1
s4E/aai1f2ORLz8HzrdjzaZnaWhJuXjr45FZcG0ZkQgVwcCfZIf5Vs7AYVSe
dEkcQ4nh64RbHj/huLJ15Z0lGNzWpP0SLZ2E2Pe+v2pWY+jmpvrZhX6Hqwot
9RaqGMSU9mCL7m9w3c4gvlEdgx9nb+u5Ld8gsXpG+fU6DNttC4++nRsBXtqV
rYNGGHwazrdar6WAdCuMkOZgaODrXRPRHICKZj+bnp0YpLxfjYjO9cND07Ws
gl0YyoqezVzo6IP837OTdzB3glzvVadNer2Q1Jn0INYDw+Y9KSJjzzvglqXj
WZfDGHoVJOcOtrbDtYeyoOWDoc2i6bPax1dw6Wb880Z/DEst4wzLfZsg0C6y
T/Ishm/3rphUi9dAAGme0xXE8DP5JDsy/Bj8tOf580Mw7A07o3ds0UPwWBw8
uT0cg7FRYo2DOA9cgzZVLYvCIPnWOkXtBBf2D/24+CUaw4BdcbvwzV9g13Bs
SfRVDOZlCy9w1NJIjpHOa8frGJQWS8+u/CuXtOQNJ6knYIgZLJQTKhSRW2X5
bpNcDE0tDrcDyx6QpuHeqg1JGK61h3z4LPuI3PR9zTD3XwxdGQ3rvutWkAYe
/fe90zCMc9/vPy/xhNRtTT1tlMnw/SLqfz2VJDXRAZMFPAyOubEKKVPVpGqh
otibXAZfax7fXlRAqqzobODdxfAhwcxOekhALr+SEHeqAIPOqWe6U0W1pMLM
bnuL+xgmOZsddjoIyaW+MopyJRiefwsN3NstJJd0vez9+BCDsPrphId5HSm5
PSa7tByDV01GVFd0HTm/zMo3ohKDQX2TUOt+HSmqNl9vL3PXTbjcXNlVXkfO
JtT+WCPA4OEUMXg8q46c/O185ZgQQ+xIrfztY3Xk2AnTC8J6DPo+jfLTq+pI
3P/T8uZzpl7GwhsuD4Xk0K5yKc+XGIzUtLk3dITkp+pTbetbMKzlfFCNiqsl
+3QMEsXaMMjEnw7QaxeQ/6WMura9xlD1lp+ePk9AdkoVrsnsZPiZSClPy9eQ
bcF+Q8ffYVAUr7I/qVBNNn3VKNragyGPsGQ9WVhFPnf6HMjuwxB5TPrA5orH
ZN2zLOP+D8w+KHPMXazKycqclfXnvzDz73X6H9cFJWSZXHfsrmEM/YmpIWvh
PvkgImn3Koxh66hETJ8gn+Qfku2pHsOQTUnNV/yaRma/epUZP4HhsntWxPzq
BDLNLP6I2zSGF31/V3H1LpLJRTt0dGcxoNtGn10PegJ35aLxX78w6JqSUpLr
r8D/Rni6tw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {-0.4292797103745321, 4.923141623997972}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.806327069045006*^9, 3.806327089416537*^9}, 
   3.806327633906027*^9, 3.8063277274652233`*^9}]
}, Open  ]],

Cell["\<\
Whoops, guess take 1 was better after all. That makes sense intuitively, and \
from seeing that its first term is 0.\
\>", "Text",
 CellChangeTimes->{{3.8063280485108576`*^9, 3.806328077500002*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c100TakeTwob", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Re", "[", 
     RowBox[{
      FractionBox["2", "\[Pi]"], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"NpPlus2NP", "[", 
            RowBox[{"x", ",", "100"}], "]"}], "*", 
           FractionBox[
            RowBox[{"ChebyshevT", "[", 
             RowBox[{"n", ",", "x"}], "]"}], 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["x", "2"]}]]]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
          RowBox[{"PrecisionGoal", "\[Rule]", "1"}]}], "]"}], "+", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"NpPlus2NP", "[", 
            RowBox[{
             RowBox[{"-", "x"}], ",", "100"}], "]"}], "*", 
           FractionBox[
            RowBox[{"ChebyshevT", "[", 
             RowBox[{"n", ",", "x"}], "]"}], 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["x", "2"]}]]]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"PrecisionGoal", "\[Rule]", "1"}]}], "]"}]}], ")"}]}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "11", ",", "15"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8062601540669255`*^9, 3.8062601608351927`*^9}, {
  3.806321392394718*^9, 3.806321395580761*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(100\\\\ \
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^2\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.806260163294634*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(100\\\\ \
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8062601633425913`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(100\\\\ \
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8062601634105277`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: inumr\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.806260163427511*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.0601848938211722`*^-16"}], ",", 
   RowBox[{"-", "0.17175822670107657`"}], ",", "0.`", ",", 
   "0.34763321152136806`", ",", "3.533949646070574`*^-17"}], "}"}]], "Output",
 CellChangeTimes->{3.806261208370802*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c100TakeTwoc", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Re", "[", 
     RowBox[{
      FractionBox["2", "\[Pi]"], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"NpPlus2NP", "[", 
            RowBox[{"x", ",", "100"}], "]"}], "*", 
           FractionBox[
            RowBox[{"ChebyshevT", "[", 
             RowBox[{"n", ",", "x"}], "]"}], 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["x", "2"]}]]]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
          RowBox[{"PrecisionGoal", "\[Rule]", "1"}]}], "]"}], "+", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"NpPlus2NP", "[", 
            RowBox[{
             RowBox[{"-", "x"}], ",", "100"}], "]"}], "*", 
           FractionBox[
            RowBox[{"ChebyshevT", "[", 
             RowBox[{"n", ",", "x"}], "]"}], 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["x", "2"]}]]]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"PrecisionGoal", "\[Rule]", "1"}]}], "]"}]}], ")"}]}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "16", ",", "20"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8063213800302954`*^9, 3.8063214085407534`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(100\\\\ \
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^2\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.806321410949521*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(100\\\\ \
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.806321411006468*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(100\\\\ \
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8063214110544252`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: inumr\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8063214110933876`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5253947444035786`", ",", "0.`", ",", "0.3997629309938855`", ",", 
   RowBox[{"-", "1.766974823035287`*^-17"}], ",", "0.15298670980022275`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8063225558027105`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"{", 
   RowBox[{"c100TakeTwo", ",", "c100TakeTwob", ",", "c100TakeTwoc"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.806322652635619*^9, 3.806322674014284*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.333642738384766`", ",", 
   RowBox[{"-", "1.4135798584282297`*^-16"}], ",", "0.9522340641633906`", ",",
    "0.`", ",", "0.05934185218766805`", ",", 
   RowBox[{"-", "3.533949646070574`*^-17"}], ",", 
   RowBox[{"-", "0.778448153277736`"}], ",", 
   RowBox[{"-", "7.067899292141149`*^-17"}], ",", 
   RowBox[{"-", "1.086600726341891`"}], ",", 
   RowBox[{"-", "1.4135798584282297`*^-16"}], ",", 
   RowBox[{"-", "0.7847301552100951`"}], ",", 
   RowBox[{"-", "1.0601848938211722`*^-16"}], ",", 
   RowBox[{"-", "0.17175822670107657`"}], ",", "0.`", ",", 
   "0.34763321152136806`", ",", "3.533949646070574`*^-17", ",", 
   "0.5253947444035786`", ",", "0.`", ",", "0.3997629309938855`", ",", 
   RowBox[{"-", "1.766974823035287`*^-17"}], ",", "0.15298670980022275`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8063226657554293`*^9, 3.8063226750245523`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c100Take3", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Re", "[", 
     RowBox[{
      FractionBox["2", "\[Pi]"], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"NpPlus2NP", "[", 
            RowBox[{"x", ",", "100"}], "]"}], "*", 
           FractionBox[
            RowBox[{"ChebyshevT", "[", 
             RowBox[{"n", ",", "x"}], "]"}], 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["x", "2"]}]]]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
          RowBox[{"PrecisionGoal", "\[Rule]", "1"}]}], "]"}], "+", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"NpPlus2NP", "[", 
            RowBox[{
             RowBox[{"-", "x"}], ",", "100"}], "]"}], "*", 
           FractionBox[
            RowBox[{"ChebyshevT", "[", 
             RowBox[{"n", ",", "x"}], "]"}], 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["x", "2"]}]]]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"PrecisionGoal", "\[Rule]", "1"}]}], "]"}]}], ")"}]}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "20", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.806324956797987*^9, 3.806324963913938*^9}, {
  3.806325013716296*^9, 3.8063250143010015`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(100\\\\ \
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^2\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8063250781844*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(100\\\\ \
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.806325078245347*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(100\\\\ \
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8063250782903023`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: inumr\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.806325078311284*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.333642738384766`", ",", "0.9522340641633906`", ",", 
   "0.05934185218766805`", ",", 
   RowBox[{"-", "0.778448153277736`"}], ",", 
   RowBox[{"-", "1.086600726341891`"}], ",", 
   RowBox[{"-", "0.7847301552100951`"}], ",", 
   RowBox[{"-", "0.17175822670107657`"}], ",", "0.34763321152136806`", ",", 
   "0.5253947444035786`", ",", "0.3997629309938855`", ",", 
   "0.15298670980022275`"}], "}"}]], "Output",
 CellChangeTimes->{3.806326916741537*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Just seeing how fast things go at different points", "Subsection",
 CellChangeTimes->{{3.80701505812542*^9, 3.8070150710501328`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Re", "[", 
     RowBox[{"NpPlus2NP", "[", 
      RowBox[{"x", ",", "100"}], "]"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", ".1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{3.8070150761678905`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8070150791166906`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({4.7637712335908935`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.7763568394002505`*^-15 + \\(\\(3.621235256101585`*^-16\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(7.675105277844218`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.80701507923958*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.807015079384443*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({4.7637712335908935`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.736458199452784`*^-15 + \\(\\(3.8998752144303594`*^-16\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(7.621763047073763`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8070150794843493`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8070150796491966`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8070150797401133`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({4.7637712335908935`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\(\\(-1.8474805019152996`*^-16\\)\\) + \
\\(\\(6.808789643208968`*^-17\\\\ \[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(5.097370908788524`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8070150797980623`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8070150798120465`*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.8070183946704826`*^9}]
}, Open  ]],

Cell["^ ~55 minutes", "Text",
 CellChangeTimes->{{3.8070238657436485`*^9, 3.807023870781788*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Re", "[", 
     RowBox[{"NpPlus2NP", "[", 
      RowBox[{"x", ",", "100"}], "]"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", ".1", ",", ".2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.807023880736952*^9, 3.807023884056479*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.80702389736665*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318530013645666773726079921922200435466243639837102819001302123`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.816255479347717`*^-15 - \\(\\(1.2307863062055446`*^-15\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \[NoBreak]\\!\\(1.3295648130262862`*^-13\
\\)\[NoBreak] for the integral and error estimates. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8070238975045214`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8070238976543818`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318530013645666773726079921922200435466243639837102819001302123`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.2177758801357186`*^-15 - \\(\\(1.5209188075626656`*^-15\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \[NoBreak]\\!\\(1.5418355591981154`*^-13\
\\)\[NoBreak] for the integral and error estimates. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.807023897756288*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.807023897920135*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8070238980190444`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318530013645666773726079921922200435466243639837102819001302123`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(2.220446049250313`*^-16 + \\(\\(1.6583956430338276`*^-15\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \[NoBreak]\\!\\(1.3915749563581776`*^-13\
\\)\[NoBreak] for the integral and error estimates. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8070238981848907`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.807023898243838*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.8070269051446633`*^9}]
}, Open  ]],

Cell["^ ~50 minutes", "Text",
 CellChangeTimes->{{3.807026911152787*^9, 3.807026913991077*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Re", "[", 
     RowBox[{"NpPlus2NP", "[", 
      RowBox[{"x", ",", "100"}], "]"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", ".8", ",", ".9"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8070269200140567`*^9, 3.807026924665891*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVzns01HkYBvAJyYyQU4xLqXCULnazadPi+RZSm/uptF006DY6U6GSNmVF
VlRUCpVcRqF2lBApmx2EKErkSDW66HdpKBJj2va3f7znOZ8/nue8M4N3+2/V
4PF4Xtz9n2HGJZkZGRTMbSyW6lVK0SvZwnZxjotem2cll2J1nbGLWSaFCPvi
eJcWKRbt/V2Rybl7HtX2h0IKdZvb7IsXKKRR0jsugnwcO9FZlnWJQqe3RHRm
Yz4ytb615uVQUFf/WF6qdQXyzx4TZIUUJpps8EbIVcQvcyidWkXBll1Qdz+7
CCW3XfJDHlLQ3/Yl8aKWDLk1ll3ruilkK45P+9J9AxoI9CpgKfgPXn9qZ3oL
LYqy8a1qCs+l049KJGXQGdnyr58+jUKipdJ2rsD4PKVj7HQazzylTtp+VZBE
nK08/gMNmx35V2uOVMP9dmrUR0Jjp1o0NMW2Bn/OuBY924+G+NMB2a+Wcpyw
uFxrGETjuraBcf+yOmim0KvWhNMwGUvwrm95gLc2/sKwWBolz9+1d4ib4LDA
0KrvDI3+V/wuaXwLVrQWhenm09hR4xuZtKcV9WdFWjplNA71JU16YfMEpc2S
zsB6GlbFarvFdu3Qm3NeeaKDhjBe9YcpOtCpEi4XfqAx62usWUrxc4SIIl57
j9KQNTo1TvTsxnqGrg7kM9iR2/YCAz2ooSp7GswYtCl00vXiX+OMXj7Rncsg
6UD7/UqjXsyqD30/toSBxd11lvPvvsHczwnNyz0ZRPlZ3XQtfIdM15ph8UYG
sbwZkoTzfTio4x/UJ2Gwlv35tPoZhanB9/QnH2EgtxVHyOxZ2CrceMJTnCW+
01clK3HlqZX9vmwGPkl73CNzBnCSsSi4doNBubn73rHRT1icPiRKuc/gQ9rQ
CrPNg/CvmLn+cRuD5nNOLdkjQ+j8Fnr+vYJBouLl4uSkYbSU6xqtG2QQlMqb
ZBQwAru0ho4cTRbOHm3pElMV/HRE3RmTWQTl9k1Ifz+Gt0rvGaw1i83zHE38
Br6hV/VbobEDi7AqaYCc/g7fg3fDLyxnMXbvqUppOI7EnBw9/CiARfBF6dGP
9hrEvMH/cdd2FgkFXYk7V2iSWfs0RYhicTk0vX9CtBbJ8mhdGJ3IYvsGW9fd
eeNJpyzSU5zBwlLowetr0CYxifulxUUskva8U4p1dcjZxFTy6A4L0ba0fzqW
8IlsSvUS4yoWqibBE2vCJw8u0wsDOY8r3ToY7s4nqjJXWyVn6+C/xAa+fCLq
/WKof49FaG+O0cqtfDLvl/VvvP7m/isMGKw+xSd1rOWxFjkL95JI9Y23fPIy
0ifGqJbb177jzKP5ZETj0MFNnGMc4o749HN902e7PnK2nrxfQznKJ6fdEwL0
6lk4Zc0fnmMgIIFZzGyvBhYPFDZCqaOAHLA1sUrjfCuhYNqgi4CklrpN6+E8
YnnTfJmbgNQ2XTKUNLLIjDNQv/IWkDlffVTJTSzkK787m28RELfYQ0PtnNOC
KwbEYgHZpFeonPqQRUByyLmKXQKSYqXx5jrnK7lLK9ZECUiRzK5niHNJo+dP
0sMCInfc0OnUzGJ1uCrr81EBeVGb0BbH2cS1XEUSBWTYp/RhM+dFqYz7qZMC
8h9RUGtS
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.8, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0.8, 0.9}, {0.04047433299917832, 3.319609209300462}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.807027036936463*^9}]
}, Open  ]],

Cell["^ ~1.5 minutes", "Text",
 CellChangeTimes->{{3.8070270514212637`*^9, 3.807027057658442*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Re", "[", 
     RowBox[{"NpPlus2NP", "[", 
      RowBox[{"x", ",", "100"}], "]"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", ".7", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8070270885301995`*^9, 3.807027092050906*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.7000000000000001, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0.7, 1}, {-0.16387771486467526`, 4.941283509781655}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.807027767314704*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Re", "[", 
     RowBox[{"NpPlus2NP", "[", 
      RowBox[{"x", ",", "200"}], "]"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", ".8", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8070282174910526`*^9, 3.8070282223065414`*^9}, {
  3.8070282541336393`*^9, 3.8070282746456137`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
o/vSC/dWbtAkXmP6urmNPKEVVMxwmRn7H5b21nQ=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.8, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0.8, 1}, {-0.15943592799392836`, 4.971680296878529}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.807028249720354*^9, 3.807028270838789*^9}, 
   3.8070293785306664`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Re", "[", 
     RowBox[{"NpPlus2NP", "[", 
      RowBox[{"x", ",", "300"}], "]"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", ".9", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.807029533962262*^9, 3.807029543072606*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.9, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0.9, 1}, {-0.1576802723641735, 4.984211659960754}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8070300495778675`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Re", "[", 
     RowBox[{"NpPlus2NP", "[", 
      RowBox[{"x", ",", "400"}], "]"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", ".9", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{3.807030391209197*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
aEhsPZlze1sR6bCE1/QjelTd0yFhoIjsX7zsuPYT7qdL+8/usGIyf1omIw3d
eW6e4+23EtLiy9MVpb04H3/idbxw5jVZ38ez5R/6Q9iP+azZ16RS92XQ7MN5
aZtj9OrANyR3s8yND2j9iEauC4nlZP7rp11Dn/F5ssdMbI5XkAVbxfQl+2mI
zhxVqLmNjr7TeB5tYKHufuM12vZK5Tf0jaWreps2VZIF3b1qUgPY/+0Krh4n
K8lXmkcLrdBf4lv1vH0rycJ18tnf0RNEA32nFx30SEp6EOex3PQ3UVxVZOHM
yqRL6G/cCo9m5KvIokZW9Cj6mPjYvwq3KrJ4jyW/zBcavrbkNMs/Qqc2B19G
5xuzdGbL0TdzvcbRrtxxGvf/oEc3zssO0fAqaV7fQayaLDaIcLjyfzMuqz1X
RlcsYWWjdYcT+w8eryZL5G5YM9F9o4pb1S9Vk6VxQ0NyX/H7i1ov331PNOdJ
czv0mKFYzIlI9LXqrufoskeG1fZp6D4lfRb6mM2PHLoQfSi1UeEb5vWPK+6d
tdVkWcEq7ato10knXYnOavL1xoDKHLR/3kfzji/o0Fm1CfSx9UyKZqLnrAq3
D2N/e1dqO/1EX/i4/frw/+fFpCqrv+gWrew8dPBBz8oqzhryzd4iqSn0+fzT
L+/y1JDlmdJJO7/jvHA8SKB+BXpVnJgD+r1m/1kHPrQPd0w++ndSm2rE/810
5Z9BP/CK2C25En16LHjXCA1PPFZwb+OtIckaY04ntC9z+HwWVw1Zsb3B6xX6
/ISv0JN/1WRFwn/zs+jpffdGRObQ3NkOKqM0UL0Cb5fRaMe1LGc017plD12+
oQdDrIvQkwNll6y7q8nKo4tDv0b/P1+3qvY1VJNVxbbme8ZoqAZ3mc4y9ObP
Xa7ollvNZwyz0YtvGufRyVrjT2YC0NYK2v+NYz1aSRqKXkd3JFa6o43MN8Y0
mlST1c+8C3+j1Y/9Vz4hU03WiE5s3/sD62nng3YrfrT/meyb6C0KPa1O01Vk
jZlG0h/0cjUpv+tF6Po8MXUmDf0/6Nlz96vIt7s2xXih34TJVi44VZG1Kzju
/EObknrPZRSryLrXNQ5LWPi8x3KPByIqyUHtSbvD6AEJvzunzlWSC23rrSPQ
ec3y5ft3VJIKY85mEjTOj7L3/gY2VJDRwjIHNSYwz+6Jt7Z9JMkXSYYQjM5l
ue+TP0OSddt8VVvRx/Vb+d9/LycXNHrlz07i/OO/5vBS5hvyjP1dkVtTeH5n
m74t6y4j3edLBN6hdfUEBpbplpFR/t95Bacxjy0fG1eSpWRtPPxLQhee1tma
llhCytVNjlTM0GBTs++MomYRObfBqITtF35+p27iXeIlKZTtm38IfWofF2dI
fB65TSXneTj6sI2SZOZ0LmlxlDtl4xzW+/uyc67aOWSNa+kdYp4GERcfHfG/
T8l+jhH/ILS0Vd9Bz+xM8tc9hncLWqcqsuKicQYpm2brcGYB6+tgYLt+cSoZ
3ipu5vObhu8enQPP1j0ms8yOGNWj58UXN9rcTyCrR1z0BBZpqO3Yd7hILJ78
+adFMwmtUfDRwJaIIQWC/6iPoqNVO1RHhyNJmVWyqtv/YD+xtfzZFh9Omsn6
yVegB8tOzx64GkQ6v8qR5v5LQ2Dle81/R/zJMKJPQg9dMsqx57qpD5n5nntd
3P/9/p/voyNuZJWRssggmsewJX3zlRtk35ezAlv/0fCJP5LX+rw1+dP2Hu81
9GufM7cLNpmSAnOlnMXosCTVxsbCA6SM38jff+jjli+eTkvyEP8DrOGthw==

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.9, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0.9, 1}, {-0.15669455836655985`, 4.9913235205969135`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.807031053928999*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Shape of m=-2 feat. Justin Bieber", "Subsection"]], \
"Section",
 CellChangeTimes->{{3.804510616065172*^9, 3.8045106334949937`*^9}}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2", "[", 
       RowBox[{"e", ",", "0"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2", "[", 
       RowBox[{"e", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2", "[", 
       RowBox[{"e", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2", "[", 
       RowBox[{"e", ",", "3"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2", "[", 
       RowBox[{"e", ",", "4"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2", "[", 
       RowBox[{"e", ",", "10"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 0\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 1\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 3\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 4\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 10\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Divergence Not Removed\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8045153487030935`*^9, 3.804515349467383*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2", "[", 
       RowBox[{"e", ",", "0"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2", "[", 
       RowBox[{"e", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2", "[", 
       RowBox[{"e", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2", "[", 
       RowBox[{"e", ",", "3"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2", "[", 
       RowBox[{"e", ",", "4"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2", "[", 
       RowBox[{"e", ",", "10"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 0\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 1\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 3\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 4\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 10\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Divergence Not Removed\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "4"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8045112302992463`*^9, 3.804511267685545*^9}, {
  3.8045143221189656`*^9, 3.8045143253020115`*^9}, {3.804514531971182*^9, 
  3.80451453682967*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.000024185766477748702`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(-2.49366499671666`*^-16\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.5939906358846744`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804511729424957*^9, 3.8045143280514584`*^9, 
  3.8045145398978233`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804511729424957*^9, 3.8045143280514584`*^9, 
  3.8045145399677577`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({4.503669942224799`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.734723475976807`*^-17\\)\[NoBreak] and \
\[NoBreak]\\!\\(3.820404467573641`*^-16\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804511729424957*^9, 3.8045143280514584`*^9, 
  3.8045145400416903`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318519448951320385675257047976413268819406710008479421958327293`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.7695567233744214`*^-13 + \\(\\(4.163336342344337`*^-17\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.367876784470429`*^-12\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804511729424957*^9, 3.8045143280514584`*^9, 
  3.804514540285464*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804511729424957*^9, 3.8045143280514584`*^9, 
  3.8045145403633947`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804511729424957*^9, 3.8045143280514584`*^9, 
  3.8045145407460346`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804511729424957*^9, 3.8045143280514584`*^9, 
  3.804514540886904*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804511729424957*^9, 3.8045143280514584`*^9, 
  3.804514540958845*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[{{2.040816326530612*^-8, 9.419706728589813*^-16}, {
        0.000306717908041361, 1.1137129779920411`*^-14}, {
        0.0006134154079194566, 3.774030476268998*^-14}, {
        0.0009201129077975524, 6.42565102186577*^-14}, {0.001226810407675648, 
        6.686975588174469*^-14}, {0.0015335079075537439`, 
        3.063766978007086*^-14}, {0.0016344418043297464`, 0.}}], 
       LineBox[CompressedData["
1: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
hJk=
        "]], 
       LineBox[CompressedData["
1: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
        "]], 
       LineBox[CompressedData["
1:eJw9lHtUjAkYh0clahotI8XRRSopqcgYTd/7ZjkMJbqqM2K7MEXYonu7jbMk
osu6RRQlpDBFJE2mLdFFNTXfN/O1aUdK5dLKJZWMtefs2d85z3n+ff76zQve
67Vdg8FgbP7Ov85coiiojZIj478ZWRiN1MTL0c1yxvpMv2xi2Mbf3z5Djqdy
AljrL9wnri0aEB89KcfP9y5IJpVVE1sXx+m8PCvHsO61TW5vaohGx+zK85fl
6Kuz1S1792Min6ucq1spx9yphedTV8kI7zX+z3t75ThnJsaXhTwjKtmOrS8G
5fiEmbN4cV83Yf5cR9IzJEcvy4dz3i9TEe8TH2SrRuV4fNPHgYC650Rmqcmm
Lj0SN+hXCxsYfUTz3L7qDicS5431M7S+viacXklK2leQeEPsctV38A2Rc+/0
ORmQKDtcW56vfEvs9OLHtPJJzHaNGDSQ/k1MTS22a9pCYtpvvo529DCx+kPk
+T8OklhXkVBfMGuEKJGuP1pzhMTO/hK/Q4UjBDt9fpw0ncTrGQ5RLM5nosea
9K7OJrFEePAOb8soIdrKZVaWkBiwWiScLBknJA3q+FI5iY0p81osOr4RFmcU
QjFN4uk0CbtQwIBjoWLfW90kvksXt98sY8CWb0GONwZInC67wMsPmQTjTo8G
rk2Q2EN58G1lGsC5mLb5ogWFyv6fk326JoO4JjmeaUNh4q0WlZabNti+2JcT
Y0+hnfpG2OQH2mBmteUvd2cKV85316rKnQLMkkXCsY0UTuHpNpyJ1gHVvacx
XokU+pFMqWEICwR0TbZERGGqZ+PCjy9ZQI2XV1qnUJhUsF+AEdOgichVqzMp
3KhVs5GZqA93a/ekFF+h0MoyquKD/AdIa9U/rdVOYYGJgeDpAjZoD2tW7FVQ
mMLZZHYmmg2iGaN0ZxeF6sOvX3Hq2BDjqzIu7afwVL1sZUfITPjpT3Fh4FcK
P58UWUlLDIDT71l+11qBDMHKLxU7jEClPiEPS1YgLHR/lnDIBPTetKXFHlRg
3oHj7V4DJsClWatSjijQcrZ0wxc3U8i8fbi04IQCh290pX7QNQPXsMT07qsK
bA7u9mV3msElWTDfp02Bj5l5eVXHzaGlOu9bMKnAFLsR0rXeHMaLu+5Gdiqw
f/XVy7xv5uCV4meZ0avA4iC15bmo+aDBW6/ROKpAqfkekfY2Cwi+7FiF85Ro
fH/XGH+jFaRn7dnnYaXE5l0HpmRlWEHlr8U2gbZKdB/xmy5os4IZAZZnE5Yp
UV/UkBTtvQBqWbNjytcpsTC/uqJnmzVYxDIcbKOUGMcT2tn8bgN961oLZtUq
cd3N5Aj/IHuwSFuQkfVEiTzT/HJ2pT2ENicn6LUoMSdrLKJGxwF6PBw8NWgl
HmsNC3EJdYBu7yz12yElahonnY41dgRloHfAozk0nhVG3A+6tAQM84pXu5rR
aGZwhXG0Ywn4qTQdHljSePJVqdsM7aUgD76jXepAYyhHELk2YinIhAZ3zq+h
0fpgkzufcILGSMW0/VE0Xmcaxuu/XwY6t+3Hh2Jp3D6cWLTfhgP8j4f7wn+h
0dG6JQhCOPA4hlu1LZXGhyx+nR7FgbrEs+FuuTRGm15ZcEK6HDQlwz71BTSO
BnvXExPL4Uf1OteVRTT6G24o8ORyQSoan7X8Do2ei42GJKVckBwS1Jk30mg8
pgwsKloBE/W3b11opdGnj/WwbGAFuEzVyzEiaYw3nHbV1toZKo9WRU5Tfe+V
uIrDrznDWNPMwCN9NAZa39O0H3QGLms3X+s1jS5Rvdo7bHgQ6/FoafI7GpMS
wzV1I3hwN8PYdPwTjUPJtJHpTR58aovWjf5CIy8mLr7wHQ/KUrN2Ppmg///X
fwBFn5oJ
        "]], 
       LineBox[CompressedData["
1:eJw9VGlQUwcYDGgRhUEM1YhFJB6AXNaj3O/7QFAT6oFEIHIkUUBlVC7ByClX
kUMxqIyCDFqoIl4DFFFAATF4ULWRUIWX5L1SARHkUIYbaulMpzuzs7OzP3Zm
fyx7f6hHkDqDwfCa5b+63sihXLWGRMZ/OLLWgNxgQuLHKIeX5/QATKv59hcs
SOR2uNu08AE6Obn5I+tJzPJ54ZVcCHCl7c2klw2Jux9WDhd3Avgc0vF94Ehi
voaejo05wpJxt1r9zSTGnknssItAyGZJY5XbSayYzylrZjiBWwlDSXiQuHEq
YffYaifQsCEcr3iT+HPQjkt+XCdI8Kqa3refRPnyzEH5OSc4mnsj/oOYxOZG
zSKxqTOYrulSceJJ9HzBy4nY6QydlWy4mUwi25WP1yOdwa81/+8jZ0iUzR3n
NDx2hu16Z05+KSJx63VBTqVgM5jlhCfNvCLR6o7uxWfFLtBtdLdDICfxWyf9
CfErFygq63VuaCMxvGp8deCYCyyTBainvCdxYcG23OEfXWH+Qq8UzYnZ/bqe
5PeNuULPafuf9FYrEEl7Mc93K1xLn5OxNkaB97u2GMa6c4HZmZ5gdVKB2s7G
dFYCFxJRJ3JjqgKFvldfym9zwWd0qZDIVqB+cbmLrqYbLAy0+mF30Wz+1r2e
krpBNO7tONGswPbAFcEFnO2wY/Su3fNlSuSavjtld2IXjAT49B6oVWLSc/JR
ly0PjutN6bU1KHGgjlXbxufBaONlgvtUibl00sOuE7OerZKYv1HiM52pt+7V
PBinhTZD3UrsO6gFQoc9MOkblBrNVOESQXDvOldPYOwJMzwdrELD74IKlQHe
kDhnEWcmRIVEUrdWaZo3qP1aHh4SqcKco+st00u9QZ05LHU/qcIFFeLJ6EFv
mCOLOrw4V4XiqSQ14zg+aGyPfVDYoMLfw6SfXS/tBS3XNI9yFoXMkVDpgTZf
cKwPXfTUgMLzzg5vrSd9IcR+r4xkU8iZWTU838APWr632DnXgkLzvA3NlUI/
yF/ewvV2ohCx5iPzgx+Yji13njlEYU2WcGH0iD/4RMxjMEMo/JM9obOBJYDT
/UN1xsco7C5YhN22Ahh8/8TRPZ5C2/tGXrZxAqiSBdsW51DYKl2xTKwuBNeb
99Zxayjkf46hDmqI4PiaKwP+9RQe68vg9i8RwY2r6XcipBTmZ6c2BZuIQOui
r3nBawrnVmqe4nBE4Mjc0lsmp9AzZLKwlC+CkDNWpU1tFAZOWH9hBIugJUXN
ZPAvCk2eVPZKMkQw92tv15weCl34avXP8kRgHdP6y9J+CuWfXOXDpSI4NPIo
wPILhR/qN7Xq1YggL6xk5eYxCh96lYylz0iI5j5Jh9c0hd6P1iZPSyXE9IGY
q4fVaKwZ+u2wcY6EEPnvMMzVorHxcpNA21xCnGuzVpXq0rgpbs15RcdZQsoz
KqhbTGMw1+xGY9hZwsRtWL9nBY0LRprzqoOyiQHrvMUOm2jsGTWq8ROeJowq
klt32dE4dPKNnP1HFuFheeR8INAYkci627gti7i3Chdlc2iUNVVf12BlEnG6
XdodfjROVNW1s2+fIszICiflPhpL7j+dLhpMI9qLEyPfHaBx+tgDBZubRljb
GChfhdFoEaXR7vI1lRjy592qSaVxMk+2v10/mSg0YdP3MmhkqeU96+clETs+
DzDLs2l0y9QyO5+fSNxMzYwpuURjMas2vK8zngi49Zh74TaNldpWVpYgJphR
Z+PPltPo/omlKfSJIhrAvzyzikb1gVs0O+UYYdAyvjSpgcaiQt5KS0ko8XZ8
Xc/R1tn+19e+ehqLiHmyb8Rl3fT/f/oPHGyPOw==
        "]], 
       LineBox[CompressedData["
1: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
PffJ/vunOGD32VVkMJ35///6X0VfQSk=
        "]], 
       LineBox[CompressedData["
1:eJxNkglIk2EYx7+8CCstI1vZgWnzyvJGbU9v1jC15R0FapFl3lZUliZqQZdE
kqxMFC2d90pZgda80TzmnZpnU1umy/ebR9k2NUtwfr7w8vLjz/P8n+PV9b/i
GaBEEITd/7v8Hp520LhRihGxckqvmW1bZqbUjDg/1gR9KaPSqY8Y6XdFpLho
toC8mj0YXo5RadXi3oq0NmBoybICazAKJp5xwjZ3gp994UNRLUbvInsD6Wc+
Q6y/X+iFeow4l25ZpYV2QUaCptvXRoxu5vIn+It1UMWrtvBpxshRvJQ+kFgP
I/3XtXtbMargpPqVSBpASZku9+7AKD2+by6TJgCmV0K1aw9GBQYqjBnVNgi4
w8gW9GIUpTXzZW6+HR5kkY+cBjAatWTz1Oo6oGHW0/3YMEbOg61w1q4LJnRU
rSpHMeItXqUFKXWDOrNkO+M7RrYeanxNWQ+w2DpCazFGb5PsjU1V+iG8rKWG
N6nwH4CnoricQxLFPIagaKNFAncaI5ViroWNrRDarUThRr8welnOkrBih2Ha
94VHzhxG4jJms8B+BLTuO1nryah5W7yR017NY8TnNVfYOz4Br27uwq6/GJ2z
PW0UHZIIsblh8jaCXNXzog5I7ymTqFPXMi6mLwk6T07+tlaj9IXd3Nnx9RTT
p0KnUzdQ7FFjInHVIFf2wYYY9s/JdVvIlX08h5zLheL3W0lEM2V6z+umQLtt
6HigNuU3r24ytnMHubKvZKAPib+16FDx7kUFI/F7KD36bojQUpdc7Sfby3ho
TG9N/v3i/hQ6iQgh2eh74jXI/+T3sowoXb8puGfJRBGfAW5pRl28gxRHR0x0
BJgr6ssEztH8NpoVxa1awS0CG4plIkNBrN2a/CXjDeYMqn7Xx3mfREeoem77
BNUmOyjmxYEsU8MaF6aiv1xoXfpRueioiM8GaUduebEzxfs4gfyLLIpPRRp8
0HZT+OeD1Nvg+CYPcvU//AMjl9Wy
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQ7R/+eNJy7q32DFCwav2sQ9N5t9rvNomTy7iZYJvE
81TYWnmr/Z2k6za3diTaSmfqp96z2GrPmhDwJ7U2yfbK0cptjX5b7e/NWhBn
VZxs26N0hF01Zat92nnTjaJBKbZ/bkesyu7far90jkPYH9U023t+Te9/PN1q
f9bsEh+nTpbttNVnHOb83mr/12PWNybXbFt/DvFJ9oLb7C1uT/pgEpRje+Dg
apM2m232ch29/33a82wXmlytFJ68zX6O3TrFsC2FtlET5U9vW7HN3ljQeVtK
bJGt0LtMmah92+yPb2Z1ucdVbNu0/N++BS+32Xu+uyjyKa7ENkVKg0XPYbt9
0youZgH/cluZ8qLQi6Hb7WX3l5T6SlbYXr28Z1lJ9nZ7vk7eKf2PKmzdegM9
d0/bbn/6tpn6sa4qW3WG6j6Pt0C+9Pfkj8x1tg9ijt5/zbTDXuKvvGDpqzrb
GTv5Dfsldtg3OXAfXXq93pYvc38biA8LXwCbcKLX
        "]], 
       LineBox[{{0.3156812211910519, 0.}, {0.31600804565845747`, 
        1.1302419556487357`*^-7}, {0.3163350000106856, 
        1.1423631427434921`*^-7}, {0.31666185645409295`, 0.}}], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBmIQ/VVnv2FB0Vt7BiiQ49uiexrIl9B1Cfmt6Glrb5Ym
6FEK40faJsRJfD1SDuNn2ja2nbrhWPXW/pKicX3NzSLbRetq9uyreWtfunz3
y91/W20PX9NbYF3/1r7nq0BJ1I1e2yf/HjTvaISpn2TLqj453bTlrb3bq//z
bvdPt1Xzd/Xe1AZTP9fWvfy7nn4n0H33352McV9omzF/pdCa7rf2mQwTl+QI
LLLtPB79TaPvrT1PmyT/GpOltqve895aOuGtfaPfMz3u1yttT4sf2Ks0+a19
0EStJ1q1q23f2BctnD/1rf2MvT7vfeo22OpNuJYxc9Zbe2vnq5E9izbb+u/o
8BGb+9ZecwfPdeekbbYFD6wMJs9/az/p5rqNwdrbbSdyvBUWWPTWfl7DzW+L
JHbbbjKY/71nyVv7/MOyaw6t2mN7OSLwNudymPv32n5pYN7ftvKtvc+5uXeu
PDpga3oxva1h3Vv7qadrAy5cOWwb9lMy6+8GmPuP2pYpnvGt2vzW3iKQbTf/
z2O2JtO3B4P4sPgBAHq80gk=
        "]], 
       LineBox[{{0.9679209268471853, 0.}, {0.9681956640588494, 
        1.511491531117827*^-9}, {0.9685031204469498, 
        1.7657878378654388`*^-9}, {0.9688105768350501, 0.}}], 
       LineBox[{{0.9883306955626439, 0.}, {0.9886739097987967, 
        1.1429047494274685`*^-10}, {0.9890171240349493, 
        4.571618997709874*^-11}, {0.9890261559885323, 0.}}], 
       LineBox[{{0.004551001612322869, 0.}, {0.004600482906334701, 
        9.141703759045821*^-13}, {0.004907180406212797, 
        1.2205907785028152`*^-12}, {0.005213877906090892, 
        1.5767288476273805`*^-12}, {0.005520575405968988, 
        1.9918219850034726`*^-12}, {0.0058272729058470845`, 
        2.4662616817302026`*^-12}, {0.00613397040572518, 
        3.00047234055645*^-12}, {0.006440667905603275, 
        3.60201487016569*^-12}, {0.006747365405481371, 
        4.272020017769472*^-12}, {0.007054062905359466, 
        5.012792194922804*^-12}, {0.007360760405237562, 
        5.828262321388224*^-12}, {0.0076674579051156586`, 
        6.716825092065038*^-12}, {0.007974155404993754, 
        7.686117542454036*^-12}, {0.008280758738776027, 0.}}], 
       LineBox[{{0.8986268393268166, 0.}, {0.8989366216307841, 
        0.000015272503125343273`}, {0.8992464041991746, 
        8.875369694772685*^-11}, {0.8995561867675651, 
        8.446780413737384*^-11}, {0.8998659693359556, 
        7.964617472572671*^-11}, {0.9001757519043461, 
        7.339591437729524*^-11}, {0.9004855344727366, 
        6.785996949725594*^-11}, {0.9007953170411271, 
        6.196686688302056*^-11}, {0.9011050996095176, 
        5.500229106619692*^-11}, {0.9014148821779081, 
        4.76805575151772*^-11}, {0.9017246647462986, 
        3.910877189447119*^-11}, {0.9020344473146891, 
        3.000124967247105*^-11}, {0.9023442298830796, 
        2.0893727450470908`*^-11}, {0.9026540124514701, 
        1.1250468627176643`*^-11}, {0.9029637950198606, 
        1.7857886709804195`*^-13}, {0.9029729062718721, 0.}}], 
       LineBox[{{0.9592156171007474, 0.}, {0.9592794288039381, 
        4.7144820913883075`*^-11}, {0.9595868851920385, 
        4.857345185066741*^-11}, {0.9598943415801389, 
        4.7144820913883075`*^-11}, {0.9602017979682393, 
        4.857345185066741*^-11}, {0.9605092543563397, 
        4.2858928103530064`*^-11}, {0.9608167107444401, 
        3.857303529317706*^-11}, {0.9611241671325405, 
        4.0001666229961396`*^-11}, {0.9614316235206408, 
        3.857303529317706*^-11}, {0.9617390799087412, 
        3.4287142482824054`*^-11}, {0.9620465362968416, 
        2.7143987798902374`*^-11}, {0.9623539926849419, 
        2.0000833114980698`*^-11}, {0.9626614490730423, 
        2.0000833114980698`*^-11}, {0.9629689054611428, 
        1.1429047494274685`*^-11}, {0.9632763618492431, 
        2.857261873568671*^-12}, {0.9633532259462683, 0.}}], 
       LineBox[{{0.9830108749022766, 0.}, {0.983182482020353, 
        1.1429047494274685`*^-11}, {0.9835256962565057, 
        1.1429047494274685`*^-11}, {0.9838689104926583, 
        1.1429047494274685`*^-11}, {0.9842121247288111, 0.}, {
        0.9845553389649638, 6.857428496564811*^-11}, {0.9848985532011165, 
        4.3506955096455443`*^-7}, {0.9850934185392768, 0.}}], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQzRD6+atayTt7BihY8GXJzAdA/u5NZ/ZZua2xPXUs
ZfrkcqD8/XcnY9w32n6doTLVrQrBV8h+MulnzTv7S4rG9TU3N9l62S6ZsKYe
IV/Cn9IX34Tgz3+o3CPU+s5+SUq5yZzsLbanNj/uPNr+zn7GXp/3PnUbbL+0
Lm6v6Hpnb+18NbJn0WZbuYjkVu3ed/Y8bZL8a0y22npqKTff639nf+9E7JHT
x7bZlvx51DBxEoI/79yiOpep7+wldF1CfivutD2xIKnm+/R39qXLd7/c/Xer
7ecipapVsxDycq6PymPnwvy7x9ZDfFGpwIJ39q/yOzilt+yyLXqZWHx4EUJ+
7m7FwrKl7+zdXv2fd7t/u23w35i000sR4QcAnVqsKQ==
        "]], 
       LineBox[{{0.9934102662577043, 0.}, {0.9934789091049349, 
        9.143237995419748*^-11}, {0.9938221233410875, 0.}, {
        0.9941653375772403, 0.}, {0.994508551813393, 0.}, {0.9948517660495457,
         9.143237995419748*^-10}, {0.9951949802856985, 
        3.657295198167899*^-10}, {0.9955381945218512, 
        3.657295198167899*^-10}, {0.9955383143592241, 0.}}], 
       LineBox[{{0.9903837689571864, 0.}, {0.9903899809795602, 
        1.8286475990839495`*^-10}, {0.990733195215713, 
        4.571618997709874*^-11}, {0.9910764094518657, 
        9.143237995419748*^-11}, {0.9914196236880184, 0.}, {
        0.9917628379241712, 1.8286475990839495`*^-10}, {0.992106052160324, 
        0.}}], 
       LineBox[{{0.9855849343073944, 0.}, {0.985584981673422, 
        4.571618997709874*^-11}, {0.9859281959095747, 
        2.285809498854937*^-11}, {0.9862714101457275, 
        2.285809498854937*^-11}, {0.9864430172638039, 0.}}], 
       LineBox[{{0.8938247793306224, 0.}, {0.8940254763533624, 
        9.143237995419748*^-11}, {0.8943572928177166, 
        9.187882712194258*^-11}, {0.8946891092820708, 
        9.268243202388377*^-11}, {0.895020925746425, 
        9.321816862517789*^-11}, {0.8953527422107791, 
        9.330745805872692*^-11}, {0.8956845586751332, 
        9.295030032453084*^-11}, {0.8956845607154863, 0.}}], 
       LineBox[{{0.981809625075742, 0.}, {0.9821528393118948, 
        4.571618997709874*^-11}, {0.9824960535480475, 
        2.285809498854937*^-11}, {0.9827248630388159, 0.}}], 
       LineBox[{{0.6814452676272925, 0.}, {0.6817738035706308, 
        8.356159339898771*^-7}, {0.6821023596168785, 0.}}], 
       LineBox[{{0.8963481895478086, 0.}, {0.8963481916038416, 
        9.3664615792923*^-11}, {0.8966800080681958, 9.348603692582496*^-11}, {
        0.89701182453255, 9.268243202388377*^-11}, {0.8973436409969042, 
        9.277172145743279*^-11}, {0.8976754574612584, 
        9.250385315678572*^-11}, {0.8979563086516759, 0.}}], 
       LineBox[{{0.9983983131564573, 0.}, {0.9986271226472259, 
        5.8516723170686385`*^-9}, {0.9989703368833786, 0.}}], 
       LineBox[{{0.986957838618033, 0.}, {0.9873010528541857, 
        2.285809498854937*^-11}, {0.9873868564132239, 0.}}], 
       LineBox[{{0.9975974799387677, 0.}, {0.9979406941749204, 
        2.9258361585343192`*^-9}, {0.9981123012929967, 0.}}], 
       LineBox[{{0.06199537216752659, 0.}, {0.06229973768736295, 
        4.181378658596671*^-8}, {0.06260410900695094, 
        4.272763725614693*^-8}, {0.0629084735288491, 0.}}], 
       LineBox[{{0.9962245031567838, 0.}, {0.9962246229941567, 
        3.657295198167899*^-10}, {0.9965678372303094, 0.}, {
        0.9969110514664621, 0.}}], 
       LineBox[{{0.010032081869253993`, 0.}, {0.010121037904140425`, 
        4.073721409783519*^-16}, {0.010181467922238317`, 0.}}], 
       LineBox[{{0.9664297275776172, 0.}, {0.9666583821183474, 
        5.057353516216548*^-10}, {0.9669080141398785, 0.}}], 
       LineBox[{{0.9993399522146199, 0.}, {0.999656765355684, 
        5.617605424385893*^-7}, {0.9996567653556876, 4.}}]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwtWnk018/3lrIkpWihrCWKRCWVvF/PW0UUJRQqIUskQihbIbvIFlk+spNk
D9n3JbLv+77zVpaK6Od3znf+mDnPmXvn3pkzz3nmnjM8D58q6lJTUVEVb3b/
P7opndybxKEBqv+1W9o1OVqBWvBfLriSn90mId54JtWPTQfqyc8oI+n1EkdI
4fFlYXqgbtLX0fdrlmBMpP+wxGUAjuv6bo/utEos7X8WeDTaEIt0K+djdZMk
+l73ed3hM8aRC/pW8kpjEtq/o0vLlE0QdvMY48kDoxIdJ9WI+4GmCLB5vodT
fUFCTndX7lKHGZRo3rQ5hK9KFIeWnfViM4eETE/2Yhs1SbT5RdrRexagDeBk
yL7GQPpIf1KoMMwSktz3NEMkmEmcGEm40/8ce0j3jnkUsJH8LN7zUrisIHzT
kf90LTeJNkk+wlXLGlwMg15SvXwk62Fqdu5oGywYMOd+pjpJmmfNCcoZtcWe
3enVnflnSNo3jVhu8b2Ed3qhkOmRC6RO58Nvpx69wsni1FITKjKJr9+QpkTZ
HnfE0jIEBa+QNK2kL3st2+M1N5Wgg5UsKWQvj4NaoAPOrPYUPw6+SWpNWSs8
es4Rs2ZUizMWSqRd19v//uhwRDZH60u7IRWSzHiqeOGL11gXPhMRsFed9NrB
84UHmxP23jmoI/hei1TIrpd1J9cJ/n8s41oP6pJ+Z5OXDt9zxr9zhc/LpA1I
p5UOnaasOUMokFGO/pAx6cn88tO8MBeoNt3w8GkwJcW5N352Jbli+dT2vOOr
5qRB3k8zSv2uyCKkLp2KfUE6WOx8nPuVGy62sedur7YlKd/TfDTL5Y6K6NsO
oiX2JO8V8dicYncY5PCzdhm+JlX77htx0vLABoNB7G8TFxK10AL3LWpPUJ3Y
cZCzy51Eqv72gCPaE6I91Zy8n71IL7Rjw6Yuv8H01XOC9n98SOkbr7q/jL7B
xeP3j48+8CfNBt9ldXT2wqkLBrF7dgSS+M6evXODzxsG/LuFOamDSZqNTAEH
q7whzmHCoiUXRgo1nG4af/QWulIKtD9+fCAZvh52VdvmgyCHO+K71iNJ9E0N
cUXKPjCWEtX2EIshxXIWVByN9cH6IzEZkY9xpEtPEkc9l32g4ZbbR1b7SBr4
GrT1p5QvakdlzU/IJZFs6ZwPqwb6ovnlTfcF1xQS220zycJxX3TxPs6YcE0j
ZUVpaPKe80PVIS+OaosMktKC3CsPVz9EyGhoxL79QlogiYcvdPhh/ur9CI2u
bJKXJ3/BnWP+ONIg+oP3Ti5JoGtvb/4Lf/h+5HrfQV9A0jGnsLmzBSB2bNfK
dZ8S0pmtftbpJgGIPtKad8WojETtJ9rTUxWAkjHPd47PKkiN3B0XabjeIbOR
i2sjtor0IcUq7KTlOxgYR22E0H0jGRPs6yrf3+FM3YfixtA6ksT3QnUH3kDM
dLu33dZtIHVPb+VqbQ5E8/2yqoSWZlKCVdyr9eNB0LzzSNzBv5X0nF52kM8h
CK2yDI2WFu0k6aAZskJnEPpSO/2zbDpJe/m8I62E34OatZTrUkI3aSRThDra
5T0a1oXltNZ7SemXWx7W9b2HHIv2ZU27AdJNLVZerjfB0PsmfY3baZjEuZDr
JDMSDB/qN8e3M46SZl+qj5mKh2DmAYNQRPIYKW8nlXSobwgKhUv3XTGaIHmE
RcWVT4aA/95peRfZKZKqoBTdPEJRRfNXuObKDIk/d+LRgaBQ3EhatW3RnCOV
d5w4/lgqDJ2VBfz9VD9I/noN7v5hYdiz0797p9RP0sNl0+n8xTBs8bJZOPLf
Iukfc/Ynpqj/cJ46TLn+zQqpPlKN8cKf/1CWKspjyfebFCby98lDhXBs1zZx
Yej8QxK/IXnyy0Y4RC3T/F66rpPo+0a8+29/AFsaaS3L9R+pw9CFQvf5A8x0
9OMkm6mI3HJd1c9CERCpOz3jyL6VOMyYTX9JLQJqIc0bGWrbCHcl+q/tThG4
e/xdfGc8DaE6nMhG1RuBICnvrcNW9ETR8b81AXSR+FNQO3j133aCz1Te+viZ
SCSuRep/fL+DWP5H6Vb0iMTltT1vvRiYiPtXJT0nvkQiRbfE7aHZbqLc2++i
7VAk8jrzKoQM9xB+HGfDYs9HQexwteYHBxZiVcdFTlwnCiF2X45cjNhLaCV1
/K1/GwXuPwzDj+v2ESIXrdV/j0fhjvcyQ/BNViLIsXanF3M0fiV7pcfGsxEb
NeyFPEQ0Pnx9EPKI6RDxXbWI8/q7aLjFPPBQ3c1JiEbsbhgojkbnOSXr9EQu
ImxC65X5bDQqDs51+HziJh5bbhv873IMUuTPpD40P0zQB8hGLvyIQalC6jjF
no9YOz+0FnkwFnsPChWqv+En5vte3FG6HAuePpVRpqhjRAt/wo6sgFiwjoTM
OM8JEJV10HtUEAvmeEcJypETRI5pRzHreCzEOmMzJ3SFiPA8Wkubc3F4tvw0
Y5lWhPDVDG88oRmHqPf3397OFSGcaMQE+93icGn8ePdp81OEwU3dQXJ3HM6+
OH2Z9+9pQnSk7BqtXTxKbh4L0XwoRvC73YvNjo0Hm6A1B8fNc8RBocV/+vXx
OMd2ovvn5fPEP8vDX2q5EvDD51HAN2lx4uehXCY7mQR4lBhzSt6+SIwW33p8
0jQB+x0L4nKeSBDfGBy4fEsT4DNT//lDNkEUpLBaX5pJQMAzcozXDIhU5dTW
RZaP2OM3GpsXQCbehQ+439H9CN796Zq8w5KE5mli6RB9Iiifzy58KbxCKHW0
3fgukojj35JF1Z2kCGlbo48v1RIRkBPYza4gTQhWhj0YSkxE2/zNQrvVq8SK
2lp1nPwn7PvTIMn74ToxteF3RNXyEyLjY6lGg+WI3miBl9s/fIIyqTV3S5g8
UTKndubJwidcXb/AxJB9k3jjkPPfKf8kpG4yOYFPkXjFp/B7OC8JjAqmNVTl
ioRZ7YRiwGgSnga6k8p1lQiVfQfof539jGfpYl4LWcrE4Y8WZvmdnyFwkvlN
gZ8KsffGzu9GW5LR8VbywNU7qgTdYgw/l0Ay7v5U1NnDpUbMSrT2OtgkY7JV
z7q3+C6R3Xj66lXOFMRraU94yTwgvKdmZU5Ip2Bgl2HGO1ENQo86/toe4xSU
sUTlybJoEvtFD93oKUiBLwtVi8UuLSKv1iEx+2Qq/jXRm14R1Cb4Ox8IJl5K
RXTwSnF3rjbhP3oxKexOKjz7Zo3m5HUIw/Xlzw4vU9Ho/u1v3Utd4pDw47Tr
9anQTTyvob9Tn3C5ePU0MZwKd7LA9+ZcfeLnVd4MkZVUOLUspF17YkB80+zP
3MeZhpKg5rzUnseEtZ9izoBRGg4Ls1a/njcixsOFLzQ7pEHjn3GXS6ExofiJ
Mbf8XRqyVVW+XvB/SgiUV+Z9LEjDu6GkAsdYE6J7Wbzo2c505Au2a96yMSOk
qVnJejzpkH8oLiDzy4xI37VcrHo2HdpqC3w/LJ4RHvwppST1dFyiY/zhbmNO
iKsdqaT7nI5KjwM5wh8tiThdqqurxelws8p9ulviOcFs1lc125oO7/Na4XTN
z4lpj6Capr/psGhsNzOmsyKC83d8D5XLQO0Qe21osA2xrWZS3lszAzbXmX2T
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
x2KxFjCvS85f5JJAbadKwS7vFjBwkqd8bwKO3RP7Hvu3wNbTpZLVCTjf+9y4
4n0Lzp860DaVA8QMBHHZRrcgpzVi/sseMmzHOxymclrAQxvg8teODKElFeny
kRb0bIhIlapL4i2TaoPVhVakZGUVPr54GdJ7JvnbiFa0fj+oGH/3Mv4yv7AX
udIKSkV0/C7ry9Df//7UxI1W+LGcVnvw9TLIHJ3+yjqt6DP7wUUnfgU/BFRV
hd+24kBpwoGPl6WgJK06NDraiuhMI39vq6vIZTnVMDLVunkfT7huC7uKw0Pb
C4bnW/GR2/Z4bOFV/LTJez/4uxXKnyL5H22TgU8ap0IvYxsMmmyaf/rKoI59
rLBFtA33lk6G3vwiiyuLpmGlTm3Ina0SvM8ph6Tiax4l7m3gGVX89lJaDize
R14Ue7chZ33tW5OxHIaPtSkVvm/DT5W29O3FcrB/cH5HblIb9v69oFepI4+C
mg2rtNY2qKtI8odn34BYhKdKBG87tKve5TOXKiC15JXVDoF2eFowhSr1KEBw
5FmopXA7xG9mxmYuKYCb7/6AnHg77KpbKzv4b2FH0olHf26246gp68/Yt7cw
mP3dUtGmHdYpE6z2uorwbGAK3NbcDi6WTpYjgsqg/bE152lHO2hCPgh9llGG
PfPvru7ezXhGOuP39JRheXuQI21iM56DUC1/lDI0e1Jj1dfb8WnQw8nu0G2I
Tdz6knWsA4Lez0Qv7buDwQ3/Vv1Xm7iQdedlPlUwzjZ6PnfqgNVl7T8a0qo4
37Xzsot7B+5JXT8QqacKnwzXtGj/DlTr33nqE68Ksr6Nd398B4IykmX5BdUQ
2fRQRrmxA2ZV9lVKF+7iYcypfPB0onOV/Xa42X14+xo/u8HXiXnud7+dgu4j
9+UnAXXBTvhxcF8MyL8PZrWjwdZnO2FEI3ZaiE4dZTvZLL/IdmLkCjWVfLg6
eJ9TiQiadULL1PeMbusDjMk2RO8v60SKmKvi61RN8Hryv/Wt7oRYem334ypN
6NS9smas74T241pWo35NDN8QuUXd1Qn/B5McpYxa6Ffy3Zib70QvU9CxtMda
6FRXUqs42AUHtTadXMGH+GbascvcrAvXR9KndMu0sT1DeHX+eReWTbPYO/u0
IbPkOmZg14XDa55G+r+1UWV5Pl/DrQt0Zs96RoR0UG4TbHA9vAvt3uG7ZUN0
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
        "]], 
       LineBox[{{0.0011020705386914687`, 0.}, {0.001226810407675648, 
        1.5990676405512596`*^-16}, {0.0015335079075537439`, 
        2.7033961215949474`*^-16}, {0.00168229600187315, 0.}}], 
       LineBox[{{0.00027669545963360573`, 0.}, {0.000306717908041361, 
        4.0400493699835034`*^-16}, {0.00048762328543948326`, 0.}}]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
WPdg0Ot6xc0pUhG7H6VyUux7//svRCbyf+aBkx0=
        "]], 
       LineBox[{{0.04570363064360456, 0.}, {0.04587573683415372, 
        2.1615667439444934`*^-16}, {0.046186198172805164`, 
        3.0528760923980715`*^-16}, {0.04649665951145661, 
        2.138510196799066*^-16}, {0.0466124169833152, 0.}}], 
       LineBox[{{0.007282188146246043, 0.}, {0.007360760405237562, 
        1.3863047585668067`*^-16}, {0.007437217374578882, 0.}}], 
       LineBox[{{0.0012042115634772845`, 0.}, {0.001226810407675648, 
        8.086222904183072*^-17}, {0.0012580151260600011`, 0.}}], 
       LineBox[{{0.04379859109804302, 0.}, {0.04401296880224506, 
        5.349057193469818*^-16}, {0.0443234301408965, 
        7.157230169927427*^-17}, {0.044633891479547945`, 
        1.463611318713141*^-15}, {0.04489362312980178, 0.}}], 
       LineBox[{{0.04140902220389179, 0.}, {0.041529278093033514`, 
        4.2877642992607465`*^-16}, {0.04170710131365401, 0.}}], 
       LineBox[{{0.00541570468802874, 0.}, {0.005520575405968988, 
        1.9166561162528316`*^-16}, {0.005621124246597809, 0.}}], 
       LineBox[{{0.04759315535628274, 0.}, {0.047738504866062376`, 
        4.2598122189499826`*^-16}, {0.04804896620471382, 
        7.995904607678475*^-16}, {0.04832026229602157, 0.}}]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Divergence Not Removed\"", TraditionalForm], 
     PlotRange -> {{0., 0.9999999795918367}, {0, 4}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), 0\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), 1\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), 2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), 3\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), 4\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), 10\\)]\\)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8045123372802935`*^9, 3.8045145204638624`*^9, 
  3.804515150414144*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 1\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 3\)]\)\>\"", ",", 
      RowBox[{"Re", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".1"}], "}"}], ",", 
           RowBox[{"NpMinus2", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".1"}], "}"}], ",", 
           RowBox[{"NpMinus2", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".1"}], "}"}], ",", 
           RowBox[{"NpMinus2", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".5"}], "}"}], ",", 
           RowBox[{"NpMinus2", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".5"}], "}"}], ",", 
           RowBox[{"NpMinus2", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".5"}], "}"}], ",", 
           RowBox[{"NpMinus2", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9"}], "}"}], ",", 
           RowBox[{"NpMinus2", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9"}], "}"}], ",", 
           RowBox[{"NpMinus2", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9"}], "}"}], ",", 
           RowBox[{"NpMinus2", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".999"}], "}"}], ",", 
           RowBox[{"NpMinus2", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".999"}], "}"}], ",", 
           RowBox[{"NpMinus2", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".999"}], "}"}], ",", 
           RowBox[{"NpMinus2", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9999"}], "}"}], ",", 
           RowBox[{"NpMinus2", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9999"}], "}"}], ",", 
           RowBox[{"NpMinus2", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9999"}], "}"}], ",", 
           RowBox[{"NpMinus2", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}]}], "}"}], "]"}]}], "}"}], 
    "]"}], ",", "6"}], "]"}]], "Input",
 CellChangeTimes->{{3.804513860140776*^9, 3.8045138775126495`*^9}, {
  3.804513914375434*^9, 3.8045139180740023`*^9}, {3.8045140135493803`*^9, 
  3.804514026582283*^9}, {3.804514070136856*^9, 3.804514093356305*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), 1\\)]\\)\"\>", 
     "0.00013180608133763716`", "0.0197906331214787`", "0.2339287258807105`", 
     "0.7283211110594736`", "0.7870014344058355`"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), 2\\)]\\)\"\>", 
     "0.000026364654503325367`", "0.019920819624362575`", 
     "0.45129955287350393`", "1.7367263449261792`", "1.8975946262100905`"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), 3\\)]\\)\"\>", 
     "4.001058585198774`*^-6", "0.014886413836774009`", "0.6086632291563545`",
      "2.7878407573091004`", "3.0729565455118215`"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.8045137019376183`*^9, 3.8045139205257244`*^9, 
  3.804514028731286*^9, 3.8045140955202923`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2NP", "[", 
       RowBox[{"e", ",", "0"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2NP", "[", 
       RowBox[{"e", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2NP", "[", 
       RowBox[{"e", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2NP", "[", 
       RowBox[{"e", ",", "3"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2NP", "[", 
       RowBox[{"e", ",", "4"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2NP", "[", 
       RowBox[{"e", ",", "10"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), \
0\)]\)(1-\!\(\*SuperscriptBox[\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \
\(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 1\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 2\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 3\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 4\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), \
10\)]\)(1-\!\(\*SuperscriptBox[\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \
\(3/2\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Divergence Removed?\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.1"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8045112402540064`*^9, 3.8045112711862946`*^9}, {
  3.8045145729361563`*^9, 3.804514575057189*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.000024185766477748702`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(-2.49366499671666`*^-16\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.5939906358846744`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045123391055984`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045123391925187`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({4.503669942224799`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.734723475976807`*^-17\\)\[NoBreak] and \
\[NoBreak]\\!\\(3.820404467573641`*^-16\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804512339271443*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318519448951320385675257047976413268819406710008479421958327293`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.7695567233744214`*^-13 + \\(\\(4.163336342344337`*^-17\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.367876784470429`*^-12\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804512339569166*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804512339653097*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.80451234013564*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804512340301486*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804512340388409*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
rqeOU8+hGvoxq00keJ95YDoWRkdCD5jvp7aQoKA9pFPLoKPZB+PRnttJyKs4
YZ3nYYNe14od/iVKQlmCr2jjlDVqqKO/iRAnoWMnTZ+bbo1y6pnha3eToLOr
ar+1AB2FPBzfl76HhDR/pf4pYRtk90jsldheEjYWdu2zHee8bzfQg8v2k3DT
49GCLGmN9iDmnmOHSMhmqsozXlmj1Y3jA01HSDj55ZEfM9sGUY1iAarHOPXF
+Bt+KbVG/U30XYOyHD/C3Jwn/KzQ/WZmn7kcCbbfxr0OC1mjlJZx30mMhIdN
lvMZvhbIr1VM1OM0p777fJFW/ubItI3es3CGhP4lAyH1+uYIa2d6hSmSsPLX
iZOxryzQjo7xLWtUSHi+fqG88q054u4U60xRI2F55OWLQj1GaKKT7r5Dg4QL
IvOm38+ZoK4upnCJFglDhlqxJQsmqKR7vOWILgljcXE8Ls5GKPaxmAvSJ+Gz
VOcypwoD5N5DF1I2IsGhSKvTKd4E6fYyUb8JCcmKN3cUKekimSfjDqbmJETn
WB9/N6eLNj4VE5iwJEHShute9agukv3x4ru1DQkp7Tt1kl20kfHWqFejtiQs
vcV+L2GgjC4pnnhk6kDCs4G4/dotKijDlZXzyokEV0cP/QtLFNCj5OxQfRcS
VMfSau65HkVvkZbDc1cSjul47PY1W4F+f1qipulBAs/iX91j0ofRNv7qfb2e
JBC+T84837gCg2MO61QukgB6+yvWzW7ErC2Ff7T7kjB3MVbI6sVuLCSyZ1je
n4RX8h3bVnUewpjlAQ2NARxeR7a+/pWjgLW93J8rd4WErx9/pIa8OIdN/BkL
qwshwSzb3TfBXwdbtjvJ8Wg4CfesS4fe1BtgElqK56oiSeAvjBmxtDDDlH3n
9h+IISHLma5XEGKFOd0qFiy7RgLXtmOkjLU1FtNlNisZR8Lu3pNPaFttsRL2
mpHCeBJMaKJnnE86Yr0bm5FYEgmPkjqeJgQ5YQR45t1KJuHjQG604glXbH/8
S6f0DBJGpP6M3jx0AdOqi1bfkE2Cj7BkRUCAF+YxdvJg0i0OrwplXCfXeGMJ
K8j/BJiceXl5I3dCyxerOnhrLraABIOX++WuhPthg8Y6b1be5vgpF+OeYXUJ
mwle2hRZTAK2WdPO5WoAdvS5Y2RwOQlNa3zaltwIxgwXRJx/V5LwR/lcjF16
COYj+kTD/z4Jry2flh/5HoqlqgYdmqsh4cSdvaX8xe6NdRcOrveuI2Hd7Mg+
OVYE9jp9fP7rQxI+EUrXfKOjsMWWm29dEQm0CqMBsQsx2CnBhXzHVo4/ywu3
YrWxmMXJ0qiJdhJEVL9Xa1+Pw4LoFi42XSTs6VhlsZI3Hrt1da3Wu8ck/MxZ
2FMvEYI1V7UcNnvC4ZGZcvDSmVDsw4jXhuE+jv8X0gpSj4Rh3EslFvWfc+Yv
PUZ7+6NwTEHvaovmSxImHZ5bb3KLwuwvnyrsHSbh4HMucjQgBovMp6JV3nD6
KSgpzBt0Fev+rqt9Zowzn3UaW7JarmNfNi+TaRonobd+TTNfTRzGp1C78dQn
Eq6JCp5QuBuPqd/c/P4oTsKa7MJuJWYi5trwtLWK4PTv+/3sFqUkLG7iStEB
NglPg69neEffxCpWH75aNk1CUq6U9u2pZKxfZsJ1zwwJKoc/p179nYJNm6fo
FM2SUNj15Oji61RMMELl6M4Fzvn+73f47qJw7k+On7+bJfrUz2J6Q2W/tvwh
ISogyNfjnCIWdJux+IyLgjb/8x0Uz1nszqW986FLKUjpXD9/REoVGzhH/Di6
nAIrYUM974dnsF9by75PraCgES2fMkw+g0l8dZnOXEWByPDGZ5oeZzCdVmm2
Jj8FdTM5DiMMNSzgJotYso6CII+qqQ9y6liRQyle/R8FB3o9YyKXaGP9si5T
jhso0BZ5kWH+XBn7ySc9uUmEAs0YqbiKaA1MYhT/+HQzBS61XMsHjc5h2hUl
H4K3UZCrurxcaK0G5h/i/P6IKAWXlW0//Dl2FivUkxqd3EnBmx2ROaxATax/
Fz6SLkHBd1M9btMefWxxrnhYfQ8F/F/UQj1+a2DiPedf/pWmgDeOedQ+RRfT
ytrzomo/BZ7hk7sD3XQxf7cvz+0PUZDfUVDnTBlgBaeLnwnLUPDi2vivtkYD
rE/w/NPeYxR0r6ypk7thgC1MSPYGnaDgwcOwxtYr6ph47VT3oVMU3Nwkeye7
TgXTjLnTOUGjwDr4lBRNXg/zM3NqT5Wn4JCbl9yVOEMsf59kq5oCBXEi8adk
n5hgfX8/N/1WosDAJeK6/qgRNv/8NqpUpeD8wcX40SIjTKzA8ZGtOgWDQ4Ou
1zyMMA2f3fUbtChQua945fU1U8xP5fODxzoUXO/t3J/08CxibrpdHaBPgUKp
/zOvPkP0hHCoOmBEwfYEHomIn/porlGictyEgk0yz7YH/jJCYgmTd5PNOXzU
dtS/DzNH6rZFpSpWFOitvycu/NwC+Rx1KP5pQ0HM3ZztbrrWKI9X4na5HQX+
vLw/6vc6oyevPxXYOFJwdJFR4WBij2ZLC5lCzhSotQbVjrs6ox1B9rldDAqi
HghrCJW6oHPau3L83SkwG8x5WirijnzEPmXu86RgQPfjtYzZCyh3piB9zJuC
hkuNanvFTLGeTrvUJF8KMts1Y1RuWWE/0sSTlfwpCF2HL2NrWGE7XCYSFwI4
z9+7mPx30hpTwwriy65QEGbsELhQaol5r7WLswqloGbXbWFLM0vs1oedsYIR
FOjWH9lV2WyD9dz/GNMRxeFF/KTtjLU5NhORH+V3lYLE9T+qltRaY9uMbSOk
r1MQrLfT5fJbG0xVamfYuxsUbN4yUvFxkY55/xoPTkikgGk14dTWScdy+phB
CskUbFzSv7wiyA7rzqUHzKVy+JKek3ndYIN99xTzL8ng9Kui/0rKajtsm+K4
r0U2Z79wWZaGpgOmspF5USCXglv3F+dmXthhnl9svNqYFKj6PH4l98wey34k
esGnkILA9EPqy+ZtsO7rH9z23OHwfQcPab17A32zymO8LaHgSbrObIxtPPqR
uuyozV0K8Kw/eufZ8Wj+2fnfnyo4PJ7VUv+7MhH94u3rcK6i4NvYSEFTpSf2
Fw7Hsasp2BK8wnLPKi+M2y/F0LuWw0/X5O9FJU9seeXitoV6jl8NmZ43cjyx
lVOWnwMbKHg21Fi7neaBrd7RVsHdRMEucxdsx2cGttZ4t19UCwXi1X4T/bmu
mGD8tdOr2zn9kZQ7uBJjYOu72SsSOimwyYpzzOlzwoS59J+vf0yB8sPLm886
2WKbZevSM3r/t79P5m6cMce2eWyhb+/j8Mvafa+XZYaJ3QmWKujnzGfgVNLW
SC1s19jEN8lBDk9CHdvv7TyASQqrPro7xOnfgOvsyXXKaK/23bDDwxTYBu3Z
uvhTFx2IXqdeO8Lxpz/NZ8bNER1uvih0apQCZ3Ncp/SqGzo6//pt83sKipbk
rtpW6IVkD9IKFccp4PMpvOskfwnJOTFdeyYoSDBas2ku4wqi5S4/pvWZAvKj
wtapnhAkP+z8Z/ALh1e9O+bitAikIPCs05igYNVN1aLWjVeRisqRG6MUBX+Y
gW2MMiZ2LjjViD5NwY2gY6Ky60KQZt3P7Z+/U2C/QS5kqXoY0v1qNeUyS4G7
dNGaictRyECyvfLrPGf+rKYbfkvEIGNryUsXf1Kw1L54ZCvvQ8wsLVZ+8TcF
SeVL/uotIMyy/+vKK1zs////oK8wGFi6lA29Ser44DZJZH+6PiN6GRuSw1xe
KLTvRk5+W23XrGDDnEJlWdoNHcSoDJFO5GND7XxQhqa6PHKf+vR9wxo27BI1
PbW1VgJ57lBryFzLhmL51AmapSG6aFwevkOQDdtx71HTcG3kFy+oUSjEBvoW
ec5HzjkU0O2zXmojGzA1cZuThoroCteb0XIRNuzbdmq38F8FFCoLRUe2sMHa
Mzw8eEAVRXrku9VtY0O2ac2p8S4dFHOH9zgmygZ3L+Z7k196KHbM5W/LTjbk
nTR/u/2wDroh3N+lJMGG5hPlGS8/a6NEbZn4Xkk2rL36tuTOb12UEp1mrC3N
BobP4BbNYhOU3vxrx9A+Nhzb4H1I0lAXZc1bfzE5yAa9WRTpFmGFcg923Ht3
mA2HWu6eiKi0QflOe/xtj7Ih1fb09mNXbVFR7vUzU8c55w0x6+tcbYOKh6f5
XE+yoctX2sxdxASVCRgOTp9iw6jOsZMzzpzvNZWHmT7AhjqN3OUj+81RVfA2
u5/ybCgbd7zr226DaupC9wYrsEG818nMWM0e1X2dnOFRZsPKqPW97sVOqEHy
HIpRZYODRnTH9nEX1GRdEcGvznneoHhMrMwRPXzGOPdOkw05sSWWTzA39IAm
ta5chw3MwNhU6WhXdO/u55eB+myI6xRUTEaOqGxLYZaGERtYV28GqkkZoTvX
6PStpmxAj2XtXlvoofzF7ZKkORuG9rVX/vbVQjnnR8kGKzY8C4gJTSmxRBnD
Gfdj6Wxo2mCsJkbYoBRl40vm9mzgTbf0p84eRwkP1sNeJzasGrhk3pivhGJ3
DfL8cv7HY/TN+J5eVzYcTzCry3A0wMKWasZnerDhVoO4QEWvAhbkucrQxYsN
Kn4rs44fkkH+H7o3y/lweFBkJMmmHcEuakd+4LvEBurMWY0HXEcwj6azt0cu
s0Hfu1a+xvkwxti/xLUk6F8+x+zGw/4hbPD9GylKTZhg9NUB86rhbHBMZFms
sd9Js7x8olEkig0p/NfT9WO2NJrgs2FfYtiQudmv6fluLUzfpFq1PpbDh6zE
lRJ+GqbdfWFtzA02XLzZNfBk/hSmfvzAkHEiG2YfihgoTMoh5SIiQzL5X/4z
60us51PZQN7QD7TtPYHRwh0lujPY4NMf6m2WqItOfBcnUrPZwL+UOeXaeBzJ
0MfvOeb+23/w+S3f4/lsOGfWZ9F5wAyTPm2B8Rax4YBEcBRfpwImUbFp6as7
bAiv3BAcPZWCxLYNdxeVcvqd7a4EzffR1uvJcT7lbCg6OG0m7tSIhH/p6ivd
Y0PPO3X3M8tsMCEXgU0bqtnwp/7ai7/bTmNrR56+//SADf4Tf0YeXdLE+FSv
FdbU/6tneZ2KS0QDZ/7mVgfc5jPDuHcvP2TQ9G/9d3LbrHgrGz6vcPNvblRG
8zwhDTPtbHg80DwVLKGEZrxooe1dbHDO/o+qTLVD7PGfyjd72BCmejfwhuBZ
DNepX2P39F+8yWafwSP9//SHAzLpSwf/6bc505aDQ2zocPO9kI08sOE1FeL5
w2xYtl5W9YKkMTYYwMA937BBS5WmJneL877H2lN55h0bhMS3rdTo52vsMf18
UfADG/azDLckvNTGOh4XyI1//Be/WZa+pGryn264vb0r5AvHH/Hegd2f7VDd
htFYHeLf+v2IDF1RNhveyN1bnJVywcpnjISnp9mwosDt+JEyO1Riu/5d8wzn
fhy2eRCf6ooVDgzkx8/9258rH3/eepENfuc0iSx2OMqq1Dhw8DcbOt8P8Xke
K8KqMg4an/lfzY0f/KNWDf8DleaS9g==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
ZtI2QZi8dDBVY/gNC012RbsM/wPe6suJ
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
gfqrBMfycjKu9dhb6w9SsLLBtjqnggxRdaXXl0YoSJmLPuVRRX9Pl5xSvUul
oFz5z5EvtWQEUQxm1mbo9wseH8msI8M6rSwykEaBbOMfm5v1ZAjvefQ5apGC
VoH22Zl3ZKzvXPbl+kVBxp2t42kNZIw/vCKa/JuCqgCfFJNGMtLXZJxfrlHw
6tEf86wmMgJKkvZIr6Miq1g4WaOZjKvOmypKmajgitXTnaBbaOIzcxMLFdwi
E2U7PtDvn6z6UncLFbu2FTon0D1+Ls+wdxsV7Jtvtu1vISOt1f/5GBsVL1IN
LAVbyQg9snoxiYMKyW1VOml0uz525r3ISUWSp+KnvW1k/PebMsjJQ0XMTXWG
KLrVL1nE9+6lQuKLasU/uo/W9J+PEqCiJytzs007GTzC+tx6+6lYTuwba6R7
boaIaxKjwkH5+F7XDvp+1S8yCzxERTf7IZc6uqsLxDmVJahgunMHmzvp68tJ
6luTouJWoaubJt3RnrxPyo5RIbbLlzeAbs+RaNO7x6mY+zotWEy39Zktu2VO
UiGftOn+V7r1Mv16v8tTYU4+cHpTFxmyW1diXhFUhN19aiBG9z5HJ+MbSlSc
+5D0QpHuzT1T7GJnqNi4EqhrSPfiCfPucVUqotvCj1yi+0t8X1SKBhX3KCt6
FnQ3/NM1vKxNRflv5vTLdOdZNrDy6FFRVjovakJ3XKNCZ58BFS3ss71n6PY7
VBgRY0yf77sjmeJ02z06rG9wlorXdvNPd9BtspC2Y/t5Kjxglkqlj584y9P+
/iIVb2diKivpFiuLCr//HxWuLu2TIXSz8m/WPXOFimvd4pyGdK/4+W5bZ0XF
f8NdGqx0j08st1TY0MdTPOTaTK9vq6ZjqLstFbflHeLc6S56Nal1wp4K2dvx
OUJ0J7P9t2XxJhXZgfcy/r9eD1w/vs9zpmKri9h9S7qdB3Qe2t+mIvTkyzPL
9PW+SLzTOHiXira/XAOBdKuknto06U5F8ZRT5Ga6OW0PBZv7UGGUZFi/jr6f
1rWlqu31pyJdf5OvM33/UY9wMw8EUtG6f/7XIH1/VvxmCTIKoYJPVvHP0/dk
XHkw4a8aS0UF92hhKb0ftGYvnWaKo8JxRih+nt4v0ga9jNXxVOy/J7mZn25m
rnrfkyn0+l07ZG9F77cXmSneh1/Q95MJT/yTajJit3KB8ooKf+mN+yPp/evt
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
NA==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
RtZjt5SksQbTdWxU+RWdt/gfomYVFw==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
ok18RpMKUtH7KuJ4txCu8ZzIFMN/7iloPw==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
KC7blqxBE8kK75FsEfwP8kmr/w==
        "]], 
       LineBox[CompressedData["
1:eJw1lGs0FHgAxS1NL8n2IGuppmiLSrWtOtpc0gObZkhLUTRoCT2Is7O1lIwy
JKXWYs4Q4zkz5qlVO8ejUFrFstbUlkOrPHb6/2MVK4+1H/bDPffcL79zfl8u
k3PSK0RfT0/PbTr/9eePK+LrdG/QoD+wYdJdjf3tknGLyTdojurMKLJUI644
YqxZjyBjaQVryESNEu7a0QQDgqRcZYrJfDXGLSV/980m8O6oCe2eUKHomHhA
vYhgQVrG66Q/VGjZGt73jSmBn9PG9qRWFT7MtX1t/gnBfocghn+jCmxZWff5
pQQz9HIYvNsqjI2UaveuIXC/0xjVmKaC1aOw36dsCUJHUg+HJ6rAEqz5Tbme
4FBm3tYurgoip9Jms80Es356cM05WIV9ySUNPY4ERS7c+Gf2KuSbF6vPeROs
8DDTMduUaNIdU9r5EEh8WW+f1CsxUrVK/vLgNP+p1Ni9Uom9QUVi1wCCCus0
TqlAiffiwvzFxwlM7Z/mGQQp4b5dlC6JJ2BqejZ2vVLgjHFwWkACwUBTg79b
uwK53StTF/IIfDXy7LN1CgzzCi59yycwfnR1jkO+AsIn+XE7bxJEj3U2mPgp
MBRwK+J5GcGnEs/6qVo53mUyvjgqJSiMVljZyeQYbQ6beCUj4Of47LERyDGF
TWlUTRBbQFoSYuSYt/y+TL+a4J/T/doKazmsu3qGVrcRzNkWx+oYKcdqM7ef
pe0Ex5NdmVG/lGMtW3pxk5Ygs92ILxCWY1NNzOIvXxD8UHUGQpdyOObNtGf1
EjhgqnP3ZSl8A1dzYz4QnDCvvN3xQQy/H1OdxyamfSnf2f6hGEda3s6J16No
YBxLtLwhRojTnezLDIotnFhNoo0YUcvdNTnGFJErIlkSzzKkdoVP1a6kYNQZ
1ixLLkF1oIw3fy/FDNPesF05Itxtjviqcx/FwS6HQC5bhNuONgvKPSkmDr87
spghgsSiUODhQ+Gbte77CxEFyNZmq1I5FIp0kdB9cz5i2Endc7kU+zl9hLBz
carapfjZWYqvm45OGJUKEbH+o8iyOIpZjdbxTD0hOPPOjbolUnBcvKq2igVg
PzxtnHyVIs194PG9d1mwdTq8fVYRxVBV4tV6zg2skpkbdJRQfHcXhcHSDKxY
qn1YJKbQjfBCL45ch9m4l/duBYVrCNf2PP8aZla6hvM0FOta+fMX+V2B/mcz
Nx6opmhmu+wO1qVg4ub991b3KCylmVmGcXwMRzsm1D2Y9ht3W+dfcAnddpuz
DNoozg3dq0mfvIDnwsEjbe0UWUtOWs7IOQ+tkcyqQEuxofZmlHdMHJ78tUa+
o5NCeSospceQi0eHemMWdlNcP5j7bDIkFvWNom0v/6SwMz0Qu6UpGpriZQ8u
9FPwLYQrT6VEotL0RaqnjuJjozP+bZpQqHjZXkxKcVS3S95oEYzyYR+zwUEK
geRW/r6wAJQFmXTWDFMcktYYRjN9UNjaWpA+QtH3dqrlymwW8pzTwwLHKH4t
WyI9keIMgdzDbsMERX/t6MnBeTbo793psWN6//8//wI05FmP
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Divergence Removed?\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {-1.3232785364192012`*^-6, 0.07926930135910046}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
0\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
1\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
2\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
3\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
4\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
10\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.804512960879467*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2NP", "[", 
       RowBox[{"e", ",", "0"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2NP", "[", 
       RowBox[{"e", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2NP", "[", 
       RowBox[{"e", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2NP", "[", 
       RowBox[{"e", ",", "3"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2NP", "[", 
       RowBox[{"e", ",", "4"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2NP", "[", 
       RowBox[{"e", ",", "10"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), \
0\)]\)(1-\!\(\*SuperscriptBox[\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \
\(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 1\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 2\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 3\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 4\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), \
10\)]\)(1-\!\(\*SuperscriptBox[\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \
\(3/2\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<Divergence Removed? v2 for comparison\>\""}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.1"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8142780238589516`*^9, 3.8142780279109826`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({0.000024185766477748702`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(-2.49366499671666`*^-16\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.5939906358846744`*^-15\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8142780320006285`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8142780320535784`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({4.503669942224799`}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.734723475976807`*^-17\\)\[NoBreak] and \
\[NoBreak]\\!\\(3.820404467573641`*^-16\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.814278032093548*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(u\\)\
\[NoBreak] near \[NoBreak]\\!\\({u}\\)\[NoBreak] = \
\[NoBreak]\\!\\({6.\
28318519448951320385675257047976413268819406710008479421958327293`65.\
954589770191}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(1.7695567233744214`*^-13 + \\(\\(4.163336342344337`*^-17\\\\ \
\[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.367876784470429`*^-12\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8142780322793674`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.814278032319333*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8142780326010704`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8142780327019787`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.814278032740941*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[{{2.040816326530612*^-8, 1.4991928883310542`*^-16}, {
        0.000306717908041361, 1.7725290062019304`*^-15}, {
        0.0006134154079194566, 6.006552666570511*^-15}, {
        0.0009201129077975524, 1.0226728240079235`*^-14}, {
        0.001226810407675648, 1.0642628165131603`*^-14}, {
        0.0015335079075537439`, 4.876119389901234*^-15}, {
        0.001634441909430636, 0.}}], 
       LineBox[CompressedData["
1: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
        "]], 
       LineBox[CompressedData["
1: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
lP//+T/zZruX
        "]], 
       LineBox[CompressedData["
1:eJw9lIk7lHkcwJkJDUato+tJypE2KiKp/N6v2ngcRTUlxXSgR6klcsVTtI9b
OdLhypnY2Mzk6hmRyZFjytC877yvJsaVY1tHh5DG7j7PPvt5ns/z+Q8+Gzz8
jpyjycnJsf7x33qGLag3BYhA7j9W6a+a4V8VgV7LOKf2pA+a3uzqui1ZBEp6
+rZ3niaiEuNRTsIdEUzsKF6hej8FndoayviQIQJFp2c+M+w01G6azst+KAKH
1fwdVgcyUIEluVaZJwKm9fuO8AcFiGXr2j80JIJW76MfozLKEU/DtHNwTAQ5
ksOaaZkcpNvPqBuYEIGFmsWI2kUu+hRemy6dFYFAWzFXolGBUrjrDklUcfBt
k88vjK5GgrXD9W/NcXhNqr7wnKhD5uN1Zd27cHCyMG/0Ga1HWTX3MrswHAyr
9swFDr9APkfsgjvtcID4cofdXxrQ0rjSLR3uOCzSH9+WYzSi/Z/9s19G4VBs
M8ekX3+FyhocEvjxOGi6z5fgGq1II0kvtCEJh8dm78cPlraigU04qz4dB2c/
Q9+TfW0o8pSlCq8MhxvWexzb3ASork12lSvCYdfbiiwbkRDp3xd7cygcBrca
2J107EI3vTjHyntxePFBz7mlqAu5L541/WMUh/m895mB7G40b948WrKAQ6/f
QRdb8i2yyEs8nqdPgNZynX7tHwTi8COuqmwmIEUvR3eLnxgZDV7JCt5GwKwT
5130gBit3+jed2A3Aeuuv9ESCUikUmbsPedMgM29zrwQTg+S1rwOPhJOgAMJ
gpyqXuRG8dPrIgnwCCh4sseqDxHzVbxNMQQIqe/C3U19qAPlyGQpBAzFGjP1
LklRdaNvTOkjAkrSPXvD4vpRYueye0u6CQAFiVnJ4CBSnKY/8xMTYJvbN8Xa
PoQi1WepHgkBNTYa0YIbQyj4mFSbO0KAs9dx9oLuMDrzjlPE/kHA4Ev6rdu+
H5DFyOGq6k1i0HCUV3pqNIaksjTR+QgxZE4p+VvbTiLVj8LEkCgx9PQHNruW
TCJLivlLTLwYfmtPE6YrTKGUilhuYZoY8pkptOILU8j6fHhSb7EYvBxcfkqz
mEb5XR52R4ViSL01HWQw9Al5PDR9DhtIaCx9UtGUOoOSUn2vOG0kIWLtN9ZF
4QziXS/dzDYiIVNB4VTssm9I/YRBRtgOEsy4mIdO8jfUyFwdXGVPQqgK4+ZY
2izSD5EzMQogQRhdfcahch4N23cWrmgkYTBk9ouEtYj0Ew2TU1tJkBGqtPqS
ReQliAhTfUMCz96EiWSLaMDJ5DCNImGNfO7yuGNyWC8rVfbXBAkxMeS+lYry
GMlmnWheQwGuwD9wLpiGrcwt3W+9noL46ZE+aRENc5HSTWoNKPjIdd1fjtMw
kUelIteEAjb+1dPOgo51eWtVZttSkFuRr3PpOx1r9xerBQZQYJbTVcS/q4Ax
KrbNT4RQcOlngeOddgXM7kvs8IVrFJAF5YLaRQXsVbDl89NxFIwXFEm0Lipi
TeEZFxxzKHDrbrg7aaOE0eumj7YUUtDGnNoefU0J2yezt977OwXlAY9oV6qU
sIbI+RU7Kym4lX125+mNS7G6aLcm3XYKdDptJEGqDGyhpaL8QScFfJ3LzRJb
Bma1VDVrFU7BzJKCJ3k3GBgv4bm/mpSCOMXwKKtZBjbXocmOH6Ygx4XuoGmu
jFkyf7Vb8icFWZOfQx0uK2MhTs1mEVMUHNqb5NRTpoxVJ2vrzH+lwDjgbv6r
MWXsqzBIOeg7Be8im4PUDVUw7uWahNYF6v8//g1izpb0
        "]], 
       LineBox[CompressedData["
1:eJw9lIk3lQkYh68tJNvVtSs3rvVyM02UfO9LpbJWiGyRS9EiIkXdIqZQpKKx
FamJaDrRcoqs2VqUrYnv3vt9TDFSoTqWGmqac+bM75znPOf5B37skH0eYZIM
BsPzB/9apnSqU8whkfHf9pjqkj8Zkxjson07WE8RTB5stc3mkrjiam56a4Ai
vNmQkz9pReLFnM+WqYWKUNTX9dXbhkTLoJnl10SK4Beu5H/fjsT+Ry379fWU
QH3GuUZrNYkWwiypyUAlyNRoPixyJbHdWjBQNaAEzqUMEeFBYhmRxy9cogzz
bAi7Ih8S50zp+YOhynDU+97s9hASXd7LZCSOKsPenDLBXwdJdLdYeUhBoAIm
nCHxBgGJY0YLF8YUqcCbO2woP06iVb6oRLZJBQJ687/tySBxfbCCT72sKriq
ZRz7VEKiBPPZvoAcVTA7G50010HiIV06NPgBE4b1bw5u6yHxhuPs8G2KCSW3
Rh0a+khMTr7QvlxaDbQ7+ZLJr0k0cHv6sm2jGsgreyfLfSFR3SDYffFbNRg5
bfuLmqEQXXUur8w1ZMFvqVJppglCzGppXR1TpwHMN6lHLY8J0da+V6tqWAMS
USl2WYoQo0ndFC1lTfCb0gwiMoVYOHdcJW2bJiiHWi7fXCLE0N5l2c8ltSAe
fQcPPRGib4XVlmIPbXCburmyXVuErJA2gyglPZjk+43uqBHhgsfiLNs4NsSp
/a3W1yBC0wLD79VZbJhqKiCcWkU4rifr61zxo9niLPMuEV4LdQrJHWDDDB1k
MzEsQg9pm6ghlyXw1T8sJZ4pxiJyab4KxwAYXlGLTkeIUeCoH6klNoREKdUN
c5Fi1I94y5D5YggStyujI2PF2NjHvDC9kAOSzM/Nm46JMScw99wHVw5IdR7Y
zcoRY/5w0GP1Wg7Mcz18/1KDGCdONZ+cd8kIFNae8KjUoLDnYJqzV5AJ2NXv
U23VpVAh+4TtzngTiLT17STZFFaNmLyOOW8C3Uu57tJcCgVlW0Li2kwgX6/b
yceewuYAMUeDZwom03oOc+EU7k3iO2+bNQW//bIMZiSFpmHyyR0sMzj9YaLO
KIZCaNQ+w+OZwfjrR3abBBTyXvB8Wrabwb3OiBVXzlLYJU63tmg1g7Xld3lO
1RRGyh2oij1lDnGcorHAegrP8aV06q6YQ1lx6u/7mynUbDvlMF5jDgq/+psX
Pqcwj2c0KP/eHOyYjqO3eij01FAK/ijFhcgMy+stfRQ+MQh2rNfhQneyhPH4
nxTW1s5KLHDhgvT30SGpEQrbj/g+PRnCBeuE3quaHyg015cLH4nnQvhkLd/i
E4UzT9MKzM9yIS+qdMnqaQp10i7LSDMCiSfvsga9ZykMqROylhYEELM7Eop3
S9C4zqszNAkCiOBAt0U5CjROyGuvW5zqT5zrsxZfV6Hx/Jo73opsf6LZU7+w
jkVjZv3LZ80P/Qhj589aI4tpDK0pkOjv8iXGrPNYq36mMaoppmNk/lbiiMrQ
gsEAGqN56rzOKU/CjKyyF22ncddQU/6YlyfRfyUx9tUOGllXX5BNLR6EtY2u
qCOKxovWUTqZ5ZuJiUDPiuoUGhXTJ6KZfHfikjGbvptGY0/GwOEwphvh9nGM
WZlJo5XRNIv3yoUoT0lPKM2lcdWRuPe75JwIfkWjU/YNGt99i6iv3LWGYB44
IzhTSeOrB8W3nvU4EA0QWJl+j0bLnsbN9Hp7Qrd7RjOpgcZ+/4Mb37rZEn/M
8Eb29tLod1FdJ5o0I5p8dlY/HKb//8d/AIg6WuI=
        "]], 
       LineBox[CompressedData["
1:eJw9VnlUzYsWLoUGcRs1iHCaRxpo+O3dOSVS6ZwGJUMDEiqpdLuEBo0iTnHv
UaQidMPhRi5J9SKhEp0mCvfym3TpSW7TzTtvrbfeXmuvvb619t7ft779z14c
scdv+wwZGZlyaf631vQ/PN2uS6LM/+LJ0962vAUkGgXKiv9OTiWGbAWZOstJ
1ChcESporCdaK98bnbUjsT34F7XNyxqJSp3kxwYrSHQp99DKUPoXEfb9nLKJ
C4lbsmoDXow9Il4+GTrp4EHi+sbw225T7YSYSLW9u4ZEV4WtpgG5z4l8sbqE
8CIxsXOhipKok/A47aS9ik/i9pqE8YsPXxJ3w3PO+YeQeC3D+8qO9b3Ez116
rj2bSOwO9qlIzuojEldffxcSSqJWQcO83ff6CSvLbk7ENhIfx5+qHLUdIMrH
lv4aF0viRh8L1x6bd0RuwYPaY+kkKtsmbmwfJInIGf4bVDNJtDOo8jIsowje
PnKiKJvEptpFg9GRNDEVogIl+SSmdbmIn44zRJzRxuaq0ySmvPaR/eD+FxF8
/9vzlioSv4k9DBY5fSHsbfLiva5K9SdWlp+r+UKoVehrdFwncVEBafXMZoR4
luMe1F1DosH9teWHrL4SGCAceF9PouanG03H8Rth9NGSlX1J4vmA0kVxdRPE
HIWOi/ckJO6NrnJkwyeJEU5c+L5eEpPEeXKtilNEw5abvfQAiRZth0V/hP1D
hLxwaOmgSdzG+bJFqCUDx3/HC2enSTSetb3Df4kcJHa/DQ2SpdAqcV6bQp4c
bBxJ01OVp/Dds8Kjy0bkwMSyWXhEkcLomYbWva3y0HR+TdpuDQqnPW846OXO
gtFswRZHMwrvPLev/uSnBK8vfNEZsaDw+R6P0KMvlaCpsVBSbU2hwcAhy8FA
ZTg+KfE2sKfQKE4h4VroHDDZE+I825XCMF1RakTOXNi0fqu2JFDKb2zu5iZS
BV6CfNfxYAr7w1uUnGhVMD1xsWDNRgonR+/r261Ug2+t1Ky6MAo3x4oERq/U
4AQRPVq+m8Iv6Docb6kBzZx9L+LSKFRkyw81zZwPGZfuBk9lUJi6eig5IXQ+
8Mxk3mRnUaha7AJGd+dDo/XRj+eOUkgsmef9S7w21DuVybedku5Taqid/KwD
tfw2B9MqCtP0xvwqF+pD0ku1+zXVFK6qK7c/kqsPDuuD3VyvU3hC42l+7qg+
1Gz80zeohkLRZFS6audCEEeOR2XWU+g6ED5k7mUAVSmGxe9eUFjkVRH7p+US
2Pl91+IYCYV3fVoV1WOWgEm6+NJYD4Uf4gaimOolUJntXDNvgEKv0XBDodVS
qBAK2giKwnqHzNF3jhwouXzwu2iSQnnno6/P7jWCgi7JVj8Ojb8rrh1TjzWH
/EPHOJ1GNNYFdHLqmswhz2TVB19TGrWuKnBMtS0gM6Um0seKxoZcjaTghxZw
gFO4c81KGhOEyTeMTK1gRyJ/D3jT2F4rM+f3ozawbaGCzf11NG5oLVZPrrOB
iMcPhp0FNGKQ10TZXzaweYF1vON6Gj2Ep2c7CpaBf7PKPrswGq2HTwyk6S8H
1Hi63yyRxrmRwow3T2zBpT7d+UoSjc7Lc2SyZ9iBU5TTlPFPNL5cKFdb6mQH
9nVXDhoeorF55pkOs2o7MN+Wk2qQQ2PV3oyxyiJ7mF+zKkurhMZRnZhY/QMr
4LN/w8kZzTTaim6IbpY5w7dLmdG1j2g8TJ/yVPnkDNOTa1dHt9K4cMarslEn
F5hzQTIlaacxY6vHkqhuFzD5yu640kej1+qQnd3qAGFFmsD/TOOIhuIHCHCF
51272LO6DG6KESnN03WDHhObh376DGbOPEfTq91gMGW0dLYBg7sWiJ4eSXKD
IU5q4F5DBqNzRjUiutxAYd+pBncbBj/a650pFboDV7Ph9MdVDLbnN00u1/aA
m4Gabo57GVRqDxumCU8QzjtMP0hgkLKuzs6P8YT4VvqYRxKDWYtKrVac9YRl
RF2v/wEGD2hM3hVNeYKYszU2NpPBjYV/T4fcWwvXRsSiChGDmvRNYYuDNxy/
qotmJQyOHrMZ7NzuDbE7jrwXn2PwB78W9/oib7B8FWRdX8FgQcvqOxZfvKG6
abq59yqDK/9Z/uMPv/pA1UnvYZUmBmV4NzfMVvOFPK/bp4qaGdTVWbyzhPCF
XTMNnPVaGPztdUJvX5QvmP40kmnyjME7sk313HpfuBx2Rs+tm8HAjN+ylizn
Q46ufGNrL4ODlilZgR58iOqKieS/YvBUQ8pbrxA+GK/h3tj8lsHQ7Z8UktL4
UGlNeySzUn/Kyn4+8IwPWYxgaHqIwefarb0pg3yIrLh3MvMzg/+M9p80H+aD
4fyC18KvDOaoaZ/PVBOAfOdYms7fDNoUFBw3XyqA93kRxufHGbyu9QMv3lYA
F6bt469OS/UHE1SPnwCO3CmdbyfLotjkQPBwuAC2xSvevyvHoqbYaqAkTgDu
FgkR3Fksmgp0jvQfEgCHfD37sQKLt4hQ7cp8Lsif97i6TplFQ5Xi+EkRF95v
EPtJVFg0d/E43VPJhYq2jLN/qLHYMUdZU/0BF/KXTW4q1WTRrMGCCHrKhaRT
8Qs2abO45YKkcaKbC6HjzCttPRatbpTmjr3jwprN4cUSfRbv+68fWDvEheWN
vSFCAxY/T+GHj6Nc0DPk6/ouZVG5pEW2Z1qqJ7elT9mIRa0T4TqzZvPg0xCI
HpuwWHRgHZ0wlwc9/NvBmeYszv7R5YSuJg8aaiy1eVYshl8O+3NElwdV2hd7
pm1YzFbef218EQ8KUxb8fM9W6kc/n2PM4UHK28L1yQ4s0mWMY6IxDyLdlbXs
HVnMcgj+/sqUB76X0yX/dmbx3aX5c4LMebByzkTRNWDR3cEna1CKF8ftDdjN
ZVH2TnrfbilW6qLVTdyl/mn1JY5L57+uCHv53oPFwvbddgel+weKe4Rlniwm
VTwLG1nKg0ff1/lt8WaxBBQaBFJ94q2PVPV8Weyt5csV6vBA1EJ09ghYvFk9
FnBVjQfp5rdOFAWweEFwa3uxEg+iCyz4giAW+zRt+vxkeRA4UjFvboiUb3h4
Wds3LkCQXseTTSz+ZH1rm8xHLpjcEx7PDmXxx57QWHKAC6qLlNa5R7D4MO0P
h30dXJhIT1OR3c5is7dZaoX0vm1r4/L372JRf7xVt66YC7evUV4rYli0iJ94
VpTNhfNqocpf97BoUpg0Tu3lQm5S9xNxPIuqb9W/V4dwIb7fJy9mn7Rfwhb2
cbmwCR56miVL79//m8NWYy6sKndRpPazKMmPOuOqzAWrWTWPKw6yGDA2cSfy
L1fQ3mWeE5bK4sjwmzdP2lxBtr18tX4Gi14Om19HVLvChiT/Wf2Z7P//wf8A
Ob3A3A==
        "]], 
       LineBox[CompressedData["
1:eJxFkX9QE3QYxpcIdqZ0UDJyYrCtAU4J19Yk9vaaUiLQYGIXQZMxmGPh7BBq
8cPBcWqFnX8g2XXSRTIm4AiP44IRxI8jJBBkxmhoq4S5EPf96jKIDZDyrqvn
7rnPPf9+njDluwdUaxgMhvifPiJvPMm/sIMg49905EdverT5x4YZ+bMZMPX5
9OL9ToI93wzQcwty8PZV/6ztJuibYOXkCBQgCfTUqfsJSjem1bv3KUH+0qUP
HQME35KVioQF2aBXyvOyrhA8cXDl4XO5OfBl5ZPJv/xA8PxU1/78yTegt7VP
kHGVYHqpT74Z34RbNwqCbGMEV1QNjM5jabDGh+c9aCH4VfouKlGlQ1xqZZ90
kqBTaq71tcpBVSKpH7ERvLCh3XMzRgGn6uhH8TcJ1nQxTVV2BQw9OJCy5zeC
a2fqs066lXCH5SvsmSbI49sb9J9kw/q4dqbkNkHxjOHU1VgVJFWzfhXNEZwT
X1G1mdWg7Rrtb3URnNq3tyT0dC6ccZQZn79HsNs5xOrkvgMtGwSVJjdBjc5l
jbidB+NChzbyT4KXHeGxba9qwf32OZlxgaBhXCfIPHQUAk/Gizie/30Lmr3B
tUsEJ7QpnImqYEi1mpa3PCQ4e/zs/PIWFugvHvFeY1C82/+9TCYOhoai7YsV
PhS/LvfeiPUNheuJrnmRH0W+xbztuI0JyyGmB7OPU0ysrPo0tpEJvPt57vNP
UBwrAd6mYibI+vn3pP4U/da+Z6y7Hgql1XddjwVQNIpHWjWeMDAevjTX9hRF
QeG65rAsLozvyptVB1F0TTvo4dStsLSe79z8DMU/hrOF8aNs4NnnZkZZFE9n
Dq7G5IZBSkvTrfKtFBeji032MjbUp26zOzkUmQEBErWGA96/Gm1JkRTPDOo3
1zA5wB3WTK7yKSr2tn13tikckmsiJ1qjKFY3kz0DunAoPnrHotpJUbr7BWWZ
iw+G3Y3XgoUUO4sTin5s4cNYoGZ05EWKTdaQDGkBHzyOiBF9DMV5coFdy2UD
t312aKeE4tOHftpoK3oWpB83DDpepmgR9MpZJyLgg4zcgc9eobhO5Jcj69gO
dTsi+hPiKFZVGHSKI9Ewtvp7z8prFAv1zYEGZRQsWi52X95P0SexMTkxJArY
BvW32UkUl8q+0IXZdsDr74ebg5IplquZCZnOaEhb6K3wl9H//v4bnLOpJA==

        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQrR0cNWc591Z7BihYtX7Woem8W+1ZNijyJNqY2ibx
PBW2Vt5qP4kvS6U91MxWOlM/9Z7FVvvFcY6yu33Mba8crdzW6LfV3krmZ+Xf
RgvbHqUj7KopW+3dn1jmO8yytP1zO2JVdv9W+78btB5OfmZte8+v6f2Pp1vt
Z02aq7G0ysF22uozDnN+b7U/1c/noK/taOvPIT7JXnCb/faY7ZPcrjjaHji4
2qTNZpv9xMKOKh1zZ9uFJlcrhSdvs/9Zkqo6yd3NNmqi/OltK7bZF6mvFTst
7W4r9C5TJmrfNnvP3q6nHV/dbZuW/9u34OU2+/NOn7gcFnjapkhpsOg5bLev
vXvKZoO/r61MeVHoxdDt9qfXXDvj6+tne/XynmUl2dvtG9xd7i3y9Ld16w30
3D1tu33N95NHtq0LsFVnqO7zeLvdnnnqxFWnbgfZPog5ev810w77fcePJGjk
BNvO2Mlv2C+xw17ojpjPBoYQW7Oqg20gPix8AenMoik=
        "]], 
       LineBox[{{0.3156812212357391, 0.}, {0.31600804565845747`, 
        1.5362286590433912`*^-8}, {0.3163350000106856, 
        1.5521689016088046`*^-8}, {0.3166618564878556, 0.}}], 
       LineBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAAtG2jnnBy7T8AAAAAAAAAAB4OtC3L
cu0/DxfC6hut3jw/NmYRSHXtP6egmaojgu48YF4Y9cR37T9eIdruO1f+PIGG
ythBeu0/PvSTlEuhBj2irny8vnztP/4nJHdqQRo9w9YuoDt/7T8Bi/L9mbch
PeT+4IO4ge0/g3+kfDJBJj0FJ5NnNYTtPyyMAheUqSs9Jk9FS7KG7T+lsB/k
wWsxPUd39y4vie0/Wc+DQr8OND1on6kSrIvtP9bMwPOu2TQ9icdb9iiO7T91
ygr/RVY4ParvDdqlkO0/h94z+DWTPT3LF8C9IpPtP2BRtebvLz897D9yoZ+V
7T/lyf21uZpCPS6Q1miZmu0/KAEdhETkRT1PuIhMFp3tP5j7bfqJz0g9cOA6
MJOf7T83U4C604dJPZEI7RMQou0/VknRtY6uTT2yMJ/3jKTtPxF6I/N7N089
01hR2wmn7T8jMaa+OidQPfSAA7+Gqe0/ciUPP2krUj010WeGgK7tP494cG1F
FVU9VvkZav2w7T9O1X21cWhWPXYhzE16s+0/JnMB+b0gWD3448BTerPtPwAA
AAAAAAAAyqDM+w==
        "]], 
       LineBox[{{0.967921344244819, 0.}, {0.9681956640588494, 
        3.767538978091124*^-12}, {0.9685031204469498, 
        4.33874482527322*^-12}, {0.9688105768350501, 0.}}], 
       LineBox[{{0.9883306955626439, 0.}, {0.9886739097987967, 
        6.148873483641026*^-14}, {0.9890171240349493, 
        2.3492111961770782`*^-14}, {0.9890265819998673, 0.}}], 
       LineBox[{{0.004551001782127238, 0.}, {0.004600482906334701, 
        1.4549011520532444`*^-13}, {0.004907180406212797, 
        1.9425603902952025`*^-13}, {0.005213877906090892, 
        2.5093395738793863`*^-13}, {0.005520575405968988, 
        3.169938227067632*^-13}, {0.0058272729058470845`, 
        3.9249774462351475`*^-13}, {0.00613397040572518, 
        4.77513053274849*^-13}, {0.006440667905603275, 
        5.732428007663476*^-13}, {0.006747365405481371, 
        6.798666717995445*^-13}, {0.007054062905359466, 
        7.977511089030059*^-13}, {0.007360760405237562, 
        9.275213722133802*^-13}, {0.0076674579051156586`, 
        1.068921645646048*^-12}, {0.007974155404993754, 
        1.22316692423694*^-12}, {0.008280758739480035, 0.}}], 
       LineBox[{{0.8986268393279684, 0.}, {0.8989366216307841, 
        2.0435571007768628`*^-7}, {0.8992464041991746, 
        1.1824135150412105`*^-12}, {0.8995561867675651, 
        1.120403197712905*^-12}, {0.8998659693359556, 
        1.0518215061408733`*^-12}, {0.9001757519043461, 
        9.65020959821474*^-13}, {0.9004855344727366, 
        8.883006225520607*^-13}, {0.9007953170411271, 
        8.075714559963284*^-13}, {0.9011050996095176, 
        7.136264655279645*^-13}, {0.9014148821779081, 
        6.158767784066738*^-13}, {0.9017246647462986, 
        5.02901081742062*^-13}, {0.9020344473146891, 
        3.840582807030224*^-13}, {0.9023442298830796, 
        2.6626653020260926`*^-13}, {0.9026540124514701, 
        1.4272746735327332`*^-13}, {0.9029637950198606, 
        2.255260370088194*^-15}, {0.9029729466142252, 0.}}], 
       LineBox[{{0.9592161739507415, 0.}, {0.9592794288039381, 
        1.6909060654151865`*^-13}, {0.9595868851920385, 
        1.722857557934405*^-13}, {0.9598943415801389, 
        1.6535281258349812`*^-13}, {0.9602017979682393, 
        1.6844784235473682`*^-13}, {0.9605092543563397, 
        1.4694600475827863`*^-13}, {0.9608167107444401, 
        1.307406924347377*^-13}, {0.9611241671325405, 
        1.3402178884968145`*^-13}, {0.9614316235206408, 
        1.2773524416332267`*^-13}, {0.9617390799087412, 
        1.1221383473142726`*^-13}, {0.9620465362968416, 
        8.778794112283451*^-14}, {0.9623539926849419, 
        6.39164478603827*^-14}, {0.9626614490730423, 
        6.314987496254855*^-14}, {0.9629689054611428, 
        3.564922743724033*^-14}, {0.9632763618492431, 
        8.803611792766175*^-15}, {0.9633539416170754, 0.}}], 
       LineBox[{{0.9830134526255618, 0.}, {0.983182482020353, 
        1.1079420266111819`*^-14}, {0.9835256962565057, 
        1.074477978882107*^-14}, {0.9838689104926583, 
        1.041346299256355*^-14}, {0.9842121247288111, 0.}, {
        0.9845553389649638, 5.856576382722106*^-14}, {0.9848985532011165, 
        3.5934708768060125`*^-10}, {0.9850962942634595, 0.}}], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQXc7p4a9R8s6eAQoWfFky8wGQ/2mSwnqJxQa2p46l
TJ9c/s4+fcFkgXmKJrZfZ6hMdat6Z99rN1PxyltjW4XsJ5N+1ryzd1IIMfRr
NbX1sl0yYU39O/vatbbPdrQZ25bwp/TFN72zTyv8+j892Nh2/kPlHqHWd/ZV
vXYMVbPMbE9tftx5tP2dvd3msDZmQSPbL62L2yu63tmLddcHGnuY2spFJLdq
976z/3F1Z9HdvWa2nlrKzff639nXxM3Z1q5lYVvy51HDxEnv7NfH1jpovjC3
nXduUZ3L1Hf2DZzZDJ4SVrafi5SqVs16Zz//zsYe5nZLWw/xRaUCC97ZG6p5
bVJss7IteplYfHjRO/sj2ekup49Y287drVhYtvSd/c9uvkVvH5jZijLaOJ1Z
iggfAHzriWw=
        "]], 
       LineBox[{{0.9934143805015284, 0.}, {0.9934789091049349, 
        2.1568403739096066`*^-14}, {0.9938221233410875, 0.}, {
        0.9941653375772403, 0.}, {0.994508551813393, 0.}, {0.9948517660495457,
         1.5145147657014589`*^-13}, {0.9951949802856985, 
        5.4638771167528366`*^-14}, {0.9955381945218512, 
        4.890307439859683*^-14}, {0.9955383296058347, 0.}}], 
       LineBox[{{0.9903840805074796, 0.}, {0.9903899809795602, 
        7.699167853027747*^-14}, {0.990733195215713, 
        1.8230759807647966`*^-14}, {0.9910764094518657, 
        3.4463668047317854`*^-14}, {0.9914196236880184, 0.}, {
        0.9917628379241712, 6.116077872336652*^-14}, {0.992106052160324, 
        0.}}], 
       LineBox[{{0.9855849359379765, 0.}, {0.985584981673422, 
        3.523267986341859*^-14}, {0.9859281959095747, 
        1.6995351372922568`*^-14}, {0.9862714101457275, 
        1.6381623785887143`*^-14}, {0.9864462531748468, 0.}}], 
       LineBox[{{0.8938251305441294, 0.}, {0.8940254763533624, 
        1.3085824464047308`*^-12}, {0.8946891092820708, 
        1.3147234831137056`*^-12}, {0.8953527422107791, 
        1.3117870537422967`*^-12}, {0.8956845586751332, 
        1.3008970756648159`*^-12}, {0.8956845607247222, 0.}}], 
       LineBox[{{0.981809625075742, 0.}, {0.9821528393118948, 
        4.841161485917529*^-14}, {0.9824960535480475, 
        2.3517038278054303`*^-14}, {0.9827270976190253, 0.}}], 
       LineBox[{{0.6814452681360376, 0.}, {0.6817738035706308, 
        5.2069344616726514`*^-8}, {0.6821023601004456, 0.}}], 
       LineBox[{{0.8963481895571048, 0.}, {0.8963481916038416, 
        1.2990866977771657`*^-12}, {0.8966800080681958, 
        1.2907273905981908`*^-12}, {0.89701182453255, 
        1.2738070738359868`*^-12}, {0.8973436409969042, 
        1.2692101198423632`*^-12}, {0.8976754574612584, 
        1.259744827548561*^-12}, {0.8979565071894683, 0.}}], 
       LineBox[{{0.9984250641093376, 0.}, {0.9986271226472259, 
        1.33858331252004*^-13}, {0.9989703368833786, 0.}}], 
       LineBox[{{0.986957838618033, 0.}, {0.9873010528541857, 
        1.458502682242493*^-14}, {0.9873895112718248, 0.}}], 
       LineBox[{{0.9975974799387677, 0.}, {0.9979406941749204, 
        1.228924763089667*^-13}, {0.998135599930838, 0.}}], 
       LineBox[{{0.06199537216785699, 0.}, {0.06229973768736295, 
        6.616164543549278*^-9}, {0.06260410900695094, 
        6.760375423716747*^-9}, {0.06290847352924014, 0.}}], 
       LineBox[{{0.9962245177882156, 0.}, {0.9962246229941567, 
        3.8083315384764025`*^-14}, {0.9965678372303094, 0.}, {
        0.9969110514664621, 0.}}], 
       LineBox[{{0.010032082448515438`, 0.}, {0.010121037904140425`, 
        6.482532802566879*^-17}, {0.010181468380996745`, 0.}}], 
       LineBox[{{0.966430523357975, 0.}, {0.9666583821183474, 
        1.3515024587862279`*^-12}, {0.9669086528174027, 0.}}], 
       LineBox[{{0.9993790010262955, 0.}, {0.999656765355684, 
        1.60764895870379*^-12}, {0.9997254016607787, 0.1}}]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwt13c4V+//B3CRSEpoWBVCKJEoGecpIjIyMopkS0bvtxVSiuyRrCIpiiIr
EZWVlFGKSkRJJe9hvH3KKBm/872u3/nnXI8/7uu6z/1a95FwPm3hxs7Gxta+
jI3tf+/WnxLVOtVeBNv/P7Qya+evwiqo4ZnUMpJ209qwqif5ofABqDU3clRK
Z2g9bjjvfUbGFC+lPu4b6X2gtXPfuoIbwkfAc5jD4Jn0Cy02QUba0pajYG17
299d+EGre6w+wknGAVWLjM1tvd+0zF3aa50ynUD5ytL0tRrTUu/aXZEq7Ip+
M3nHm9LTWlu1cu8+z3FHyMpNlVxii1q8xdw3p7Z4wva1w9/KwuXE1Ab/TOnb
XliaTxdKDVtFfIn8kmQt4wumRJFNaS8/4fLndvPzIxR03hSOcCrfQPTuPErY
Z1KxTNi6eL+VGGHstubJVK8fdNTEqOneEkTT9eeqScIByOALiAuRliZU3gU/
kLYLBM/6vRVax+WIIu6dCg05Qbjxa3/uG9GdxGb8uGc9eAaJOvtmE6t2EamB
16RYW0LgrFWRGF2oQqwoMbkV4xSKc2w/ajpoe4nQ7+xi4rfP4vk7dnuzMA1i
Qqj2au1wGO7fMFqx5iQIl8M+guYy5zGgdnbnud79RF+U5GWGRziuCy0tRskf
IGQGvTifHbmAyMu7XouV6xOOIfq6SdMX8N+3lHpND0Mie53ExaOZF8F9jCHz
7Ygx8aH8X4P03gjwGXarcYYeJtYYfZz/rzcC7VPGGy28zYnIiwnB8cKXEHM3
rHSLtBXRIOb+yPrJJWTL3528pmRD/KnRnpK0i8JE1sjYC/ujhPfE9OmnOdHQ
vmGqsUvUgSiM6yqN0YpBf4uFQbWNIzEkdX/UcjAGttXm/TJVTsQRO0ePsS1x
5PrBYo5CVyJ5Rr2gtikOhw7RTnhruhNtV9b/uOQUD6NJYYYUzYPQautw2HQ7
AQNhP0wunPUigl0Kchi6idBdfuOyuLsPUbkY3l89nAiJ7Hz/VR6nCRlVVWtT
mWTs0U2ifflIJRy7+NJFWpNhkLHfFHN+xHUvZveIx2Xw0QqPPpcLILi73xY2
HknBrLJTgVJZEFGwuf6FdEEKbm68H32NI5jQ8S4eTphOwRnHMhNx9xAijCtK
0jbzCrSXbjQkWoYRwlZ++xtGriDhwY4l1uA54lH+CUepvan4tH3MjBIcTkxq
qedO9qbi+OvYfGevi4RrAEs4TjgdWpR/v3u2RhG7OVJDKynp2Pbmzb5QjWiC
PVVlYKA1HVZFNUSmfQxxszwkZ2dQBiKeOd/9+DSO8CXEFmw6M9BfqHnNaC6e
0OxsOH5RKhNnA3tdPukkEv1Mji0f3pGO17w29CuZuBdSGL4gdxV7Z+N0rBRS
iDPchkMyF6+iLphT/upICrFOJjkvRPEarKLaDSM8U4nDTkJSWxKz0BpbIij3
MIPYPPnkksGPLAR4232VTc8kxs4f/0lVz4Z1mWOUzNmrRHxOfmELPRulAZat
XnZZREvvDrlTejlwrzDpMvO4QaS5v41Ly8nBGrmGzX6huYTzNJVZ9zsH2qmX
2ZXTbxJLAjX3+fJv4Ou9mImJ8VuEuun+ndWLuRD4mjy66sRtgvvLj+RBq5so
fic/rrj8DtHrFc3iKr0Jq7GM879L7hBPWtxsSxVuoVf+ldfFlYWE7fdiYbbP
tyCuO83XzbpHNMrNt6dz5cFB+YUKz8MiQoZqEiq3Ow95KgsCu0OLieklVr9F
fB7mGce4wtaVEKmbVHMK1PJBDeZfxRFaTsy5Rhuru+bjzpplYoydFYRTSe/8
m8v5KG9aljGZX0EoaYQe/zOSD11q2w7/Kw+ITtvGzUYZt2HYMNn3LvYhwZ1u
mDf53x3MPPakHPtZQ/xT+/YvT6QA3c2P/S5Ta4mJL8HWlroFyH6tNfdjqZZ4
v+3eqkfpBUhRTen+J/mEyH26Iujs3kJkZstL2EbWESo/nh9ace4uMvOuam/r
ayK2xdoV1BTcxZf0I2y7lJ4RIgq/l06+uYsh7oyRU3HPiKUgyepXW+4hk/+U
xhk0Ex08F7dcab6HRMeFFPknzwlHZWJKlLsYKwJWfWwcfUlY9vaYdioVI1mk
T77BppXQD/MpOn+0GDqdkUzeF63E9pc5Dt+Ki9Frz11z+3YbMXP0X1uhyX18
cRL8MEHpIBIv1t7YlVYC+WO2UvUmb4hwGbM/35+W4IvYKsuHb98Qfq9oFunD
Jdj+cfMaEcu3hM36jdyzqqVYccA8U1yxi5AsCvSr6yvFfw6NvBt1u4maLuWD
BzeX46urloXE5fdEMmPMYId+OXx5EzzS+98T7ux3D/H7liPGX3WqVeYDsUFF
1HSgvhxlEXtUA559IJ6+ulhcs7MC5+vGb/xb6iFEFU89MHpTgYGy1dzX8vuI
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
wqYG859Bls3ExlfntzSRzs763/MY/wdkxJxn
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
TEdH/e94h/8DUy9LRA==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
E+fRRbsvrNUkv4/57yiB/wG9DfUt
        "]], 
       LineBox[{{0.0011020706117858205`, 0.}, {0.001226810407675648, 
        2.544989447752318*^-17}, {0.0015335079075537439`, 
        4.3025733816308625`*^-17}, {0.0016822961207717856`, 0.}}], 
       LineBox[{{0.00027669546345547114`, 0.}, {0.000306717908041361, 
        6.429937368328637*^-17}, {0.0004876233168479707, 0.}}]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
XNUhR0b8bxTD/wHeshzw
        "]], 
       LineBox[{{0.0010009157978029277`, 0.}, {0.001226810407675648, 
        1.2869594407041176`*^-17}, {0.0016896958779731106`, 0.}}], 
       LineBox[{{0.04140902504783396, 0.}, {0.041529278093033514`, 
        6.806542122011765*^-17}, {0.041861406673914185`, 0.}}]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> 
     FormBox["\"Divergence Removed? v2 for comparison\"", TraditionalForm], 
     PlotRange -> {{0., 0.9999999795918367}, {0, 0.1}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
0\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
1\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
2\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
3\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
4\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
10\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.814278462311835*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"p", " ", "-", 
   RowBox[{"2", " ", "0", " ", "or", " ", "something"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.804521800898731*^9, 3.804521816416125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multicolumn", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), \
1\)]\)(1-\!\(\*SuperscriptBox[\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \
\(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 2\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(p\), \(\(-2\), 3\)]\)(1-\!\(\*SuperscriptBox[\
\(e\), \(2\)]\)\!\(\*SuperscriptBox[\()\), \(3/2\)]\)\>\"", ",", 
      RowBox[{"Re", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".1"}], "}"}], ",", 
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".1"}], "}"}], ",", 
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".1"}], "}"}], ",", 
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".5"}], "}"}], ",", 
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".5"}], "}"}], ",", 
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".5"}], "}"}], ",", 
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9"}], "}"}], ",", 
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9"}], "}"}], ",", 
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9"}], "}"}], ",", 
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".999"}], "}"}], ",", 
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".999"}], "}"}], ",", 
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".999"}], "}"}], ",", 
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9999"}], "}"}], ",", 
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{"e", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9999"}], "}"}], ",", 
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{"e", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"e", "=", ".9999"}], "}"}], ",", 
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{"e", ",", "3"}], "]"}]}], "]"}]}], "}"}], "]"}]}], "}"}], 
    "]"}], ",", "6"}], "]"}]], "Input",
 CellChangeTimes->{{3.8045141679011087`*^9, 3.804514177416279*^9}, {
  3.804514371357263*^9, 3.8045144195185604`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
1\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"\>", 
     "0.0001298339411145503`", "0.012854393280133708`", 
     "0.01937376184599964`", "0.00006509416939333884`", 
     "2.225809258157967`*^-6"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
2\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"\>", 
     "0.00002597017501432056`", "0.012938951894179176`", 
     "0.037376213740573185`", "0.00015522103804192403`", 
     "5.366805576965678`*^-6"},
    {"\<\"\\!\\(\\*SubscriptBox[\\(p\\), \\(\\(-2\\), \
3\\)]\\)(1-\\!\\(\\*SuperscriptBox[\\(e\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\()\\), \\(3/2\\)]\\)\"\>", 
     "3.9411929971263625`*^-6", "0.00966900941542085`", 
     "0.05040892862429206`", "0.00024916506708689087`", 
     "8.690981782112263`*^-6"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.804514190995675*^9, 3.8045151526610594`*^9}]
}, Open  ]],

Cell["\<\
It kind of looks like -2 is just going to be consistently smaller than +2; \
maybe even at its maximum value it\[CloseCurlyQuote]ll be negligible?
Except +2 is specifically small near e=1. But still. I guess with that in \
mind I don\[CloseCurlyQuote]t need to know the maximum, but it might \
dominate. I can do for both. Or something. Yeah.
At the very least it kind of looks like for low e, we can drop -2 basically \
entirely, and maybe drop both of them past some value s. Anyway.\
\>", "Text",
 CellChangeTimes->{{3.804515216579728*^9, 3.804515240277731*^9}, {
  3.804515305745963*^9, 3.8045153134937725`*^9}, {3.8045153841771665`*^9, 
  3.804515526018506*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"NpMinus2NP", "[", 
      RowBox[{"e", ",", "s"}], "]"}], ",", 
     RowBox[{"s", "\[Rule]", "Infinity"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", ".9"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8045155348123426`*^9, 3.804515591520707*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ s\\\\ \\(\\((u - \\(\\(e\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(e\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^2\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045155929973373`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ s\\\\ \\(\\((u - \\(\\(e\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(e\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.8045155930652795`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], ":", 
  " ", "\<\"The integrand \
\[NoBreak]\\!\\(\[ExponentialE]\\^\\(\[ImaginaryI]\\\\ s\\\\ \\(\\((u - \
\\(\\(e\\\\ \\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(e\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804515593099243*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: inumr\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.804515593180169*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.804518866957651*^9}]
}, Open  ]],

Cell["And now, Chebyshev", "Text",
 CellChangeTimes->{{3.8060810961535616`*^9, 3.80608110796686*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mc", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Re", "[", 
     RowBox[{
      FractionBox["2", "\[Pi]"], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{"x", ",", "1"}], "]"}], "*", 
           FractionBox[
            RowBox[{"ChebyshevT", "[", 
             RowBox[{"n", ",", "x"}], "]"}], 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["x", "2"]}]]]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
          RowBox[{"PrecisionGoal", "\[Rule]", "2"}]}], "]"}], "-", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"NpMinus2NP", "[", 
            RowBox[{
             RowBox[{"-", "x"}], ",", "1"}], "]"}], "*", 
           FractionBox[
            RowBox[{"ChebyshevT", "[", 
             RowBox[{"n", ",", "x"}], "]"}], 
            SqrtBox[
             RowBox[{"1", "-", 
              SuperscriptBox["x", "2"]}]]]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"PrecisionGoal", "\[Rule]", "2"}]}], "]"}]}], ")"}]}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8060811197497888`*^9, 3.806081152762575*^9}, {
  3.8061504679595814`*^9, 3.8061505054382944`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^2\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.806081179631918*^9, 3.8061505096037054`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.806081179631918*^9, 3.80615050964067*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\
\[ImaginaryI]\\\\ \\(\\((u - \\(\\(x\\\\ \
\\(\\(Sin[u]\\)\\)\\)\\))\\)\\)\\)\\/\\((1 - \\(\\(x\\\\ \
\\(\\(Cos[u]\\)\\)\\)\\))\\)\\^4\\)\[NoBreak] has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({0, 6.283185307179586`}\\)}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", \
ButtonNote -> \\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.806081179631918*^9, 3.806150509683633*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: inumr\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.806081179631918*^9, 3.8061505097235937`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4.417437057588218`*^-18", ",", "0.017211143531898974`", ",", 
   "2.760898160992636`*^-19", ",", 
   RowBox[{"-", "0.009108466644712928`"}], ",", "1.1043592643970545`*^-18", 
   ",", 
   RowBox[{"-", "0.009250732166952965`"}], ",", 
   RowBox[{"-", "2.760898160992636`*^-19"}], ",", "0.000016349191221238587`", 
   ",", 
   RowBox[{"-", "8.282694482977908`*^-19"}], ",", "0.0003887570012496828`", 
   ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.806081641845948*^9, 3.806150724085946*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"NpMinus2NP", "[", 
       RowBox[{"x", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"First", "[", "mc", "]"}]}], "/", "2"}], "+", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"mc", ".", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ChebyshevT", "[", 
           RowBox[{
            RowBox[{"n", "-", "1"}], ",", "x"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", 
            RowBox[{"Length", "[", "mc", "]"}]}], "}"}]}], "]"}]}], "]"}]}]}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8060811236662865`*^9, 3.8060811700462217`*^9}, {
  3.8060817605119743`*^9, 3.8060817750567293`*^9}, {3.8061505287621503`*^9, 
  3.8061505319752874`*^9}, {3.806150766911539*^9, 3.8061507699840565`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
ZtI2QfBfEM9WYfhBRoH7+p2F+B/Tx8ov
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
SeCNwzvr723kWVhaYqFbReSsibNF/f8BuFaNYQ==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {-0.0007429437047874131, 0.05876950752900981}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.806081803189661*^9, 3.8061508733275585`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{958, 988},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (December 4, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 107, 1, 70, "Section"],
Cell[690, 25, 177, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[892, 31, 99, 1, 49, "Subsection"],
Cell[CellGroupData[{
Cell[1016, 36, 272, 7, 31, "Input",
 InitializationCell->True],
Cell[1291, 45, 552, 9, 56, "Output"]
}, Open  ]],
Cell[1858, 57, 1159, 32, 72, "Input",
 InitializationCell->True],
Cell[3020, 91, 773, 23, 31, "Input",
 InitializationCell->True],
Cell[3796, 116, 1342, 39, 72, "Input",
 InitializationCell->True],
Cell[5141, 157, 1012, 31, 52, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[6190, 193, 99, 1, 49, "Subsection"],
Cell[6292, 196, 264, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[6581, 205, 251, 5, 31, "Input",
 InitializationCell->True],
Cell[6835, 212, 520, 7, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7392, 224, 104, 1, 39, "Subsubsection"],
Cell[7499, 227, 104, 1, 30, "Text"],
Cell[7606, 230, 1266, 37, 72, "Input",
 InitializationCell->True],
Cell[8875, 269, 1325, 40, 72, "Input",
 InitializationCell->True],
Cell[10203, 311, 1370, 41, 72, "Input",
 InitializationCell->True],
Cell[11576, 354, 1311, 39, 72, "Input",
 InitializationCell->True],
Cell[12890, 395, 101, 1, 30, "Text"],
Cell[12994, 398, 1058, 31, 31, "Input",
 InitializationCell->True],
Cell[14055, 431, 1147, 35, 52, "Input",
 InitializationCell->True],
Cell[15205, 468, 1192, 36, 72, "Input",
 InitializationCell->True],
Cell[16400, 506, 1127, 33, 52, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[17564, 544, 108, 1, 39, "Subsubsection"],
Cell[17675, 547, 452, 7, 68, "Text"],
Cell[18130, 556, 92, 1, 30, "Text"],
Cell[18225, 559, 748, 23, 31, "Input",
 InitializationCell->True],
Cell[18976, 584, 716, 21, 31, "Input",
 InitializationCell->True],
Cell[19695, 607, 694, 21, 31, "Input",
 InitializationCell->True],
Cell[20392, 630, 636, 19, 31, "Input",
 InitializationCell->True],
Cell[21031, 651, 967, 29, 52, "Input",
 InitializationCell->True],
Cell[22001, 682, 932, 28, 52, "Input",
 InitializationCell->True],
Cell[22936, 712, 91, 1, 30, "Text"],
Cell[23030, 715, 804, 23, 31, "Input",
 InitializationCell->True],
Cell[23837, 740, 776, 22, 31, "Input",
 InitializationCell->True],
Cell[24616, 764, 799, 22, 31, "Input",
 InitializationCell->True],
Cell[25418, 788, 763, 20, 31, "Input",
 InitializationCell->True],
Cell[26184, 810, 971, 29, 52, "Input",
 InitializationCell->True],
Cell[27158, 841, 897, 28, 52, "Input",
 InitializationCell->True],
Cell[28058, 871, 966, 28, 52, "Input",
 InitializationCell->True],
Cell[29027, 901, 890, 26, 52, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[29978, 934, 105, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[30108, 939, 146, 3, 31, "Input"],
Cell[30257, 944, 369, 11, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30663, 960, 203, 4, 31, "Input"],
Cell[30869, 966, 252, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31158, 976, 150, 3, 31, "Input"],
Cell[31311, 981, 933, 31, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32281, 1017, 1242, 37, 60, "Input"],
Cell[33526, 1056, 223, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33786, 1066, 190, 4, 31, "Input"],
Cell[33979, 1072, 217, 5, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34245, 1083, 100, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[34370, 1088, 322, 8, 31, "Input"],
Cell[34695, 1098, 4213, 81, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38945, 1184, 1276, 33, 52, "Input"],
Cell[40224, 1219, 981, 19, 59, "Message"],
Cell[41208, 1240, 931, 17, 50, "Message"],
Cell[42142, 1259, 50808, 935, 255, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92987, 2199, 703, 18, 31, "Input"],
Cell[93693, 2219, 451, 9, 21, "Message"],
Cell[94147, 2230, 453, 9, 21, "Message"],
Cell[94603, 2241, 453, 9, 21, "Message"],
Cell[95059, 2252, 554, 11, 21, "Message"],
Cell[95616, 2265, 703, 13, 55, "Message"],
Cell[96322, 2280, 1100, 28, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97459, 2313, 1650, 41, 101, "Input"],
Cell[99112, 2356, 916, 16, 50, "Message"],
Cell[100031, 2374, 629, 12, 39, "Message"],
Cell[100663, 2388, 925, 17, 42, "Message"],
Cell[101591, 2407, 43859, 824, 253, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145487, 3236, 100, 1, 39, "Subsubsection"],
Cell[145590, 3239, 157, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[145772, 3246, 1526, 43, 240, "Input"],
Cell[147301, 3291, 838, 15, 75, "Message"],
Cell[148142, 3308, 838, 15, 75, "Message"],
Cell[148983, 3325, 840, 15, 75, "Message"],
Cell[149826, 3342, 584, 12, 21, "Message"],
Cell[150413, 3356, 990, 19, 59, "Message"],
Cell[151406, 3377, 1015, 19, 59, "Message"],
Cell[152424, 3398, 992, 19, 59, "Message"],
Cell[153419, 3419, 583, 12, 21, "Message"],
Cell[154005, 3433, 646, 14, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154688, 3452, 850, 25, 52, "Input"],
Cell[155541, 3479, 5913, 110, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161491, 3594, 1473, 42, 240, "Input"],
Cell[162967, 3638, 847, 15, 75, "Message"],
Cell[163817, 3655, 847, 15, 75, "Message"],
Cell[164667, 3672, 849, 15, 75, "Message"],
Cell[165519, 3689, 585, 12, 21, "Message"],
Cell[166107, 3703, 993, 19, 59, "Message"],
Cell[167103, 3724, 996, 18, 59, "Message"],
Cell[168102, 3744, 996, 19, 59, "Message"],
Cell[169101, 3765, 586, 12, 21, "Message"],
Cell[169690, 3779, 506, 10, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170233, 3794, 848, 25, 52, "Input"],
Cell[171084, 3821, 8459, 151, 236, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[179582, 3977, 103, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[179710, 3982, 215, 3, 46, "Section"],
Cell[179928, 3987, 182, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[180135, 3993, 141, 1, 47, "Subsection"],
Cell[180279, 3996, 84, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[180388, 4001, 1946, 47, 92, "Input"],
Cell[182337, 4050, 862, 16, 43, "Message"],
Cell[183202, 4068, 631, 12, 39, "Message"],
Cell[183836, 4082, 857, 16, 41, "Message"],
Cell[184696, 4100, 911, 17, 42, "Message"],
Cell[185610, 4119, 584, 12, 21, "Message"],
Cell[186197, 4133, 629, 12, 39, "Message"],
Cell[186829, 4147, 629, 12, 39, "Message"],
Cell[187461, 4161, 586, 12, 21, "Message"],
Cell[188050, 4175, 68955, 1253, 251, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[257042, 5433, 1828, 45, 92, "Input"],
Cell[258873, 5480, 864, 16, 43, "Message"],
Cell[259740, 5498, 628, 12, 39, "Message"],
Cell[260371, 5512, 857, 16, 41, "Message"],
Cell[261231, 5530, 913, 17, 42, "Message"],
Cell[262147, 5549, 586, 12, 21, "Message"],
Cell[262736, 5563, 631, 12, 39, "Message"],
Cell[263370, 5577, 631, 12, 39, "Message"],
Cell[264004, 5591, 588, 12, 21, "Message"],
Cell[264595, 5605, 71035, 1286, 248, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[335679, 6897, 138, 1, 47, "Subsection"],
Cell[CellGroupData[{
Cell[335842, 6902, 2590, 55, 124, "Input"],
Cell[338435, 6959, 881, 16, 43, "Message"],
Cell[339319, 6977, 648, 12, 39, "Message"],
Cell[339970, 6991, 872, 16, 41, "Message"],
Cell[340845, 7009, 928, 17, 42, "Message"],
Cell[341776, 7028, 601, 12, 21, "Message"],
Cell[342380, 7042, 646, 12, 39, "Message"],
Cell[343029, 7056, 645, 12, 39, "Message"],
Cell[343677, 7070, 603, 12, 21, "Message"],
Cell[344283, 7084, 75552, 1363, 248, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[419872, 8452, 685, 21, 31, "Input"],
Cell[420560, 8475, 258, 7, 31, "Output"]
}, Open  ]],
Cell[420833, 8485, 290, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[421148, 8495, 630, 20, 31, "Input"],
Cell[421781, 8517, 429, 9, 21, "Message"],
Cell[422213, 8528, 429, 9, 21, "Message"],
Cell[422645, 8539, 427, 9, 21, "Message"],
Cell[423075, 8550, 530, 11, 21, "Message"],
Cell[423608, 8563, 681, 13, 55, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[424326, 8581, 190, 4, 31, "Input"],
Cell[424519, 8587, 164, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[424720, 8596, 193, 4, 31, "Input"],
Cell[424916, 8602, 399, 12, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[425352, 8619, 635, 18, 31, "Input"],
Cell[425990, 8639, 427, 9, 21, "Message"],
Cell[426420, 8650, 429, 9, 21, "Message"],
Cell[426852, 8661, 429, 9, 21, "Message"],
Cell[427284, 8672, 530, 11, 21, "Message"],
Cell[427817, 8685, 681, 13, 55, "Message"]
}, Open  ]],
Cell[428513, 8701, 95, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[428633, 8706, 2405, 52, 124, "Input"],
Cell[431041, 8760, 862, 16, 43, "Message"],
Cell[431906, 8778, 626, 12, 39, "Message"],
Cell[432535, 8792, 855, 16, 41, "Message"],
Cell[433393, 8810, 909, 17, 42, "Message"],
Cell[434305, 8829, 581, 12, 21, "Message"],
Cell[434889, 8843, 627, 12, 39, "Message"],
Cell[435519, 8857, 629, 12, 39, "Message"],
Cell[436151, 8871, 586, 12, 21, "Message"],
Cell[436740, 8885, 63091, 1160, 248, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[499868, 10050, 635, 20, 31, "Input"],
Cell[500506, 10072, 212, 6, 31, "Output"]
}, Open  ]],
Cell[500733, 10081, 87, 1, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[500857, 10087, 189, 2, 49, "Subsection"],
Cell[CellGroupData[{
Cell[501071, 10093, 314, 9, 31, "Input"],
Cell[501388, 10104, 3686, 76, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[505111, 10185, 521, 14, 31, "Input"],
Cell[505635, 10201, 15788, 272, 229, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[521460, 10478, 393, 12, 31, "Input"],
Cell[521856, 10492, 865, 16, 42, "Message"],
Cell[522724, 10510, 22995, 391, 229, "Output"]
}, Open  ]],
Cell[545734, 10904, 228, 5, 30, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[546011, 10915, 205, 3, 60, "Section"],
Cell[CellGroupData[{
Cell[546241, 10922, 1753, 48, 112, "Input"],
Cell[547997, 10972, 624, 14, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[548658, 10991, 1444, 36, 72, "Input"],
Cell[550105, 11029, 837, 15, 43, "Message"],
Cell[550945, 11046, 601, 11, 39, "Message"],
Cell[551549, 11059, 828, 15, 41, "Message"],
Cell[552380, 11076, 958, 18, 59, "Message"],
Cell[553341, 11096, 557, 11, 21, "Message"],
Cell[553901, 11109, 602, 11, 39, "Message"],
Cell[554506, 11122, 602, 11, 39, "Message"],
Cell[555111, 11135, 561, 11, 21, "Message"],
Cell[555675, 11148, 91126, 1612, 246, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[646838, 12765, 604, 11, 31, "Input"],
Cell[647445, 12778, 601, 11, 21, "Message"],
Cell[648049, 12791, 599, 11, 21, "Message"],
Cell[648651, 12804, 601, 11, 21, "Message"],
Cell[649255, 12817, 702, 13, 21, "Message"],
Cell[649960, 12832, 853, 15, 55, "Message"],
Cell[650816, 12849, 851, 15, 55, "Message"],
Cell[651670, 12866, 244, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[651951, 12874, 4663, 123, 212, "Input"],
Cell[656617, 12999, 908, 17, 43, "Message"],
Cell[657528, 13018, 910, 17, 43, "Message"],
Cell[658441, 13037, 907, 17, 43, "Message"],
Cell[659351, 13056, 584, 12, 21, "Message"],
Cell[659938, 13070, 1235, 26, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[661210, 13101, 1460, 39, 92, "Input"],
Cell[662673, 13142, 648, 14, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[663358, 13161, 1998, 53, 92, "Input"],
Cell[665359, 13216, 908, 17, 43, "Message"],
Cell[666270, 13235, 677, 13, 39, "Message"],
Cell[666950, 13250, 903, 17, 41, "Message"],
Cell[667856, 13269, 1029, 20, 59, "Message"],
Cell[668888, 13291, 630, 13, 21, "Message"],
Cell[669521, 13306, 677, 13, 39, "Message"],
Cell[670201, 13321, 677, 13, 39, "Message"],
Cell[670881, 13336, 634, 13, 21, "Message"],
Cell[671518, 13351, 91261, 1618, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[762816, 14974, 231, 7, 31, "Input"],
Cell[763050, 14983, 925, 18, 59, "Message"],
Cell[763978, 15003, 578, 11, 39, "Message"],
Cell[764559, 15016, 931, 18, 59, "Message"],
Cell[765493, 15036, 781, 15, 84, "Message"],
Cell[766277, 15053, 580, 11, 39, "Message"],
Cell[766860, 15066, 944, 18, 59, "Message"],
Cell[767807, 15086, 535, 11, 21, "Message"],
Cell[768345, 15099, 578, 11, 39, "Message"],
Cell[768926, 15112, 537, 11, 21, "Message"],
Cell[769466, 15125, 168, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[769671, 15133, 235, 7, 31, "Input"],
Cell[769909, 15142, 927, 18, 59, "Message"],
Cell[770839, 15162, 578, 11, 39, "Message"],
Cell[771420, 15175, 929, 18, 59, "Message"],
Cell[772352, 15195, 783, 15, 84, "Message"],
Cell[773138, 15212, 580, 11, 39, "Message"],
Cell[773721, 15225, 944, 18, 59, "Message"],
Cell[774668, 15245, 533, 11, 21, "Message"],
Cell[775204, 15258, 580, 11, 39, "Message"],
Cell[775787, 15271, 537, 11, 21, "Message"],
Cell[776327, 15284, 153, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[776517, 15292, 2126, 47, 101, "Input"],
Cell[778646, 15341, 833, 15, 43, "Message"],
Cell[779482, 15358, 600, 11, 39, "Message"],
Cell[780085, 15371, 815, 14, 41, "Message"],
Cell[780903, 15387, 943, 17, 59, "Message"],
Cell[781849, 15406, 557, 11, 21, "Message"],
Cell[782409, 15419, 602, 11, 39, "Message"],
Cell[783014, 15432, 602, 11, 39, "Message"],
Cell[783619, 15445, 557, 11, 21, "Message"],
Cell[784179, 15458, 108560, 1901, 254, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[892776, 17364, 1972, 46, 101, "Input"],
Cell[894751, 17412, 813, 15, 43, "Message"],
Cell[895567, 17429, 580, 11, 39, "Message"],
Cell[896150, 17442, 803, 15, 41, "Message"],
Cell[896956, 17459, 932, 18, 59, "Message"],
Cell[897891, 17479, 535, 11, 21, "Message"],
Cell[898429, 17492, 577, 11, 39, "Message"],
Cell[899009, 17505, 580, 11, 39, "Message"],
Cell[899592, 17518, 537, 11, 21, "Message"],
Cell[900132, 17531, 106827, 1875, 247, "Output"]
}, Open  ]],
Cell[1006974, 19409, 450, 14, 31, "Input"],
Cell[CellGroupData[{
Cell[1007449, 19427, 681, 18, 31, "Input"],
Cell[1008133, 19447, 145, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1008315, 19454, 483, 15, 31, "Input"],
Cell[1008801, 19471, 427, 9, 21, "Message"],
Cell[1009231, 19482, 427, 9, 21, "Message"],
Cell[1009661, 19493, 429, 9, 21, "Message"],
Cell[1010093, 19504, 530, 11, 21, "Message"],
Cell[1010626, 19517, 679, 13, 55, "Message"],
Cell[1011308, 19532, 77, 1, 31, "Output"]
}, Open  ]],
Cell[1011400, 19536, 122, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[1011547, 19541, 429, 8, 31, "Input"],
Cell[1011979, 19551, 429, 9, 21, "Message"],
Cell[1012411, 19562, 429, 9, 21, "Message"],
Cell[1012843, 19573, 429, 9, 21, "Message"],
Cell[1013275, 19584, 530, 11, 21, "Message"],
Cell[1013808, 19597, 681, 13, 55, "Message"],
Cell[1014492, 19612, 679, 13, 55, "Message"],
Cell[1015174, 19627, 133, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1015344, 19634, 104, 1, 39, "Subsubsection"],
Cell[1015451, 19637, 306, 6, 49, "Text"],
Cell[1015760, 19645, 241, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[1016026, 19653, 751, 22, 68, "Input"],
Cell[1016780, 19677, 79, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1016896, 19683, 758, 22, 68, "Input"],
Cell[1017657, 19707, 375, 9, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1018069, 19721, 758, 22, 68, "Input"],
Cell[1018830, 19745, 415, 9, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1019282, 19759, 754, 22, 68, "Input"],
Cell[1020039, 19783, 417, 9, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1020493, 19797, 846, 25, 52, "Input"],
Cell[1021342, 19824, 12124, 210, 212, "Output"]
}, Open  ]],
Cell[1033481, 20037, 138, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[1033644, 20042, 1296, 30, 68, "Input"],
Cell[1034943, 20074, 1038, 18, 55, "Message"],
Cell[1035984, 20094, 1038, 18, 55, "Message"],
Cell[1037025, 20114, 1038, 18, 55, "Message"],
Cell[1038066, 20134, 824, 15, 21, "Message"],
Cell[1038893, 20151, 616, 11, 31, "Output"]
}, Open  ]],
Cell[1039524, 20165, 231, 4, 30, "Text"],
Cell[1039758, 20171, 283, 6, 52, "Input"],
Cell[1040044, 20179, 267, 6, 52, "Input"],
Cell[1040314, 20187, 263, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[1040602, 20196, 1161, 27, 101, "Input"],
Cell[1041766, 20225, 1095, 19, 55, "Message"],
Cell[1042864, 20246, 1093, 19, 55, "Message"],
Cell[1043960, 20267, 1092, 19, 55, "Message"],
Cell[1045055, 20288, 876, 16, 21, "Message"],
Cell[1045934, 20306, 460, 7, 31, "Output"]
}, Open  ]],
Cell[1046409, 20316, 150, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[1046584, 20323, 1595, 44, 240, "Input"],
Cell[1048182, 20369, 845, 15, 55, "Message"],
Cell[1049030, 20386, 847, 15, 55, "Message"],
Cell[1049880, 20403, 847, 15, 55, "Message"],
Cell[1050730, 20420, 631, 12, 21, "Message"],
Cell[1051364, 20434, 626, 12, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1052027, 20451, 207, 5, 31, "Input"],
Cell[1052237, 20458, 156, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1052430, 20466, 127, 2, 31, "Input"],
Cell[1052560, 20470, 107, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1052704, 20477, 450, 15, 31, "Input"],
Cell[1053157, 20494, 1036, 32, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1054230, 20531, 683, 21, 31, "Input"],
Cell[1054916, 20554, 790, 24, 34, "Output"]
}, Open  ]],
Cell[1055721, 20581, 161, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[1055907, 20587, 1072, 28, 52, "Input"],
Cell[1056982, 20617, 12762, 220, 227, "Output"]
}, Open  ]],
Cell[1069759, 20840, 108, 1, 30, "Text"],
Cell[1069870, 20843, 1005, 30, 72, "Input"],
Cell[CellGroupData[{
Cell[1070900, 20877, 1655, 45, 240, "Input"],
Cell[1072558, 20924, 855, 15, 55, "Message"],
Cell[1073416, 20941, 857, 15, 55, "Message"],
Cell[1074276, 20958, 857, 15, 55, "Message"],
Cell[1075136, 20975, 632, 12, 21, "Message"],
Cell[1075771, 20989, 620, 11, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1076428, 21005, 1036, 28, 52, "Input"],
Cell[1077467, 21035, 15378, 264, 237, "Output"]
}, Open  ]],
Cell[1092860, 21302, 173, 2, 30, "Text"],
Cell[1093036, 21306, 377, 7, 49, "Text"],
Cell[CellGroupData[{
Cell[1093438, 21317, 1251, 32, 101, "Input"],
Cell[1094692, 21351, 878, 16, 55, "Message"],
Cell[1095573, 21369, 878, 16, 55, "Message"],
Cell[1096454, 21387, 878, 16, 55, "Message"],
Cell[1097335, 21405, 656, 13, 21, "Message"],
Cell[1097994, 21420, 718, 14, 52, "Output"]
}, Open  ]],
Cell[1098727, 21437, 291, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[1099043, 21446, 533, 16, 31, "Input"],
Cell[1099579, 21464, 1037, 32, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1100653, 21501, 391, 11, 31, "Input"],
Cell[1101047, 21514, 297, 9, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1101381, 21528, 1225, 33, 92, "Input"],
Cell[1102609, 21563, 15678, 268, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1118324, 21836, 1527, 43, 240, "Input"],
Cell[1119854, 21881, 782, 14, 55, "Message"],
Cell[1120639, 21897, 782, 14, 55, "Message"],
Cell[1121424, 21913, 782, 14, 55, "Message"],
Cell[1122209, 21929, 560, 11, 21, "Message"],
Cell[1122772, 21942, 456, 9, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1123265, 21956, 837, 25, 52, "Input"],
Cell[1124105, 21983, 956, 18, 59, "Message"],
Cell[1125064, 22003, 884, 16, 42, "Message"],
Cell[1125951, 22021, 19017, 323, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1145005, 22349, 1676, 45, 240, "Input"],
Cell[1146684, 22396, 883, 16, 55, "Message"],
Cell[1147570, 22414, 885, 16, 55, "Message"],
Cell[1148458, 22432, 883, 16, 55, "Message"],
Cell[1149344, 22450, 659, 13, 21, "Message"],
Cell[1150006, 22465, 705, 13, 39, "Message"],
Cell[1150714, 22480, 1067, 20, 59, "Message"],
Cell[1151784, 22502, 703, 13, 39, "Message"],
Cell[1152490, 22517, 1059, 20, 59, "Message"],
Cell[1153552, 22539, 705, 13, 39, "Message"],
Cell[1154260, 22554, 660, 13, 21, "Message"],
Cell[1154923, 22569, 1062, 19, 59, "Message"],
Cell[1155988, 22590, 658, 13, 21, "Message"],
Cell[1156649, 22605, 1343, 24, 104, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1158029, 22634, 236, 5, 31, "Input"],
Cell[1158268, 22641, 592, 11, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1158897, 22657, 174, 4, 31, "Input"],
Cell[1159074, 22663, 1093, 19, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1160204, 22687, 403, 12, 31, "Input"],
Cell[1160610, 22701, 4372, 138, 168, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1165019, 22844, 1253, 31, 72, "Input"],
Cell[1166275, 22877, 22650, 383, 227, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1188962, 23265, 1040, 28, 52, "Input"],
Cell[1190005, 23295, 25851, 434, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1215893, 23734, 95, 1, 31, "Input"],
Cell[1215991, 23737, 1222, 22, 104, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1217250, 23764, 716, 20, 52, "Input"],
Cell[1217969, 23786, 25761, 433, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1243767, 24224, 852, 25, 52, "Input"],
Cell[1244622, 24251, 602, 11, 39, "Message"],
Cell[1245227, 24264, 889, 16, 42, "Message"],
Cell[1246119, 24282, 604, 11, 39, "Message"],
Cell[1246726, 24295, 886, 16, 42, "Message"],
Cell[1247615, 24313, 969, 18, 59, "Message"],
Cell[1248587, 24333, 559, 11, 21, "Message"],
Cell[1249149, 24346, 604, 11, 39, "Message"],
Cell[1249756, 24359, 561, 11, 21, "Message"],
Cell[1250320, 24372, 65400, 1085, 227, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1315757, 25462, 1485, 42, 240, "Input"],
Cell[1317245, 25506, 760, 14, 55, "Message"],
Cell[1318008, 25522, 760, 14, 55, "Message"],
Cell[1318771, 25538, 758, 14, 55, "Message"],
Cell[1319532, 25554, 536, 11, 21, "Message"],
Cell[1320071, 25567, 540, 11, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1320648, 25583, 920, 27, 92, "Input"],
Cell[1321571, 25612, 15616, 266, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1337224, 25883, 929, 24, 72, "Input"],
Cell[1338156, 25909, 16568, 282, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1354761, 26196, 1137, 32, 72, "Input"],
Cell[1355901, 26230, 18322, 310, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1374260, 26545, 1538, 43, 92, "Input"],
Cell[1375801, 26590, 24233, 408, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1400071, 27003, 964, 26, 92, "Input"],
Cell[1401038, 27031, 20713, 349, 227, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1421788, 27385, 384, 10, 31, "Input"],
Cell[1422175, 27397, 580, 11, 39, "Message"],
Cell[1422758, 27410, 867, 16, 42, "Message"],
Cell[1423628, 27428, 580, 11, 39, "Message"],
Cell[1424211, 27441, 862, 16, 42, "Message"],
Cell[1425076, 27459, 947, 18, 59, "Message"],
Cell[1426026, 27479, 533, 11, 21, "Message"],
Cell[1426562, 27492, 578, 11, 39, "Message"],
Cell[1427143, 27505, 537, 11, 21, "Message"],
Cell[1427683, 27518, 48487, 805, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1476207, 28328, 1330, 37, 72, "Input"],
Cell[1477540, 28367, 48868, 813, 237, "Output"]
}, Open  ]],
Cell[1526423, 29183, 208, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[1526656, 29191, 1540, 43, 240, "Input"],
Cell[1528199, 29236, 758, 14, 55, "Message"],
Cell[1528960, 29252, 760, 14, 55, "Message"],
Cell[1529723, 29268, 760, 14, 55, "Message"],
Cell[1530486, 29284, 534, 11, 21, "Message"],
Cell[1531023, 29297, 272, 6, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1531332, 29308, 1491, 42, 240, "Input"],
Cell[1532826, 29352, 758, 14, 55, "Message"],
Cell[1533587, 29368, 758, 14, 55, "Message"],
Cell[1534348, 29384, 760, 14, 55, "Message"],
Cell[1535111, 29400, 536, 11, 21, "Message"],
Cell[1535650, 29413, 248, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1535935, 29423, 218, 5, 31, "Input"],
Cell[1536156, 29430, 900, 17, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1537093, 29452, 1544, 43, 240, "Input"],
Cell[1538640, 29497, 756, 14, 55, "Message"],
Cell[1539399, 29513, 758, 14, 55, "Message"],
Cell[1540160, 29529, 760, 14, 55, "Message"],
Cell[1540923, 29545, 534, 11, 21, "Message"],
Cell[1541460, 29558, 495, 11, 52, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1542004, 29575, 139, 1, 49, "Subsection"],
Cell[CellGroupData[{
Cell[1542168, 29580, 363, 10, 31, "Input"],
Cell[1542534, 29592, 580, 11, 39, "Message"],
Cell[1543117, 29605, 863, 16, 42, "Message"],
Cell[1543983, 29623, 578, 11, 39, "Message"],
Cell[1544564, 29636, 866, 16, 42, "Message"],
Cell[1545433, 29654, 580, 11, 39, "Message"],
Cell[1546016, 29667, 537, 11, 21, "Message"],
Cell[1546556, 29680, 879, 16, 42, "Message"],
Cell[1547438, 29698, 535, 11, 21, "Message"],
Cell[1547976, 29711, 79, 1, 31, "Output"]
}, Open  ]],
Cell[1548070, 29715, 97, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[1548192, 29720, 386, 10, 31, "Input"],
Cell[1548581, 29732, 577, 11, 39, "Message"],
Cell[1549161, 29745, 933, 17, 59, "Message"],
Cell[1550097, 29764, 580, 11, 39, "Message"],
Cell[1550680, 29777, 932, 17, 59, "Message"],
Cell[1551615, 29796, 578, 11, 39, "Message"],
Cell[1552196, 29809, 537, 11, 21, "Message"],
Cell[1552736, 29822, 933, 17, 59, "Message"],
Cell[1553672, 29841, 533, 11, 21, "Message"],
Cell[1554208, 29854, 79, 1, 31, "Output"]
}, Open  ]],
Cell[1554302, 29858, 95, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[1554422, 29863, 388, 10, 31, "Input"],
Cell[1554813, 29875, 2579, 53, 243, "Output"]
}, Open  ]],
Cell[1557407, 29931, 98, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[1557530, 29936, 387, 10, 31, "Input"],
Cell[1557920, 29948, 13923, 238, 235, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1571880, 30191, 442, 11, 31, "Input"],
Cell[1572325, 30204, 14314, 245, 235, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1586676, 30454, 385, 10, 31, "Input"],
Cell[1587064, 30466, 9281, 163, 235, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1596382, 30634, 361, 10, 31, "Input"],
Cell[1596746, 30646, 11296, 196, 235, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1608103, 30849, 156, 2, 60, "Section"],
Cell[1608262, 30853, 1448, 36, 72, "Input"],
Cell[CellGroupData[{
Cell[1609735, 30893, 1645, 40, 92, "Input"],
Cell[1611383, 30935, 862, 16, 43, "Message"],
Cell[1612248, 30953, 629, 12, 39, "Message"],
Cell[1612880, 30967, 855, 16, 41, "Message"],
Cell[1613738, 30985, 981, 19, 59, "Message"],
Cell[1614722, 31006, 584, 12, 21, "Message"],
Cell[1615309, 31020, 629, 12, 39, "Message"],
Cell[1615941, 31034, 627, 12, 39, "Message"],
Cell[1616571, 31048, 584, 12, 21, "Message"],
Cell[1617158, 31062, 110079, 1936, 276, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1727274, 33003, 3996, 105, 172, "Input"],
Cell[1731273, 33110, 951, 17, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1732261, 33132, 2086, 47, 101, "Input"],
Cell[1734350, 33181, 813, 15, 43, "Message"],
Cell[1735166, 33198, 580, 11, 39, "Message"],
Cell[1735749, 33211, 804, 15, 41, "Message"],
Cell[1736556, 33228, 932, 18, 59, "Message"],
Cell[1737491, 33248, 533, 11, 21, "Message"],
Cell[1738027, 33261, 577, 11, 39, "Message"],
Cell[1738607, 33274, 578, 11, 39, "Message"],
Cell[1739188, 33287, 535, 11, 21, "Message"],
Cell[1739726, 33300, 122585, 2133, 250, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1862348, 35438, 2061, 48, 101, "Input"],
Cell[1864412, 35488, 813, 15, 43, "Message"],
Cell[1865228, 35505, 580, 11, 39, "Message"],
Cell[1865811, 35518, 804, 15, 41, "Message"],
Cell[1866618, 35535, 934, 18, 59, "Message"],
Cell[1867555, 35555, 533, 11, 21, "Message"],
Cell[1868091, 35568, 580, 11, 39, "Message"],
Cell[1868674, 35581, 580, 11, 39, "Message"],
Cell[1869257, 35594, 535, 11, 21, "Message"],
Cell[1869795, 35607, 111516, 1966, 266, "Output"]
}, Open  ]],
Cell[1981326, 37576, 212, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[1981563, 37584, 4168, 108, 181, "Input"],
Cell[1985734, 37694, 1233, 25, 70, "Output"]
}, Open  ]],
Cell[1986982, 37722, 677, 11, 106, "Text"],
Cell[CellGroupData[{
Cell[1987684, 37737, 369, 10, 31, "Input"],
Cell[1988056, 37749, 758, 14, 55, "Message"],
Cell[1988817, 37765, 758, 14, 55, "Message"],
Cell[1989578, 37781, 743, 13, 55, "Message"],
Cell[1990324, 37796, 534, 11, 21, "Message"],
Cell[1990861, 37809, 77, 1, 31, "Output"]
}, Open  ]],
Cell[1990953, 37813, 101, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[1991079, 37818, 1529, 43, 240, "Input"],
Cell[1992611, 37863, 774, 14, 55, "Message"],
Cell[1993388, 37879, 771, 14, 55, "Message"],
Cell[1994162, 37895, 772, 14, 55, "Message"],
Cell[1994937, 37911, 558, 11, 21, "Message"],
Cell[1995498, 37924, 539, 12, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1996074, 37941, 996, 27, 52, "Input"],
Cell[1997073, 37970, 17676, 301, 230, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
